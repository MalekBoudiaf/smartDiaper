ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB146:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 35


  43 0004 4FF02003 			mov r3, #32												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE146:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB174:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE174:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB173:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 73


 185              	.LFE173:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB137:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 062F     		cmp	r7, #6
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 0627     		movs	r7, #6
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F10703 		rsb	r3, r7, #7
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE137:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB171:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 062C     		cmp	r4, #6
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F1BC06 		add	r6, r4, #188
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F1D005 		add	r5, r4, #208
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F1E400 		add	r0, r4, #228
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8F850 		str	r5, [r4, #248]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE171:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB138:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F8FC20 		ldr	r2, [r3, #252]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80031 		ldr	r3, [r3, #256]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F8FC30 		ldr	r3, [r3, #252]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80431 		ldr	r3, [r3, #260]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80031 		ldr	r3, [r3, #256]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80041 		str	r4, [r3, #256]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80831 		ldr	r3, [r2, #264]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80831 		str	r3, [r2, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F80C21 		ldr	r2, [r2, #268]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F80C31 		str	r3, [r2, #268]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80431 		ldr	r3, [r5, #260]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80031 		ldr	r3, [r5, #256]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE138:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB172:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F030 		ldr	r3, [r4, #240]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F8FC30 		ldr	r3, [r4, #252]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81031 		ldr	r3, [r4, #272]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81031 		ldr	r3, [r3, #272]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 81


 573              		.cfi_endproc
 574              	.LFE172:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvIdleTask,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvIdleTask, %function
 581              	prvIdleTask:
 582              	.LFB168:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 583              		.loc 1 3236 0
 584              		.cfi_startproc
 585              		@ Volatile: function does not return.
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              	.LVL54:
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              	.LVL55:
 594              	.L54:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595              		.loc 1 3252 0
 596 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 597              	.LVL56:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 598              		.loc 1 3275 0
 599 0006 064B     		ldr	r3, .L57
 600 0008 1B6B     		ldr	r3, [r3, #48]
 601 000a 012B     		cmp	r3, #1
 602 000c F9D9     		bls	.L54
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 603              		.loc 1 3277 0
 604 000e 4FF08052 		mov	r2, #268435456
 605 0012 044B     		ldr	r3, .L57+4
 606 0014 1A60     		str	r2, [r3]
 607              		.syntax unified
 608              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 609 0016 BFF34F8F 		dsb
 610              	@ 0 "" 2
 611              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 612 001a BFF36F8F 		isb
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616 001e F0E7     		b	.L54
 617              	.L58:
 618              		.align	2
 619              	.L57:
 620 0020 00000000 		.word	.LANCHOR0
 621 0024 04ED00E0 		.word	-536810236
 622              		.cfi_endproc
 623              	.LFE168:
 624              		.size	prvIdleTask, .-prvIdleTask
 625              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 82


 626              		.align	2
 627              		.thumb
 628              		.thumb_func
 629              		.type	prvAddCurrentTaskToDelayedList, %function
 630              	prvAddCurrentTaskToDelayedList:
 631              	.LFB184:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 83


3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 84


3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 85


3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 86


3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 87


4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 88


4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 89


4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 90


4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 91


4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 92


4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 93


4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 94


4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 95


4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 96


4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 97


4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 98


4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 99


4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 100


4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 101


4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 102


4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 632              		.loc 1 4924 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL57:
 637 0000 70B5     		push	{r4, r5, r6, lr}
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0446     		mov	r4, r0
 644 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 645              		.loc 1 4926 0
 646 0006 174B     		ldr	r3, .L64
 647 0008 D3F81451 		ldr	r5, [r3, #276]
 648              	.LVL58:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 103


4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 649              		.loc 1 4939 0
 650 000c D3F80001 		ldr	r0, [r3, #256]
 651              	.LVL59:
 652 0010 0430     		adds	r0, r0, #4
 653 0012 FFF7FEFF 		bl	uxListRemove
 654              	.LVL60:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 655              		.loc 1 4952 0
 656 0016 B4F1FF3F 		cmp	r4, #-1
 657 001a 07D1     		bne	.L60
 658              		.loc 1 4952 0 is_stmt 0 discriminator 1
 659 001c 36B1     		cbz	r6, .L60
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 660              		.loc 1 4957 0 is_stmt 1
 661 001e 1148     		ldr	r0, .L64
 662 0020 D0F80011 		ldr	r1, [r0, #256]
 663 0024 0431     		adds	r1, r1, #4
 664 0026 FFF7FEFF 		bl	vListInsertEnd
 665              	.LVL61:
 666 002a 70BD     		pop	{r4, r5, r6, pc}
 667              	.LVL62:
 668              	.L60:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 669              		.loc 1 4964 0
 670 002c 2C44     		add	r4, r4, r5
 671              	.LVL63:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 672              		.loc 1 4967 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 104


 673 002e 0D4B     		ldr	r3, .L64
 674 0030 D3F80031 		ldr	r3, [r3, #256]
 675 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 676              		.loc 1 4969 0
 677 0036 A542     		cmp	r5, r4
 678 0038 08D9     		bls	.L62
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 679              		.loc 1 4973 0
 680 003a 0A4B     		ldr	r3, .L64
 681 003c D3F8F800 		ldr	r0, [r3, #248]
 682 0040 D3F80011 		ldr	r1, [r3, #256]
 683 0044 0431     		adds	r1, r1, #4
 684 0046 FFF7FEFF 		bl	vListInsert
 685              	.LVL64:
 686 004a 70BD     		pop	{r4, r5, r6, pc}
 687              	.LVL65:
 688              	.L62:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 689              		.loc 1 4979 0
 690 004c 054D     		ldr	r5, .L64
 691              	.LVL66:
 692 004e A86A     		ldr	r0, [r5, #40]
 693 0050 D5F80011 		ldr	r1, [r5, #256]
 694 0054 0431     		adds	r1, r1, #4
 695 0056 FFF7FEFF 		bl	vListInsert
 696              	.LVL67:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 697              		.loc 1 4984 0
 698 005a EB6A     		ldr	r3, [r5, #44]
 699 005c 9C42     		cmp	r4, r3
 700 005e 00D2     		bcs	.L59
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 701              		.loc 1 4986 0
 702 0060 EC62     		str	r4, [r5, #44]
 703              	.L59:
 704 0062 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL68:
 706              	.L65:
 707              		.align	2
 708              	.L64:
 709 0064 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 105


 711              	.LFE184:
 712              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 713              		.section	.text.xTaskCreate,"ax",%progbits
 714              		.align	2
 715              		.global	xTaskCreate
 716              		.thumb
 717              		.thumb_func
 718              		.type	xTaskCreate, %function
 719              	xTaskCreate:
 720              	.LFB136:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 721              		.loc 1 738 0
 722              		.cfi_startproc
 723              		@ args = 8, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL69:
 726 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 727              		.cfi_def_cfa_offset 28
 728              		.cfi_offset 4, -28
 729              		.cfi_offset 5, -24
 730              		.cfi_offset 6, -20
 731              		.cfi_offset 7, -16
 732              		.cfi_offset 8, -12
 733              		.cfi_offset 9, -8
 734              		.cfi_offset 14, -4
 735 0004 85B0     		sub	sp, sp, #20
 736              		.cfi_def_cfa_offset 48
 737 0006 0646     		mov	r6, r0
 738 0008 0F46     		mov	r7, r1
 739 000a 1546     		mov	r5, r2
 740 000c 9846     		mov	r8, r3
 741              	.LBB97:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742              		.loc 1 772 0
 743 000e 9000     		lsls	r0, r2, #2
 744              	.LVL70:
 745 0010 FFF7FEFF 		bl	pvPortMalloc
 746              	.LVL71:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 747              		.loc 1 774 0
 748 0014 60B1     		cbz	r0, .L70
 749 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 750              		.loc 1 777 0
 751 0018 6020     		movs	r0, #96
 752              	.LVL72:
 753 001a FFF7FEFF 		bl	pvPortMalloc
 754              	.LVL73:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 755              		.loc 1 779 0
 756 001e 0446     		mov	r4, r0
 757 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 758              		.loc 1 782 0
 759 0022 C0F83090 		str	r9, [r0, #48]
 760 0026 04E0     		b	.L67
 761              	.L68:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 106


 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 762              		.loc 1 788 0
 763 0028 4846     		mov	r0, r9
 764              	.LVL74:
 765 002a FFF7FEFF 		bl	vPortFree
 766              	.LVL75:
 767 002e 00E0     		b	.L67
 768              	.LVL76:
 769              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 770              		.loc 1 793 0
 771 0030 0024     		movs	r4, #0
 772              	.LVL77:
 773              	.L67:
 774              	.LBE97:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 775              		.loc 1 798 0
 776 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 777              		.loc 1 808 0
 778 0034 0023     		movs	r3, #0
 779 0036 0393     		str	r3, [sp, #12]
 780 0038 0294     		str	r4, [sp, #8]
 781 003a 0D9B     		ldr	r3, [sp, #52]
 782 003c 0193     		str	r3, [sp, #4]
 783 003e 0C9B     		ldr	r3, [sp, #48]
 784 0040 0093     		str	r3, [sp]
 785 0042 4346     		mov	r3, r8
 786 0044 2A46     		mov	r2, r5
 787 0046 3946     		mov	r1, r7
 788 0048 3046     		mov	r0, r6
 789 004a FFF7FEFF 		bl	prvInitialiseNewTask
 790              	.LVL78:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 791              		.loc 1 809 0
 792 004e 2046     		mov	r0, r4
 793 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 794              	.LVL79:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 795              		.loc 1 810 0
 796 0054 0120     		movs	r0, #1
 797 0056 01E0     		b	.L69
 798              	.LVL80:
 799              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 800              		.loc 1 814 0
 801 0058 4FF0FF30 		mov	r0, #-1
 802              	.L69:
 803              	.LVL81:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 804              		.loc 1 818 0
 805 005c 05B0     		add	sp, sp, #20
 806              		.cfi_def_cfa_offset 28
 807              		@ sp needed
 808 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 809              		.cfi_endproc
 810              	.LFE136:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 107


 811              		.size	xTaskCreate, .-xTaskCreate
 812 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 813              		.align	2
 814              		.global	vTaskDelete
 815              		.thumb
 816              		.thumb_func
 817              		.type	vTaskDelete, %function
 818              	vTaskDelete:
 819              	.LFB139:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 820              		.loc 1 1113 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL82:
 825 0000 70B5     		push	{r4, r5, r6, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
 830              		.cfi_offset 14, -4
 831 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 832              		.loc 1 1116 0
 833 0004 FFF7FEFF 		bl	vPortEnterCritical
 834              	.LVL83:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835              		.loc 1 1120 0
 836 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 837              		.loc 1 1120 0 is_stmt 0 discriminator 1
 838 000a 274B     		ldr	r3, .L82
 839 000c D3F80041 		ldr	r4, [r3, #256]
 840              	.LVL84:
 841              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 842              		.loc 1 1123 0 is_stmt 1 discriminator 4
 843 0010 261D     		adds	r6, r4, #4
 844 0012 3046     		mov	r0, r6
 845 0014 FFF7FEFF 		bl	uxListRemove
 846              	.LVL85:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 847              		.loc 1 1133 0 discriminator 4
 848 0018 A36A     		ldr	r3, [r4, #40]
 849 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 850              		.loc 1 1135 0
 851 001c 04F11800 		add	r0, r4, #24
 852 0020 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
 854              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 855              		.loc 1 1146 0
 856 0024 204B     		ldr	r3, .L82
 857 0026 D3F80821 		ldr	r2, [r3, #264]
 858 002a 0132     		adds	r2, r2, #1
 859 002c C3F80821 		str	r2, [r3, #264]
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 108


1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 860              		.loc 1 1148 0
 861 0030 D3F80031 		ldr	r3, [r3, #256]
 862 0034 9C42     		cmp	r4, r3
 863 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 864              		.loc 1 1155 0
 865 0038 1B4D     		ldr	r5, .L82
 866 003a 3146     		mov	r1, r6
 867 003c 05F1E400 		add	r0, r5, #228
 868 0040 FFF7FEFF 		bl	vListInsertEnd
 869              	.LVL87:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 870              		.loc 1 1160 0
 871 0044 D5F81031 		ldr	r3, [r5, #272]
 872 0048 0133     		adds	r3, r3, #1
 873 004a C5F81031 		str	r3, [r5, #272]
 874 004e 0AE0     		b	.L77
 875              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 876              		.loc 1 1171 0
 877 0050 154A     		ldr	r2, .L82
 878 0052 D2F8FC30 		ldr	r3, [r2, #252]
 879 0056 013B     		subs	r3, r3, #1
 880 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881              		.loc 1 1172 0
 882 005c 2046     		mov	r0, r4
 883 005e FFF7FEFF 		bl	prvDeleteTCB
 884              	.LVL88:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 885              		.loc 1 1176 0
 886 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 887              	.LVL89:
 888              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 889              		.loc 1 1181 0
 890 0066 FFF7FEFF 		bl	vPortExitCritical
 891              	.LVL90:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 892              		.loc 1 1185 0
 893 006a 0F4B     		ldr	r3, .L82
 894 006c D3F80431 		ldr	r3, [r3, #260]
 895 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 896              		.loc 1 1187 0
 897 0072 0D4B     		ldr	r3, .L82
 898 0074 D3F80031 		ldr	r3, [r3, #256]
 899 0078 9C42     		cmp	r4, r3
 900 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 901              		.loc 1 1189 0
 902 007c 0A4B     		ldr	r3, .L82
 903 007e D3F81831 		ldr	r3, [r3, #280]
 904 0082 43B1     		cbz	r3, .L79
 905              	.LBB98:
 906              	.LBB99:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 109


 907              		.loc 2 156 0
 908              		.syntax unified
 909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 910 0084 4FF02003 			mov r3, #32												
 911 0088 83F31188 		msr basepri, r3											
 912 008c BFF36F8F 		isb														
 913 0090 BFF34F8F 		dsb														
 914              	
 915              	@ 0 "" 2
 916              	.LVL91:
 917              		.thumb
 918              		.syntax unified
 919              	.L80:
 920 0094 FEE7     		b	.L80
 921              	.L79:
 922              	.LBE99:
 923              	.LBE98:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 924              		.loc 1 1190 0
 925 0096 4FF08052 		mov	r2, #268435456
 926 009a 044B     		ldr	r3, .L82+4
 927 009c 1A60     		str	r2, [r3]
 928              		.syntax unified
 929              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 930 009e BFF34F8F 		dsb
 931              	@ 0 "" 2
 932              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 933 00a2 BFF36F8F 		isb
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937              	.L73:
 938 00a6 70BD     		pop	{r4, r5, r6, pc}
 939              	.LVL92:
 940              	.L83:
 941              		.align	2
 942              	.L82:
 943 00a8 00000000 		.word	.LANCHOR0
 944 00ac 04ED00E0 		.word	-536810236
 945              		.cfi_endproc
 946              	.LFE139:
 947              		.size	vTaskDelete, .-vTaskDelete
 948              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 949              		.align	2
 950              		.global	uxTaskPriorityGet
 951              		.thumb
 952              		.thumb_func
 953              		.type	uxTaskPriorityGet, %function
 954              	uxTaskPriorityGet:
 955              	.LFB142:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 956              		.loc 1 1405 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL93:
 961 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 110


 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 966              		.loc 1 1409 0
 967 0004 FFF7FEFF 		bl	vPortEnterCritical
 968              	.LVL94:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 969              		.loc 1 1413 0
 970 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 971              		.loc 1 1413 0 is_stmt 0 discriminator 1
 972 000a 044B     		ldr	r3, .L87
 973 000c D3F80041 		ldr	r4, [r3, #256]
 974              	.LVL95:
 975              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 976              		.loc 1 1414 0 is_stmt 1 discriminator 4
 977 0010 E46A     		ldr	r4, [r4, #44]
 978              	.LVL96:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 979              		.loc 1 1416 0 discriminator 4
 980 0012 FFF7FEFF 		bl	vPortExitCritical
 981              	.LVL97:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 982              		.loc 1 1419 0 discriminator 4
 983 0016 2046     		mov	r0, r4
 984 0018 10BD     		pop	{r4, pc}
 985              	.LVL98:
 986              	.L88:
 987 001a 00BF     		.align	2
 988              	.L87:
 989 001c 00000000 		.word	.LANCHOR0
 990              		.cfi_endproc
 991              	.LFE142:
 992              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 993              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 994              		.align	2
 995              		.global	uxTaskPriorityGetFromISR
 996              		.thumb
 997              		.thumb_func
 998              		.type	uxTaskPriorityGetFromISR, %function
 999              	uxTaskPriorityGetFromISR:
 1000              	.LFB143:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1001              		.loc 1 1427 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL99:
 1006 0000 10B5     		push	{r4, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
 1010 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 111


 1011              		.loc 1 1447 0
 1012 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1013              	.LVL100:
 1014              	.LBB100:
 1015              	.LBB101:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1016              		.loc 2 172 0
 1017              		.syntax unified
 1018              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1019 0008 EFF31183 			mrs r3, basepri											
 1020 000c 4FF02002 		mov r2, #32												
 1021 0010 82F31188 		msr basepri, r2											
 1022 0014 BFF36F8F 		isb														
 1023 0018 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.LBE101:
 1029              	.LBE100:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1030              		.loc 1 1453 0
 1031 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1032              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1033 001e 034A     		ldr	r2, .L92
 1034 0020 D2F80041 		ldr	r4, [r2, #256]
 1035              	.LVL101:
 1036              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1037              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1038 0024 E06A     		ldr	r0, [r4, #44]
 1039              	.LVL102:
 1040              	.LBB102:
 1041              	.LBB103:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 112


 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1042              		.loc 2 190 0 discriminator 4
 1043              		.syntax unified
 1044              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1045 0026 83F31188 			msr basepri, r3	
 1046              	@ 0 "" 2
 1047              	.LVL103:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE103:
 1051              	.LBE102:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1052              		.loc 1 1459 0 discriminator 4
 1053 002a 10BD     		pop	{r4, pc}
 1054              	.LVL104:
 1055              	.L93:
 1056              		.align	2
 1057              	.L92:
 1058 002c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
 1060              	.LFE143:
 1061              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1062              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1063              		.align	2
 1064              		.global	vTaskPrioritySet
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	vTaskPrioritySet, %function
 1068              	vTaskPrioritySet:
 1069              	.LFB144:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1070              		.loc 1 1467 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL105:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1075              		.loc 1 1472 0
 1076 0000 0629     		cmp	r1, #6
 1077 0002 08D9     		bls	.L95
 1078              	.LBB104:
 1079              	.LBB105:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1080              		.loc 2 156 0
 1081              		.syntax unified
 1082              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1083 0004 4FF02003 			mov r3, #32												
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 113


 1084 0008 83F31188 		msr basepri, r3											
 1085 000c BFF36F8F 		isb														
 1086 0010 BFF34F8F 		dsb														
 1087              	
 1088              	@ 0 "" 2
 1089              	.LVL106:
 1090              		.thumb
 1091              		.syntax unified
 1092              	.L96:
 1093 0014 FEE7     		b	.L96
 1094              	.L95:
 1095              	.LBE105:
 1096              	.LBE104:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1097              		.loc 1 1467 0
 1098 0016 70B5     		push	{r4, r5, r6, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 6, -8
 1103              		.cfi_offset 14, -4
 1104 0018 0446     		mov	r4, r0
 1105 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1106              		.loc 1 1475 0
 1107 001c 0629     		cmp	r1, #6
 1108 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1109              		.loc 1 1477 0
 1110 0020 0625     		movs	r5, #6
 1111              	.L97:
 1112              	.LVL107:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1484 0
 1114 0022 FFF7FEFF 		bl	vPortEnterCritical
 1115              	.LVL108:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1116              		.loc 1 1488 0
 1117 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1118              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1119 0028 294B     		ldr	r3, .L112
 1120 002a D3F80041 		ldr	r4, [r3, #256]
 1121              	.LVL109:
 1122              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1123              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1124 002e E36A     		ldr	r3, [r4, #44]
 1125              	.LVL110:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1126              		.loc 1 1502 0 discriminator 4
 1127 0030 9D42     		cmp	r5, r3
 1128 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1129              		.loc 1 1506 0
 1130 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 114


 1131              		.loc 1 1508 0
 1132 0036 264A     		ldr	r2, .L112
 1133 0038 D2F80021 		ldr	r2, [r2, #256]
 1134 003c 9442     		cmp	r4, r2
 1135 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1136              		.loc 1 1513 0
 1137 0040 234A     		ldr	r2, .L112
 1138 0042 D2F80021 		ldr	r2, [r2, #256]
 1139 0046 D26A     		ldr	r2, [r2, #44]
 1140 0048 9542     		cmp	r5, r2
 1141 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1142              		.loc 1 1470 0
 1143 004c 0026     		movs	r6, #0
 1144 004e 0BE0     		b	.L101
 1145              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1146              		.loc 1 1529 0
 1147 0050 1F4A     		ldr	r2, .L112
 1148 0052 D2F80021 		ldr	r2, [r2, #256]
 1149 0056 9442     		cmp	r4, r2
 1150 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1151              		.loc 1 1470 0
 1152 005a 0026     		movs	r6, #0
 1153 005c 04E0     		b	.L101
 1154              	.L107:
 1155 005e 0026     		movs	r6, #0
 1156 0060 02E0     		b	.L101
 1157              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1158              		.loc 1 1515 0
 1159 0062 0126     		movs	r6, #1
 1160 0064 00E0     		b	.L101
 1161              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1162              		.loc 1 1534 0
 1163 0066 0126     		movs	r6, #1
 1164              	.L101:
 1165              	.LVL111:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1166              		.loc 1 1566 0
 1167 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1168              		.loc 1 1572 0
 1169 006a A269     		ldr	r2, [r4, #24]
 1170 006c 002A     		cmp	r2, #0
 1171 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1172              		.loc 1 1574 0
 1173 0070 C5F10705 		rsb	r5, r5, #7
 1174              	.LVL112:
 1175 0074 A561     		str	r5, [r4, #24]
 1176              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1177              		.loc 1 1585 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 115


 1178 0076 6169     		ldr	r1, [r4, #20]
 1179 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1180              	.LVL113:
 1181 007c 9A00     		lsls	r2, r3, #2
 1182 007e 154B     		ldr	r3, .L112+4
 1183 0080 1A44     		add	r2, r2, r3
 1184 0082 9142     		cmp	r1, r2
 1185 0084 01D1     		bne	.L110
 1186 0086 0123     		movs	r3, #1
 1187 0088 00E0     		b	.L103
 1188              	.L110:
 1189 008a 0023     		movs	r3, #0
 1190              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1191              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1192 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1193              		.loc 1 1590 0 is_stmt 1
 1194 008e 251D     		adds	r5, r4, #4
 1195 0090 2846     		mov	r0, r5
 1196 0092 FFF7FEFF 		bl	uxListRemove
 1197              	.LVL114:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1198              		.loc 1 1601 0
 1199 0096 E36A     		ldr	r3, [r4, #44]
 1200 0098 0D4A     		ldr	r2, .L112
 1201 009a D2F80C21 		ldr	r2, [r2, #268]
 1202 009e 9342     		cmp	r3, r2
 1203 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1204              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1205 00a2 0B4A     		ldr	r2, .L112
 1206 00a4 C2F80C31 		str	r3, [r2, #268]
 1207              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1208              		.loc 1 1601 0 discriminator 3
 1209 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1210 00ac 9A00     		lsls	r2, r3, #2
 1211 00ae 2946     		mov	r1, r5
 1212 00b0 0848     		ldr	r0, .L112+4
 1213 00b2 1044     		add	r0, r0, r2
 1214 00b4 FFF7FEFF 		bl	vListInsertEnd
 1215              	.LVL115:
 1216              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1217              		.loc 1 1608 0 is_stmt 1
 1218 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1219              		.loc 1 1610 0
 1220 00ba 4FF08052 		mov	r2, #268435456
 1221 00be 064B     		ldr	r3, .L112+8
 1222 00c0 1A60     		str	r2, [r3]
 1223              		.syntax unified
 1224              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1225 00c2 BFF34F8F 		dsb
 1226              	@ 0 "" 2
 1227              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 116


 1228 00c6 BFF36F8F 		isb
 1229              	@ 0 "" 2
 1230              	.LVL116:
 1231              		.thumb
 1232              		.syntax unified
 1233              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1234              		.loc 1 1622 0
 1235 00ca FFF7FEFF 		bl	vPortExitCritical
 1236              	.LVL117:
 1237 00ce 70BD     		pop	{r4, r5, r6, pc}
 1238              	.LVL118:
 1239              	.L113:
 1240              		.align	2
 1241              	.L112:
 1242 00d0 00000000 		.word	.LANCHOR0
 1243 00d4 30000000 		.word	.LANCHOR0+48
 1244 00d8 04ED00E0 		.word	-536810236
 1245              		.cfi_endproc
 1246              	.LFE144:
 1247              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1248              		.section	.text.vTaskResume,"ax",%progbits
 1249              		.align	2
 1250              		.global	vTaskResume
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	vTaskResume, %function
 1254              	vTaskResume:
 1255              	.LFB147:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1256              		.loc 1 1778 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL119:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1261              		.loc 1 1782 0
 1262 0000 40B9     		cbnz	r0, .L115
 1263              	.LBB106:
 1264              	.LBB107:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1265              		.loc 2 156 0
 1266              		.syntax unified
 1267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1268 0002 4FF02003 			mov r3, #32												
 1269 0006 83F31188 		msr basepri, r3											
 1270 000a BFF36F8F 		isb														
 1271 000e BFF34F8F 		dsb														
 1272              	
 1273              	@ 0 "" 2
 1274              	.LVL120:
 1275              		.thumb
 1276              		.syntax unified
 1277              	.L116:
 1278 0012 FEE7     		b	.L116
 1279              	.L115:
 1280              	.LBE107:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 117


 1281              	.LBE106:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1282              		.loc 1 1778 0
 1283 0014 70B5     		push	{r4, r5, r6, lr}
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1290              		.loc 1 1786 0
 1291 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1292              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1293 001a 194B     		ldr	r3, .L121
 1294 001c D3F80031 		ldr	r3, [r3, #256]
 1295 0020 9842     		cmp	r0, r3
 1296 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1297              		.loc 1 1788 0 is_stmt 1
 1298 0024 FFF7FEFF 		bl	vPortEnterCritical
 1299              	.LVL121:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1300              		.loc 1 1790 0
 1301 0028 2046     		mov	r0, r4
 1302 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1303              	.LVL122:
 1304 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1305              		.loc 1 1796 0
 1306 0030 261D     		adds	r6, r4, #4
 1307 0032 3046     		mov	r0, r6
 1308 0034 FFF7FEFF 		bl	uxListRemove
 1309              	.LVL123:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1310              		.loc 1 1797 0
 1311 0038 E36A     		ldr	r3, [r4, #44]
 1312 003a 114A     		ldr	r2, .L121
 1313 003c D2F80C21 		ldr	r2, [r2, #268]
 1314 0040 9342     		cmp	r3, r2
 1315 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1316              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1317 0044 0E4A     		ldr	r2, .L121
 1318 0046 C2F80C31 		str	r3, [r2, #268]
 1319              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1320              		.loc 1 1797 0 discriminator 3
 1321 004a 0D4D     		ldr	r5, .L121
 1322 004c 05F13000 		add	r0, r5, #48
 1323 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1324 0054 9A00     		lsls	r2, r3, #2
 1325 0056 3146     		mov	r1, r6
 1326 0058 1044     		add	r0, r0, r2
 1327 005a FFF7FEFF 		bl	vListInsertEnd
 1328              	.LVL124:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 118


1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1329              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1330 005e E26A     		ldr	r2, [r4, #44]
 1331 0060 D5F80031 		ldr	r3, [r5, #256]
 1332 0064 DB6A     		ldr	r3, [r3, #44]
 1333 0066 9A42     		cmp	r2, r3
 1334 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1335              		.loc 1 1805 0
 1336 006a 4FF08052 		mov	r2, #268435456
 1337 006e 054B     		ldr	r3, .L121+4
 1338 0070 1A60     		str	r2, [r3]
 1339              		.syntax unified
 1340              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1341 0072 BFF34F8F 		dsb
 1342              	@ 0 "" 2
 1343              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1344 0076 BFF36F8F 		isb
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1349              		.loc 1 1817 0
 1350 007a FFF7FEFF 		bl	vPortExitCritical
 1351              	.LVL125:
 1352              	.L114:
 1353 007e 70BD     		pop	{r4, r5, r6, pc}
 1354              	.LVL126:
 1355              	.L122:
 1356              		.align	2
 1357              	.L121:
 1358 0080 00000000 		.word	.LANCHOR0
 1359 0084 04ED00E0 		.word	-536810236
 1360              		.cfi_endproc
 1361              	.LFE147:
 1362              		.size	vTaskResume, .-vTaskResume
 1363              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1364              		.align	2
 1365              		.global	xTaskResumeFromISR
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	xTaskResumeFromISR, %function
 1369              	xTaskResumeFromISR:
 1370              	.LFB148:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1371              		.loc 1 1832 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL127:
 1376 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1377              		.cfi_def_cfa_offset 24
 1378              		.cfi_offset 3, -24
 1379              		.cfi_offset 4, -20
 1380              		.cfi_offset 5, -16
 1381              		.cfi_offset 6, -12
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 119


 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384              	.LVL128:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1385              		.loc 1 1837 0
 1386 0002 40B9     		cbnz	r0, .L124
 1387              	.LBB108:
 1388              	.LBB109:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1389              		.loc 2 156 0
 1390              		.syntax unified
 1391              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1392 0004 4FF02003 			mov r3, #32												
 1393 0008 83F31188 		msr basepri, r3											
 1394 000c BFF36F8F 		isb														
 1395 0010 BFF34F8F 		dsb														
 1396              	
 1397              	@ 0 "" 2
 1398              	.LVL129:
 1399              		.thumb
 1400              		.syntax unified
 1401              	.L125:
 1402 0014 FEE7     		b	.L125
 1403              	.L124:
 1404 0016 0446     		mov	r4, r0
 1405              	.LBE109:
 1406              	.LBE108:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1407              		.loc 1 1855 0
 1408 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1409              	.LVL130:
 1410              	.LBB110:
 1411              	.LBB111:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1412              		.loc 2 172 0
 1413              		.syntax unified
 1414              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1415 001c EFF31187 			mrs r7, basepri											
 1416 0020 4FF02003 		mov r3, #32												
 1417 0024 83F31188 		msr basepri, r3											
 1418 0028 BFF36F8F 		isb														
 1419 002c BFF34F8F 		dsb														
 1420              	
 1421              	@ 0 "" 2
 1422              		.thumb
 1423              		.syntax unified
 1424              	.LBE111:
 1425              	.LBE110:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1426              		.loc 1 1859 0
 1427 0030 2046     		mov	r0, r4
 1428 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1429              	.LVL131:
 1430 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1431              		.loc 1 1864 0
 1432 0038 174B     		ldr	r3, .L133
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 120


 1433 003a D3F81831 		ldr	r3, [r3, #280]
 1434 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1435              		.loc 1 1868 0
 1436 0040 E26A     		ldr	r2, [r4, #44]
 1437 0042 154B     		ldr	r3, .L133
 1438 0044 D3F80031 		ldr	r3, [r3, #256]
 1439 0048 DB6A     		ldr	r3, [r3, #44]
 1440 004a 9A42     		cmp	r2, r3
 1441 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1442              		.loc 1 1833 0
 1443 004e 0025     		movs	r5, #0
 1444 0050 00E0     		b	.L128
 1445              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1446              		.loc 1 1870 0
 1447 0052 0125     		movs	r5, #1
 1448              	.L128:
 1449              	.LVL132:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1450              		.loc 1 1877 0
 1451 0054 261D     		adds	r6, r4, #4
 1452 0056 3046     		mov	r0, r6
 1453 0058 FFF7FEFF 		bl	uxListRemove
 1454              	.LVL133:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1455              		.loc 1 1878 0
 1456 005c E36A     		ldr	r3, [r4, #44]
 1457 005e 0E4A     		ldr	r2, .L133
 1458 0060 D2F80C21 		ldr	r2, [r2, #268]
 1459 0064 9342     		cmp	r3, r2
 1460 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1461              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1462 0068 0B4A     		ldr	r2, .L133
 1463 006a C2F80C31 		str	r3, [r2, #268]
 1464              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1465              		.loc 1 1878 0 discriminator 3
 1466 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1467 0072 9A00     		lsls	r2, r3, #2
 1468 0074 3146     		mov	r1, r6
 1469 0076 0948     		ldr	r0, .L133+4
 1470 0078 1044     		add	r0, r0, r2
 1471 007a FFF7FEFF 		bl	vListInsertEnd
 1472              	.LVL134:
 1473 007e 07E0     		b	.L126
 1474              	.LVL135:
 1475              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1476              		.loc 1 1885 0 is_stmt 1
 1477 0080 04F11801 		add	r1, r4, #24
 1478 0084 0648     		ldr	r0, .L133+8
 1479 0086 FFF7FEFF 		bl	vListInsertEnd
 1480              	.LVL136:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 121


 1481              		.loc 1 1833 0
 1482 008a 0025     		movs	r5, #0
 1483 008c 00E0     		b	.L126
 1484              	.L130:
 1485 008e 0025     		movs	r5, #0
 1486              	.LVL137:
 1487              	.L126:
 1488              	.LBB112:
 1489              	.LBB113:
 1490              		.loc 2 190 0
 1491              		.syntax unified
 1492              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1493 0090 87F31188 			msr basepri, r7	
 1494              	@ 0 "" 2
 1495              	.LVL138:
 1496              		.thumb
 1497              		.syntax unified
 1498              	.LBE113:
 1499              	.LBE112:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1500              		.loc 1 1896 0
 1501 0094 2846     		mov	r0, r5
 1502 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1503              	.LVL139:
 1504              	.L134:
 1505              		.align	2
 1506              	.L133:
 1507 0098 00000000 		.word	.LANCHOR0
 1508 009c 30000000 		.word	.LANCHOR0+48
 1509 00a0 14000000 		.word	.LANCHOR0+20
 1510              		.cfi_endproc
 1511              	.LFE148:
 1512              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1513              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1514              		.align	2
 1515              		.global	vTaskStartScheduler
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	vTaskStartScheduler, %function
 1519              	vTaskStartScheduler:
 1520              	.LFB149:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1521              		.loc 1 1902 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525 0000 00B5     		push	{lr}
 1526              		.cfi_def_cfa_offset 4
 1527              		.cfi_offset 14, -4
 1528 0002 83B0     		sub	sp, sp, #12
 1529              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1530              		.loc 1 1935 0
 1531 0004 194B     		ldr	r3, .L141
 1532 0006 0193     		str	r3, [sp, #4]
 1533 0008 0023     		movs	r3, #0
 1534 000a 0093     		str	r3, [sp]
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 122


 1535 000c 8022     		movs	r2, #128
 1536 000e 1849     		ldr	r1, .L141+4
 1537 0010 1848     		ldr	r0, .L141+8
 1538 0012 FFF7FEFF 		bl	xTaskCreate
 1539              	.LVL140:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1540              		.loc 1 1946 0
 1541 0016 0128     		cmp	r0, #1
 1542 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1543              		.loc 1 1948 0
 1544 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1545              	.LVL141:
 1546              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1547              		.loc 1 1957 0
 1548 001e 0128     		cmp	r0, #1
 1549 0020 14D1     		bne	.L137
 1550              	.LBB114:
 1551              	.LBB115:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1552              		.loc 2 156 0
 1553              		.syntax unified
 1554              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1555 0022 4FF02003 			mov r3, #32												
 1556 0026 83F31188 		msr basepri, r3											
 1557 002a BFF36F8F 		isb														
 1558 002e BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              		.thumb
 1562              		.syntax unified
 1563              	.LBE115:
 1564              	.LBE114:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1565              		.loc 1 1983 0
 1566 0032 114B     		ldr	r3, .L141+12
 1567 0034 4FF0FF32 		mov	r2, #-1
 1568 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1569              		.loc 1 1984 0
 1570 003a 0122     		movs	r2, #1
 1571 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1572              		.loc 1 1985 0
 1573 0040 0022     		movs	r2, #0
 1574 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1575              		.loc 1 1997 0
 1576 0046 FFF7FEFF 		bl	xPortStartScheduler
 1577              	.LVL142:
 1578 004a 0BE0     		b	.L135
 1579              	.LVL143:
 1580              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1581              		.loc 1 2012 0
 1582 004c B0F1FF3F 		cmp	r0, #-1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 123


 1583 0050 08D1     		bne	.L135
 1584              	.LBB116:
 1585              	.LBB117:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1586              		.loc 2 156 0
 1587              		.syntax unified
 1588              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1589 0052 4FF02003 			mov r3, #32												
 1590 0056 83F31188 		msr basepri, r3											
 1591 005a BFF36F8F 		isb														
 1592 005e BFF34F8F 		dsb														
 1593              	
 1594              	@ 0 "" 2
 1595              	.LVL144:
 1596              		.thumb
 1597              		.syntax unified
 1598              	.L139:
 1599 0062 FEE7     		b	.L139
 1600              	.LVL145:
 1601              	.L135:
 1602              	.LBE117:
 1603              	.LBE116:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1604              		.loc 1 2018 0
 1605 0064 03B0     		add	sp, sp, #12
 1606              		.cfi_def_cfa_offset 4
 1607              		@ sp needed
 1608 0066 5DF804FB 		ldr	pc, [sp], #4
 1609              	.L142:
 1610 006a 00BF     		.align	2
 1611              	.L141:
 1612 006c 1C010000 		.word	.LANCHOR0+284
 1613 0070 00000000 		.word	.LC0
 1614 0074 00000000 		.word	prvIdleTask
 1615 0078 00000000 		.word	.LANCHOR0
 1616              		.cfi_endproc
 1617              	.LFE149:
 1618              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1619              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1620              		.align	2
 1621              		.global	vTaskEndScheduler
 1622              		.thumb
 1623              		.thumb_func
 1624              		.type	vTaskEndScheduler, %function
 1625              	vTaskEndScheduler:
 1626              	.LFB150:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1627              		.loc 1 2022 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 08B5     		push	{r3, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
 1635              	.LBB118:
 1636              	.LBB119:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 124


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1637              		.loc 2 156 0
 1638              		.syntax unified
 1639              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1640 0002 4FF02003 			mov r3, #32												
 1641 0006 83F31188 		msr basepri, r3											
 1642 000a BFF36F8F 		isb														
 1643 000e BFF34F8F 		dsb														
 1644              	
 1645              	@ 0 "" 2
 1646              		.thumb
 1647              		.syntax unified
 1648              	.LBE119:
 1649              	.LBE118:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1650              		.loc 1 2027 0
 1651 0012 0022     		movs	r2, #0
 1652 0014 024B     		ldr	r3, .L145
 1653 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1654              		.loc 1 2028 0
 1655 001a FFF7FEFF 		bl	vPortEndScheduler
 1656              	.LVL146:
 1657 001e 08BD     		pop	{r3, pc}
 1658              	.L146:
 1659              		.align	2
 1660              	.L145:
 1661 0020 00000000 		.word	.LANCHOR0
 1662              		.cfi_endproc
 1663              	.LFE150:
 1664              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1665              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1666              		.align	2
 1667              		.global	vTaskSuspendAll
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	vTaskSuspendAll, %function
 1671              	vTaskSuspendAll:
 1672              	.LFB151:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1673              		.loc 1 2033 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1678              		.loc 1 2038 0
 1679 0000 034A     		ldr	r2, .L148
 1680 0002 D2F81831 		ldr	r3, [r2, #280]
 1681 0006 0133     		adds	r3, r3, #1
 1682 0008 C2F81831 		str	r3, [r2, #280]
 1683 000c 7047     		bx	lr
 1684              	.L149:
 1685 000e 00BF     		.align	2
 1686              	.L148:
 1687 0010 00000000 		.word	.LANCHOR0
 1688              		.cfi_endproc
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 125


 1689              	.LFE151:
 1690              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1691              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1692              		.align	2
 1693              		.global	xTaskGetTickCount
 1694              		.thumb
 1695              		.thumb_func
 1696              		.type	xTaskGetTickCount, %function
 1697              	xTaskGetTickCount:
 1698              	.LFB153:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1699              		.loc 1 2216 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1704              		.loc 1 2222 0
 1705 0000 014B     		ldr	r3, .L151
 1706 0002 D3F81401 		ldr	r0, [r3, #276]
 1707              	.LVL147:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1708              		.loc 1 2227 0
 1709 0006 7047     		bx	lr
 1710              	.L152:
 1711              		.align	2
 1712              	.L151:
 1713 0008 00000000 		.word	.LANCHOR0
 1714              		.cfi_endproc
 1715              	.LFE153:
 1716              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1717              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1718              		.align	2
 1719              		.global	xTaskGetTickCountFromISR
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	xTaskGetTickCountFromISR, %function
 1723              	xTaskGetTickCountFromISR:
 1724              	.LFB154:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1725              		.loc 1 2231 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1733              		.loc 1 2249 0
 1734 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1735              	.LVL148:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1736              		.loc 1 2253 0
 1737 0006 024B     		ldr	r3, .L155
 1738 0008 D3F81401 		ldr	r0, [r3, #276]
 1739              	.LVL149:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 126


2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1740              		.loc 1 2258 0
 1741 000c 08BD     		pop	{r3, pc}
 1742              	.L156:
 1743 000e 00BF     		.align	2
 1744              	.L155:
 1745 0010 00000000 		.word	.LANCHOR0
 1746              		.cfi_endproc
 1747              	.LFE154:
 1748              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1749              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1750              		.align	2
 1751              		.global	uxTaskGetNumberOfTasks
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	uxTaskGetNumberOfTasks, %function
 1755              	uxTaskGetNumberOfTasks:
 1756              	.LFB155:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1757              		.loc 1 2262 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1762              		.loc 1 2265 0
 1763 0000 014B     		ldr	r3, .L158
 1764 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1765              		.loc 1 2266 0
 1766 0006 7047     		bx	lr
 1767              	.L159:
 1768              		.align	2
 1769              	.L158:
 1770 0008 00000000 		.word	.LANCHOR0
 1771              		.cfi_endproc
 1772              	.LFE155:
 1773              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1774              		.section	.text.pcTaskGetName,"ax",%progbits
 1775              		.align	2
 1776              		.global	pcTaskGetName
 1777              		.thumb
 1778              		.thumb_func
 1779              		.type	pcTaskGetName, %function
 1780              	pcTaskGetName:
 1781              	.LFB156:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1782              		.loc 1 2270 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
 1787              	.LVL150:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1788              		.loc 1 2275 0
 1789 0000 0346     		mov	r3, r0
 1790 0002 10B9     		cbnz	r0, .L161
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 127


2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1791              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1792 0004 074B     		ldr	r3, .L164
 1793 0006 D3F80031 		ldr	r3, [r3, #256]
 1794              	.LVL151:
 1795              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1796              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1797 000a 43B9     		cbnz	r3, .L162
 1798              	.LBB120:
 1799              	.LBB121:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1800              		.loc 2 156 0
 1801              		.syntax unified
 1802              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1803 000c 4FF02003 			mov r3, #32												
 1804 0010 83F31188 		msr basepri, r3											
 1805 0014 BFF36F8F 		isb														
 1806 0018 BFF34F8F 		dsb														
 1807              	
 1808              	@ 0 "" 2
 1809              	.LVL152:
 1810              		.thumb
 1811              		.syntax unified
 1812              	.L163:
 1813 001c FEE7     		b	.L163
 1814              	.LVL153:
 1815              	.L162:
 1816              	.LBE121:
 1817              	.LBE120:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 2278 0
 1819 001e 03F13400 		add	r0, r3, #52
 1820 0022 7047     		bx	lr
 1821              	.L165:
 1822              		.align	2
 1823              	.L164:
 1824 0024 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE156:
 1827              		.size	pcTaskGetName, .-pcTaskGetName
 1828              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1829              		.align	2
 1830              		.global	xTaskIncrementTick
 1831              		.thumb
 1832              		.thumb_func
 1833              		.type	xTaskIncrementTick, %function
 1834              	xTaskIncrementTick:
 1835              	.LFB157:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1836              		.loc 1 2590 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1841              		.cfi_def_cfa_offset 24
 1842              		.cfi_offset 4, -24
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 128


 1843              		.cfi_offset 5, -20
 1844              		.cfi_offset 6, -16
 1845              		.cfi_offset 7, -12
 1846              		.cfi_offset 8, -8
 1847              		.cfi_offset 14, -4
 1848              	.LVL154:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1849              		.loc 1 2599 0
 1850 0004 434B     		ldr	r3, .L188
 1851 0006 D3F81831 		ldr	r3, [r3, #280]
 1852 000a 002B     		cmp	r3, #0
 1853 000c 71D1     		bne	.L167
 1854              	.LBB122:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1855              		.loc 1 2603 0
 1856 000e 414B     		ldr	r3, .L188
 1857 0010 D3F81451 		ldr	r5, [r3, #276]
 1858 0014 0135     		adds	r5, r5, #1
 1859              	.LVL155:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1860              		.loc 1 2607 0
 1861 0016 C3F81451 		str	r5, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1862              		.loc 1 2609 0
 1863 001a CDB9     		cbnz	r5, .L168
 1864              	.LBB123:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1865              		.loc 1 2611 0
 1866 001c 9B6A     		ldr	r3, [r3, #40]
 1867 001e 1B68     		ldr	r3, [r3]
 1868 0020 43B1     		cbz	r3, .L169
 1869              	.LBB124:
 1870              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1871              		.loc 2 156 0
 1872              		.syntax unified
 1873              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1874 0022 4FF02003 			mov r3, #32												
 1875 0026 83F31188 		msr basepri, r3											
 1876 002a BFF36F8F 		isb														
 1877 002e BFF34F8F 		dsb														
 1878              	
 1879              	@ 0 "" 2
 1880              	.LVL156:
 1881              		.thumb
 1882              		.syntax unified
 1883              	.L170:
 1884 0032 FEE7     		b	.L170
 1885              	.L169:
 1886              	.LBE125:
 1887              	.LBE124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1888              		.loc 1 2611 0 discriminator 2
 1889 0034 374B     		ldr	r3, .L188
 1890 0036 9A6A     		ldr	r2, [r3, #40]
 1891              	.LVL157:
 1892 0038 D3F8F810 		ldr	r1, [r3, #248]
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 129


 1893 003c 9962     		str	r1, [r3, #40]
 1894 003e C3F8F820 		str	r2, [r3, #248]
 1895 0042 D3F82021 		ldr	r2, [r3, #288]
 1896              	.LVL158:
 1897 0046 0132     		adds	r2, r2, #1
 1898 0048 C3F82021 		str	r2, [r3, #288]
 1899              	.LVL159:
 1900 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1901              	.LVL160:
 1902              	.L168:
 1903              	.LBE123:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1904              		.loc 1 2622 0
 1905 0050 304B     		ldr	r3, .L188
 1906 0052 DB6A     		ldr	r3, [r3, #44]
 1907 0054 9D42     		cmp	r5, r3
 1908 0056 03D2     		bcs	.L182
 1909              	.LBE122:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1910              		.loc 1 2593 0
 1911 0058 0024     		movs	r4, #0
 1912 005a 3EE0     		b	.L172
 1913              	.LVL161:
 1914              	.L184:
 1915              	.LBB126:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1916              		.loc 1 2688 0
 1917 005c 0124     		movs	r4, #1
 1918              	.LVL162:
 1919 005e 00E0     		b	.L171
 1920              	.LVL163:
 1921              	.L182:
 1922 0060 0024     		movs	r4, #0
 1923              	.LVL164:
 1924              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1925              		.loc 1 2626 0
 1926 0062 2C4B     		ldr	r3, .L188
 1927 0064 9B6A     		ldr	r3, [r3, #40]
 1928 0066 1B68     		ldr	r3, [r3]
 1929 0068 0BB9     		cbnz	r3, .L183
 1930 006a 0123     		movs	r3, #1
 1931 006c 00E0     		b	.L173
 1932              	.L183:
 1933 006e 0023     		movs	r3, #0
 1934              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1935              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1936 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1937              		.loc 1 2633 0 is_stmt 1
 1938 0072 4FF0FF32 		mov	r2, #-1
 1939 0076 274B     		ldr	r3, .L188
 1940 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1941              		.loc 1 2634 0
 1942 007a 2EE0     		b	.L172
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 130


 1943              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1944              		.loc 1 2642 0
 1945 007c 254B     		ldr	r3, .L188
 1946 007e 9B6A     		ldr	r3, [r3, #40]
 1947 0080 DB68     		ldr	r3, [r3, #12]
 1948 0082 DE68     		ldr	r6, [r3, #12]
 1949              	.LVL165:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1950              		.loc 1 2643 0
 1951 0084 7368     		ldr	r3, [r6, #4]
 1952              	.LVL166:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1953              		.loc 1 2645 0
 1954 0086 9D42     		cmp	r5, r3
 1955 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1956              		.loc 1 2652 0
 1957 008a 224A     		ldr	r2, .L188
 1958 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1959              		.loc 1 2653 0
 1960 008e 24E0     		b	.L172
 1961              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1962              		.loc 1 2661 0
 1963 0090 06F10408 		add	r8, r6, #4
 1964 0094 4046     		mov	r0, r8
 1965 0096 FFF7FEFF 		bl	uxListRemove
 1966              	.LVL167:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1967              		.loc 1 2665 0
 1968 009a B36A     		ldr	r3, [r6, #40]
 1969 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1970              		.loc 1 2667 0
 1971 009e 06F11800 		add	r0, r6, #24
 1972 00a2 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
 1974              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1975              		.loc 1 2676 0
 1976 00a6 F36A     		ldr	r3, [r6, #44]
 1977 00a8 1A4A     		ldr	r2, .L188
 1978 00aa D2F80C21 		ldr	r2, [r2, #268]
 1979 00ae 9342     		cmp	r3, r2
 1980 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1981              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1982 00b2 184A     		ldr	r2, .L188
 1983 00b4 C2F80C31 		str	r3, [r2, #268]
 1984              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1985              		.loc 1 2676 0 discriminator 3
 1986 00b8 164F     		ldr	r7, .L188
 1987 00ba 07F13000 		add	r0, r7, #48
 1988 00be 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 131


 1989 00c2 9A00     		lsls	r2, r3, #2
 1990 00c4 4146     		mov	r1, r8
 1991 00c6 1044     		add	r0, r0, r2
 1992 00c8 FFF7FEFF 		bl	vListInsertEnd
 1993              	.LVL169:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1994              		.loc 1 2686 0 is_stmt 1 discriminator 3
 1995 00cc F26A     		ldr	r2, [r6, #44]
 1996 00ce D7F80031 		ldr	r3, [r7, #256]
 1997 00d2 DB6A     		ldr	r3, [r3, #44]
 1998 00d4 9A42     		cmp	r2, r3
 1999 00d6 C1D2     		bcs	.L184
 2000 00d8 C3E7     		b	.L171
 2001              	.LVL170:
 2002              	.L172:
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2003              		.loc 1 2705 0
 2004 00da 0E49     		ldr	r1, .L188
 2005 00dc D1F80031 		ldr	r3, [r1, #256]
 2006 00e0 DB6A     		ldr	r3, [r3, #44]
 2007 00e2 03EB8303 		add	r3, r3, r3, lsl #2
 2008 00e6 9A00     		lsls	r2, r3, #2
 2009 00e8 0A44     		add	r2, r2, r1
 2010 00ea 136B     		ldr	r3, [r2, #48]
 2011 00ec 012B     		cmp	r3, #1
 2012 00ee 08D8     		bhi	.L185
 2013 00f0 08E0     		b	.L180
 2014              	.LVL171:
 2015              	.L167:
 2016              	.LBE126:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2017              		.loc 1 2733 0
 2018 00f2 084A     		ldr	r2, .L188
 2019 00f4 D2F82431 		ldr	r3, [r2, #292]
 2020 00f8 0133     		adds	r3, r3, #1
 2021 00fa C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2022              		.loc 1 2593 0
 2023 00fe 0024     		movs	r4, #0
 2024 0100 00E0     		b	.L180
 2025              	.LVL172:
 2026              	.L185:
 2027              	.LBB127:
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2028              		.loc 1 2707 0
 2029 0102 0124     		movs	r4, #1
 2030              	.LVL173:
 2031              	.L180:
 2032              	.LBE127:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2033              		.loc 1 2746 0
 2034 0104 034B     		ldr	r3, .L188
 2035 0106 D3F82831 		ldr	r3, [r3, #296]
 2036 010a 03B1     		cbz	r3, .L181
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2037              		.loc 1 2748 0
 2038 010c 0124     		movs	r4, #1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 132


 2039              	.LVL174:
 2040              	.L181:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2041              		.loc 1 2758 0
 2042 010e 2046     		mov	r0, r4
 2043 0110 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2044              	.LVL175:
 2045              	.L189:
 2046              		.align	2
 2047              	.L188:
 2048 0114 00000000 		.word	.LANCHOR0
 2049              		.cfi_endproc
 2050              	.LFE157:
 2051              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2052              		.section	.text.xTaskResumeAll,"ax",%progbits
 2053              		.align	2
 2054              		.global	xTaskResumeAll
 2055              		.thumb
 2056              		.thumb_func
 2057              		.type	xTaskResumeAll, %function
 2058              	xTaskResumeAll:
 2059              	.LFB152:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2060              		.loc 1 2106 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064              	.LVL176:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2065              		.loc 1 2112 0
 2066 0000 394B     		ldr	r3, .L206
 2067 0002 D3F81831 		ldr	r3, [r3, #280]
 2068 0006 43B9     		cbnz	r3, .L191
 2069              	.LBB128:
 2070              	.LBB129:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2071              		.loc 2 156 0
 2072              		.syntax unified
 2073              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2074 0008 4FF02003 			mov r3, #32												
 2075 000c 83F31188 		msr basepri, r3											
 2076 0010 BFF36F8F 		isb														
 2077 0014 BFF34F8F 		dsb														
 2078              	
 2079              	@ 0 "" 2
 2080              	.LVL177:
 2081              		.thumb
 2082              		.syntax unified
 2083              	.L192:
 2084 0018 FEE7     		b	.L192
 2085              	.L191:
 2086              	.LBE129:
 2087              	.LBE128:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2088              		.loc 1 2106 0
 2089 001a 70B5     		push	{r4, r5, r6, lr}
 2090              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 133


 2091              		.cfi_offset 4, -16
 2092              		.cfi_offset 5, -12
 2093              		.cfi_offset 6, -8
 2094              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2095              		.loc 1 2119 0
 2096 001c FFF7FEFF 		bl	vPortEnterCritical
 2097              	.LVL178:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2098              		.loc 1 2121 0
 2099 0020 314B     		ldr	r3, .L206
 2100 0022 D3F81821 		ldr	r2, [r3, #280]
 2101 0026 013A     		subs	r2, r2, #1
 2102 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2103              		.loc 1 2123 0
 2104 002c D3F81831 		ldr	r3, [r3, #280]
 2105 0030 002B     		cmp	r3, #0
 2106 0032 52D1     		bne	.L202
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2107              		.loc 1 2125 0
 2108 0034 2C4B     		ldr	r3, .L206
 2109 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2110 003a 3BBB     		cbnz	r3, .L203
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2111              		.loc 1 2108 0
 2112 003c 0024     		movs	r4, #0
 2113 003e 4FE0     		b	.L193
 2114              	.LVL179:
 2115              	.L197:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2116              		.loc 1 2131 0
 2117 0040 294D     		ldr	r5, .L206
 2118 0042 2B6A     		ldr	r3, [r5, #32]
 2119 0044 DC68     		ldr	r4, [r3, #12]
 2120              	.LVL180:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2121              		.loc 1 2132 0
 2122 0046 04F11800 		add	r0, r4, #24
 2123 004a FFF7FEFF 		bl	uxListRemove
 2124              	.LVL181:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2125              		.loc 1 2133 0
 2126 004e 261D     		adds	r6, r4, #4
 2127 0050 3046     		mov	r0, r6
 2128 0052 FFF7FEFF 		bl	uxListRemove
 2129              	.LVL182:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2130              		.loc 1 2134 0
 2131 0056 E36A     		ldr	r3, [r4, #44]
 2132 0058 D5F80C21 		ldr	r2, [r5, #268]
 2133 005c 9342     		cmp	r3, r2
 2134 005e 01D9     		bls	.L195
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2135              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2136 0060 C5F80C31 		str	r3, [r5, #268]
 2137              	.L195:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 134


2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2138              		.loc 1 2134 0 discriminator 3
 2139 0064 204D     		ldr	r5, .L206
 2140 0066 05F13000 		add	r0, r5, #48
 2141 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2142 006e 9A00     		lsls	r2, r3, #2
 2143 0070 3146     		mov	r1, r6
 2144 0072 1044     		add	r0, r0, r2
 2145 0074 FFF7FEFF 		bl	vListInsertEnd
 2146              	.LVL183:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2147              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2148 0078 E26A     		ldr	r2, [r4, #44]
 2149 007a D5F80031 		ldr	r3, [r5, #256]
 2150 007e DB6A     		ldr	r3, [r3, #44]
 2151 0080 9A42     		cmp	r2, r3
 2152 0082 04D3     		bcc	.L194
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2153              		.loc 1 2140 0
 2154 0084 0122     		movs	r2, #1
 2155 0086 C5F82821 		str	r2, [r5, #296]
 2156 008a 00E0     		b	.L194
 2157              	.LVL184:
 2158              	.L203:
 2159 008c 0024     		movs	r4, #0
 2160              	.LVL185:
 2161              	.L194:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2162              		.loc 1 2129 0
 2163 008e 164B     		ldr	r3, .L206
 2164 0090 5B69     		ldr	r3, [r3, #20]
 2165 0092 002B     		cmp	r3, #0
 2166 0094 D4D1     		bne	.L197
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2167              		.loc 1 2148 0
 2168 0096 0CB1     		cbz	r4, .L198
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2169              		.loc 1 2156 0
 2170 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2171              	.LVL186:
 2172              	.L198:
 2173              	.LBB130:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2174              		.loc 1 2164 0
 2175 009c 124B     		ldr	r3, .L206
 2176 009e D3F82441 		ldr	r4, [r3, #292]
 2177              	.LVL187:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2178              		.loc 1 2166 0
 2179 00a2 64B1     		cbz	r4, .L199
 2180              	.L201:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2181              		.loc 1 2170 0
 2182 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2183              	.LVL188:
 2184 00a8 18B1     		cbz	r0, .L200
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 135


 2185              		.loc 1 2172 0
 2186 00aa 0122     		movs	r2, #1
 2187 00ac 0E4B     		ldr	r3, .L206
 2188 00ae C3F82821 		str	r2, [r3, #296]
 2189              	.L200:
 2190              	.LVL189:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2191              		.loc 1 2179 0
 2192 00b2 013C     		subs	r4, r4, #1
 2193              	.LVL190:
 2194 00b4 F6D1     		bne	.L201
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2195              		.loc 1 2181 0
 2196 00b6 0022     		movs	r2, #0
 2197 00b8 0B4B     		ldr	r3, .L206
 2198 00ba C3F82421 		str	r2, [r3, #292]
 2199              	.L199:
 2200              	.LBE130:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2201              		.loc 1 2189 0
 2202 00be 0A4B     		ldr	r3, .L206
 2203 00c0 D3F82831 		ldr	r3, [r3, #296]
 2204 00c4 5BB1     		cbz	r3, .L204
 2205              	.LVL191:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2206              		.loc 1 2196 0
 2207 00c6 4FF08052 		mov	r2, #268435456
 2208 00ca 084B     		ldr	r3, .L206+4
 2209 00cc 1A60     		str	r2, [r3]
 2210              		.syntax unified
 2211              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2212 00ce BFF34F8F 		dsb
 2213              	@ 0 "" 2
 2214              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2215 00d2 BFF36F8F 		isb
 2216              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2217              		.loc 1 2193 0
 2218              		.thumb
 2219              		.syntax unified
 2220 00d6 0124     		movs	r4, #1
 2221              	.LVL192:
 2222 00d8 02E0     		b	.L193
 2223              	.LVL193:
 2224              	.L202:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2225              		.loc 1 2108 0
 2226 00da 0024     		movs	r4, #0
 2227 00dc 00E0     		b	.L193
 2228              	.LVL194:
 2229              	.L204:
 2230 00de 0024     		movs	r4, #0
 2231              	.LVL195:
 2232              	.L193:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2233              		.loc 1 2209 0
 2234 00e0 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 136


 2235              	.LVL196:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2236              		.loc 1 2212 0
 2237 00e4 2046     		mov	r0, r4
 2238 00e6 70BD     		pop	{r4, r5, r6, pc}
 2239              	.LVL197:
 2240              	.L207:
 2241              		.align	2
 2242              	.L206:
 2243 00e8 00000000 		.word	.LANCHOR0
 2244 00ec 04ED00E0 		.word	-536810236
 2245              		.cfi_endproc
 2246              	.LFE152:
 2247              		.size	xTaskResumeAll, .-xTaskResumeAll
 2248              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2249              		.align	2
 2250              		.global	vTaskDelayUntil
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	vTaskDelayUntil, %function
 2254              	vTaskDelayUntil:
 2255              	.LFB140:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2256              		.loc 1 1205 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              	.LVL198:
 2261 0000 38B5     		push	{r3, r4, r5, lr}
 2262              		.cfi_def_cfa_offset 16
 2263              		.cfi_offset 3, -16
 2264              		.cfi_offset 4, -12
 2265              		.cfi_offset 5, -8
 2266              		.cfi_offset 14, -4
 2267              	.LVL199:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2268              		.loc 1 1209 0
 2269 0002 40B9     		cbnz	r0, .L209
 2270              	.LBB131:
 2271              	.LBB132:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2272              		.loc 2 156 0
 2273              		.syntax unified
 2274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2275 0004 4FF02003 			mov r3, #32												
 2276 0008 83F31188 		msr basepri, r3											
 2277 000c BFF36F8F 		isb														
 2278 0010 BFF34F8F 		dsb														
 2279              	
 2280              	@ 0 "" 2
 2281              	.LVL200:
 2282              		.thumb
 2283              		.syntax unified
 2284              	.L210:
 2285 0014 FEE7     		b	.L210
 2286              	.L209:
 2287 0016 0546     		mov	r5, r0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 137


 2288              	.LBE132:
 2289              	.LBE131:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2290              		.loc 1 1210 0
 2291 0018 41B9     		cbnz	r1, .L211
 2292              	.LBB133:
 2293              	.LBB134:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2294              		.loc 2 156 0
 2295              		.syntax unified
 2296              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2297 001a 4FF02003 			mov r3, #32												
 2298 001e 83F31188 		msr basepri, r3											
 2299 0022 BFF36F8F 		isb														
 2300 0026 BFF34F8F 		dsb														
 2301              	
 2302              	@ 0 "" 2
 2303              	.LVL201:
 2304              		.thumb
 2305              		.syntax unified
 2306              	.L212:
 2307 002a FEE7     		b	.L212
 2308              	.L211:
 2309              	.LBE134:
 2310              	.LBE133:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2311              		.loc 1 1211 0
 2312 002c 1D4B     		ldr	r3, .L224
 2313 002e D3F81831 		ldr	r3, [r3, #280]
 2314 0032 43B1     		cbz	r3, .L213
 2315              	.LBB135:
 2316              	.LBB136:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2317              		.loc 2 156 0
 2318              		.syntax unified
 2319              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2320 0034 4FF02003 			mov r3, #32												
 2321 0038 83F31188 		msr basepri, r3											
 2322 003c BFF36F8F 		isb														
 2323 0040 BFF34F8F 		dsb														
 2324              	
 2325              	@ 0 "" 2
 2326              	.LVL202:
 2327              		.thumb
 2328              		.syntax unified
 2329              	.L214:
 2330 0044 FEE7     		b	.L214
 2331              	.L213:
 2332 0046 0C46     		mov	r4, r1
 2333              	.LBE136:
 2334              	.LBE135:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2335              		.loc 1 1213 0
 2336 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2337              	.LVL203:
 2338              	.LBB137:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 138


 2339              		.loc 1 1217 0
 2340 004c 154B     		ldr	r3, .L224
 2341 004e D3F81401 		ldr	r0, [r3, #276]
 2342              	.LVL204:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2343              		.loc 1 1220 0
 2344 0052 2A68     		ldr	r2, [r5]
 2345 0054 A318     		adds	r3, r4, r2
 2346              	.LVL205:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2347              		.loc 1 1222 0
 2348 0056 9042     		cmp	r0, r2
 2349 0058 05D2     		bcs	.L215
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2350              		.loc 1 1229 0
 2351 005a 9A42     		cmp	r2, r3
 2352 005c 09D9     		bls	.L219
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2353              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2354 005e 9842     		cmp	r0, r3
 2355 0060 09D3     		bcc	.L220
 2356              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2357              		.loc 1 1207 0 is_stmt 1
 2358 0062 0022     		movs	r2, #0
 2359 0064 0CE0     		b	.L216
 2360              	.L215:
 2361              	.LBB138:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2362              		.loc 1 1243 0
 2363 0066 9A42     		cmp	r2, r3
 2364 0068 07D8     		bhi	.L221
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2365              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2366 006a 9842     		cmp	r0, r3
 2367 006c 07D3     		bcc	.L222
 2368              	.LBE138:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2369              		.loc 1 1207 0 is_stmt 1
 2370 006e 0022     		movs	r2, #0
 2371 0070 06E0     		b	.L216
 2372              	.L219:
 2373 0072 0022     		movs	r2, #0
 2374 0074 04E0     		b	.L216
 2375              	.L220:
 2376              	.LBB139:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2377              		.loc 1 1231 0
 2378 0076 0122     		movs	r2, #1
 2379 0078 02E0     		b	.L216
 2380              	.L221:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2381              		.loc 1 1245 0
 2382 007a 0122     		movs	r2, #1
 2383 007c 00E0     		b	.L216
 2384              	.L222:
 2385 007e 0122     		movs	r2, #1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 139


 2386              	.L216:
 2387              	.LVL206:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2388              		.loc 1 1254 0
 2389 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2390              		.loc 1 1256 0
 2391 0082 1AB1     		cbz	r2, .L217
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2392              		.loc 1 1262 0
 2393 0084 0021     		movs	r1, #0
 2394 0086 181A     		subs	r0, r3, r0
 2395              	.LVL207:
 2396 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2397              	.LVL208:
 2398              	.L217:
 2399              	.LBE139:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2400              		.loc 1 1269 0
 2401 008c FFF7FEFF 		bl	xTaskResumeAll
 2402              	.LVL209:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2403              		.loc 1 1273 0
 2404 0090 38B9     		cbnz	r0, .L208
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2405              		.loc 1 1275 0
 2406 0092 4FF08052 		mov	r2, #268435456
 2407 0096 044B     		ldr	r3, .L224+4
 2408 0098 1A60     		str	r2, [r3]
 2409              		.syntax unified
 2410              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2411 009a BFF34F8F 		dsb
 2412              	@ 0 "" 2
 2413              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2414 009e BFF36F8F 		isb
 2415              	@ 0 "" 2
 2416              		.thumb
 2417              		.syntax unified
 2418              	.L208:
 2419 00a2 38BD     		pop	{r3, r4, r5, pc}
 2420              	.LVL210:
 2421              	.L225:
 2422              		.align	2
 2423              	.L224:
 2424 00a4 00000000 		.word	.LANCHOR0
 2425 00a8 04ED00E0 		.word	-536810236
 2426              		.cfi_endproc
 2427              	.LFE140:
 2428              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2429              		.section	.text.vTaskDelay,"ax",%progbits
 2430              		.align	2
 2431              		.global	vTaskDelay
 2432              		.thumb
 2433              		.thumb_func
 2434              		.type	vTaskDelay, %function
 2435              	vTaskDelay:
 2436              	.LFB141:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 140


1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2437              		.loc 1 1289 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 2441              	.LVL211:
 2442 0000 10B5     		push	{r4, lr}
 2443              		.cfi_def_cfa_offset 8
 2444              		.cfi_offset 4, -8
 2445              		.cfi_offset 14, -4
 2446              	.LVL212:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2447              		.loc 1 1293 0
 2448 0002 B0B1     		cbz	r0, .L231
 2449 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2450              		.loc 1 1295 0
 2451 0006 104B     		ldr	r3, .L233
 2452 0008 D3F81831 		ldr	r3, [r3, #280]
 2453 000c 43B1     		cbz	r3, .L228
 2454              	.LBB140:
 2455              	.LBB141:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2456              		.loc 2 156 0
 2457              		.syntax unified
 2458              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2459 000e 4FF02003 			mov r3, #32												
 2460 0012 83F31188 		msr basepri, r3											
 2461 0016 BFF36F8F 		isb														
 2462 001a BFF34F8F 		dsb														
 2463              	
 2464              	@ 0 "" 2
 2465              	.LVL213:
 2466              		.thumb
 2467              		.syntax unified
 2468              	.L229:
 2469 001e FEE7     		b	.L229
 2470              	.L228:
 2471              	.LBE141:
 2472              	.LBE140:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2473              		.loc 1 1296 0
 2474 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2475              	.LVL214:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2476              		.loc 1 1307 0
 2477 0024 0021     		movs	r1, #0
 2478 0026 2046     		mov	r0, r4
 2479 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2480              	.LVL215:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2481              		.loc 1 1309 0
 2482 002c FFF7FEFF 		bl	xTaskResumeAll
 2483              	.LVL216:
 2484 0030 00E0     		b	.L227
 2485              	.LVL217:
 2486              	.L231:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 141


1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2487              		.loc 1 1290 0
 2488 0032 0020     		movs	r0, #0
 2489              	.LVL218:
 2490              	.L227:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2491              		.loc 1 1318 0
 2492 0034 38B9     		cbnz	r0, .L226
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2493              		.loc 1 1320 0
 2494 0036 4FF08052 		mov	r2, #268435456
 2495 003a 044B     		ldr	r3, .L233+4
 2496 003c 1A60     		str	r2, [r3]
 2497              		.syntax unified
 2498              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2499 003e BFF34F8F 		dsb
 2500              	@ 0 "" 2
 2501              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2502 0042 BFF36F8F 		isb
 2503              	@ 0 "" 2
 2504              		.thumb
 2505              		.syntax unified
 2506              	.L226:
 2507 0046 10BD     		pop	{r4, pc}
 2508              	.L234:
 2509              		.align	2
 2510              	.L233:
 2511 0048 00000000 		.word	.LANCHOR0
 2512 004c 04ED00E0 		.word	-536810236
 2513              		.cfi_endproc
 2514              	.LFE141:
 2515              		.size	vTaskDelay, .-vTaskDelay
 2516              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2517              		.align	2
 2518              		.global	vTaskSwitchContext
 2519              		.thumb
 2520              		.thumb_func
 2521              		.type	vTaskSwitchContext, %function
 2522              	vTaskSwitchContext:
 2523              	.LFB158:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2524              		.loc 1 2852 0
 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 0
 2527              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2528              		.loc 1 2853 0
 2529 0000 304B     		ldr	r3, .L246
 2530 0002 D3F81831 		ldr	r3, [r3, #280]
 2531 0006 23B1     		cbz	r3, .L236
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2532              		.loc 1 2857 0
 2533 0008 0122     		movs	r2, #1
 2534 000a 2E4B     		ldr	r3, .L246
 2535 000c C3F82821 		str	r2, [r3, #296]
 2536 0010 7047     		bx	lr
 2537              	.L236:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 142


2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2538              		.loc 1 2852 0
 2539 0012 10B5     		push	{r4, lr}
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 4, -8
 2542              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2543              		.loc 1 2861 0
 2544 0014 2B4B     		ldr	r3, .L246
 2545 0016 0022     		movs	r2, #0
 2546 0018 C3F82821 		str	r2, [r3, #296]
 2547              	.LBB142:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2548              		.loc 1 2893 0
 2549 001c D3F80031 		ldr	r3, [r3, #256]
 2550 0020 1B6B     		ldr	r3, [r3, #48]
 2551              	.LVL219:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2552              		.loc 1 2896 0
 2553 0022 1A68     		ldr	r2, [r3]
 2554 0024 B2F1A53F 		cmp	r2, #-1515870811
 2555 0028 0BD1     		bne	.L238
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2556              		.loc 1 2897 0 discriminator 1
 2557 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2558              		.loc 1 2896 0 discriminator 1
 2559 002c B2F1A53F 		cmp	r2, #-1515870811
 2560 0030 07D1     		bne	.L238
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2561              		.loc 1 2898 0
 2562 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2563              		.loc 1 2897 0
 2564 0034 B2F1A53F 		cmp	r2, #-1515870811
 2565 0038 03D1     		bne	.L238
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2566              		.loc 1 2899 0
 2567 003a DB68     		ldr	r3, [r3, #12]
 2568              	.LVL220:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2569              		.loc 1 2898 0
 2570 003c B3F1A53F 		cmp	r3, #-1515870811
 2571 0040 07D0     		beq	.L239
 2572              	.L238:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2573              		.loc 1 2901 0
 2574 0042 204B     		ldr	r3, .L246
 2575 0044 D3F80001 		ldr	r0, [r3, #256]
 2576 0048 D3F80011 		ldr	r1, [r3, #256]
 2577 004c 3431     		adds	r1, r1, #52
 2578 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2579              	.LVL221:
 2580              	.L239:
 2581              	.LBE142:
 2582              	.LBB143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 143


 2583              		.loc 1 2907 0
 2584 0052 1C4B     		ldr	r3, .L246
 2585 0054 D3F80C31 		ldr	r3, [r3, #268]
 2586              	.LVL222:
 2587 0058 0AE0     		b	.L240
 2588              	.L243:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2589              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2590 005a 43B9     		cbnz	r3, .L241
 2591              	.LBB144:
 2592              	.LBB145:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2593              		.loc 2 156 0 is_stmt 1
 2594              		.syntax unified
 2595              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2596 005c 4FF02003 			mov r3, #32												
 2597 0060 83F31188 		msr basepri, r3											
 2598 0064 BFF36F8F 		isb														
 2599 0068 BFF34F8F 		dsb														
 2600              	
 2601              	@ 0 "" 2
 2602              	.LVL223:
 2603              		.thumb
 2604              		.syntax unified
 2605              	.L242:
 2606 006c FEE7     		b	.L242
 2607              	.LVL224:
 2608              	.L241:
 2609              	.LBE145:
 2610              	.LBE144:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2611              		.loc 1 2907 0 discriminator 3
 2612 006e 013B     		subs	r3, r3, #1
 2613              	.LVL225:
 2614              	.L240:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2615              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2616 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2617 0074 8A00     		lsls	r2, r1, #2
 2618 0076 1349     		ldr	r1, .L246
 2619 0078 0A44     		add	r2, r2, r1
 2620 007a 126B     		ldr	r2, [r2, #48]
 2621 007c 002A     		cmp	r2, #0
 2622 007e ECD0     		beq	.L243
 2623              	.LVL226:
 2624              	.LBB146:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2625              		.loc 1 2907 0 discriminator 6
 2626 0080 0846     		mov	r0, r1
 2627 0082 9900     		lsls	r1, r3, #2
 2628 0084 CC18     		adds	r4, r1, r3
 2629 0086 A200     		lsls	r2, r4, #2
 2630 0088 0244     		add	r2, r2, r0
 2631 008a 546B     		ldr	r4, [r2, #52]
 2632 008c 6468     		ldr	r4, [r4, #4]
 2633 008e 5463     		str	r4, [r2, #52]
 2634 0090 3030     		adds	r0, r0, #48
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 144


 2635 0092 1944     		add	r1, r1, r3
 2636 0094 8A00     		lsls	r2, r1, #2
 2637 0096 0832     		adds	r2, r2, #8
 2638 0098 0244     		add	r2, r2, r0
 2639 009a 9442     		cmp	r4, r2
 2640 009c 06D1     		bne	.L244
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2641              		.loc 1 2907 0 discriminator 7
 2642 009e 6068     		ldr	r0, [r4, #4]
 2643 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2644 00a4 8A00     		lsls	r2, r1, #2
 2645 00a6 0749     		ldr	r1, .L246
 2646 00a8 0A44     		add	r2, r2, r1
 2647 00aa 5063     		str	r0, [r2, #52]
 2648              	.L244:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2649              		.loc 1 2907 0 discriminator 9
 2650 00ac 0549     		ldr	r1, .L246
 2651 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2652 00b2 8200     		lsls	r2, r0, #2
 2653 00b4 0A44     		add	r2, r2, r1
 2654 00b6 526B     		ldr	r2, [r2, #52]
 2655 00b8 D268     		ldr	r2, [r2, #12]
 2656 00ba C1F80021 		str	r2, [r1, #256]
 2657              	.LBE146:
 2658 00be C1F80C31 		str	r3, [r1, #268]
 2659 00c2 10BD     		pop	{r4, pc}
 2660              	.L247:
 2661              		.align	2
 2662              	.L246:
 2663 00c4 00000000 		.word	.LANCHOR0
 2664              	.LBE143:
 2665              		.cfi_endproc
 2666              	.LFE158:
 2667              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2668              		.section	.text.vTaskSuspend,"ax",%progbits
 2669              		.align	2
 2670              		.global	vTaskSuspend
 2671              		.thumb
 2672              		.thumb_func
 2673              		.type	vTaskSuspend, %function
 2674              	vTaskSuspend:
 2675              	.LFB145:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2676              		.loc 1 1631 0 is_stmt 1
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 0
 2679              		@ frame_needed = 0, uses_anonymous_args = 0
 2680              	.LVL227:
 2681 0000 38B5     		push	{r3, r4, r5, lr}
 2682              		.cfi_def_cfa_offset 16
 2683              		.cfi_offset 3, -16
 2684              		.cfi_offset 4, -12
 2685              		.cfi_offset 5, -8
 2686              		.cfi_offset 14, -4
 2687 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 145


 2688              		.loc 1 1634 0
 2689 0004 FFF7FEFF 		bl	vPortEnterCritical
 2690              	.LVL228:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2691              		.loc 1 1638 0
 2692 0008 14B9     		cbnz	r4, .L249
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2693              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2694 000a 294B     		ldr	r3, .L259
 2695 000c D3F80041 		ldr	r4, [r3, #256]
 2696              	.LVL229:
 2697              	.L249:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2698              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2699 0010 251D     		adds	r5, r4, #4
 2700 0012 2846     		mov	r0, r5
 2701 0014 FFF7FEFF 		bl	uxListRemove
 2702              	.LVL230:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2703              		.loc 1 1654 0 discriminator 4
 2704 0018 A36A     		ldr	r3, [r4, #40]
 2705 001a 1BB1     		cbz	r3, .L250
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2706              		.loc 1 1656 0
 2707 001c 04F11800 		add	r0, r4, #24
 2708 0020 FFF7FEFF 		bl	uxListRemove
 2709              	.LVL231:
 2710              	.L250:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2711              		.loc 1 1663 0
 2712 0024 2946     		mov	r1, r5
 2713 0026 2248     		ldr	r0, .L259
 2714 0028 FFF7FEFF 		bl	vListInsertEnd
 2715              	.LVL232:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2716              		.loc 1 1667 0
 2717 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2718 0030 DBB2     		uxtb	r3, r3
 2719 0032 012B     		cmp	r3, #1
 2720 0034 02D1     		bne	.L251
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2721              		.loc 1 1671 0
 2722 0036 0023     		movs	r3, #0
 2723 0038 84F85C30 		strb	r3, [r4, #92]
 2724              	.L251:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2725              		.loc 1 1676 0
 2726 003c FFF7FEFF 		bl	vPortExitCritical
 2727              	.LVL233:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2728              		.loc 1 1678 0
 2729 0040 1B4B     		ldr	r3, .L259
 2730 0042 D3F80431 		ldr	r3, [r3, #260]
 2731 0046 2BB1     		cbz	r3, .L252
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2732              		.loc 1 1682 0
 2733 0048 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 146


 2734              	.LVL234:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2735              		.loc 1 1684 0
 2736 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2737              	.LVL235:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2738              		.loc 1 1686 0
 2739 0050 FFF7FEFF 		bl	vPortExitCritical
 2740              	.LVL236:
 2741              	.L252:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2742              		.loc 1 1693 0
 2743 0054 164B     		ldr	r3, .L259
 2744 0056 D3F80031 		ldr	r3, [r3, #256]
 2745 005a 9C42     		cmp	r4, r3
 2746 005c 26D1     		bne	.L248
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2747              		.loc 1 1695 0
 2748 005e 144B     		ldr	r3, .L259
 2749 0060 D3F80431 		ldr	r3, [r3, #260]
 2750 0064 ABB1     		cbz	r3, .L254
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2751              		.loc 1 1698 0
 2752 0066 124B     		ldr	r3, .L259
 2753 0068 D3F81831 		ldr	r3, [r3, #280]
 2754 006c 43B1     		cbz	r3, .L255
 2755              	.LBB147:
 2756              	.LBB148:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2757              		.loc 2 156 0
 2758              		.syntax unified
 2759              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2760 006e 4FF02003 			mov r3, #32												
 2761 0072 83F31188 		msr basepri, r3											
 2762 0076 BFF36F8F 		isb														
 2763 007a BFF34F8F 		dsb														
 2764              	
 2765              	@ 0 "" 2
 2766              	.LVL237:
 2767              		.thumb
 2768              		.syntax unified
 2769              	.L256:
 2770 007e FEE7     		b	.L256
 2771              	.L255:
 2772              	.LBE148:
 2773              	.LBE147:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2774              		.loc 1 1699 0
 2775 0080 4FF08052 		mov	r2, #268435456
 2776 0084 0B4B     		ldr	r3, .L259+4
 2777 0086 1A60     		str	r2, [r3]
 2778              		.syntax unified
 2779              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2780 0088 BFF34F8F 		dsb
 2781              	@ 0 "" 2
 2782              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2783 008c BFF36F8F 		isb
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 147


 2784              	@ 0 "" 2
 2785              		.thumb
 2786              		.syntax unified
 2787 0090 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL238:
 2789              	.L254:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2790              		.loc 1 1706 0
 2791 0092 074B     		ldr	r3, .L259
 2792 0094 1A68     		ldr	r2, [r3]
 2793 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2794 009a 9A42     		cmp	r2, r3
 2795 009c 04D1     		bne	.L257
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2796              		.loc 1 1712 0
 2797 009e 0022     		movs	r2, #0
 2798 00a0 034B     		ldr	r3, .L259
 2799 00a2 C3F80021 		str	r2, [r3, #256]
 2800 00a6 38BD     		pop	{r3, r4, r5, pc}
 2801              	.LVL239:
 2802              	.L257:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2803              		.loc 1 1716 0
 2804 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2805              	.LVL240:
 2806              	.L248:
 2807 00ac 38BD     		pop	{r3, r4, r5, pc}
 2808              	.LVL241:
 2809              	.L260:
 2810 00ae 00BF     		.align	2
 2811              	.L259:
 2812 00b0 00000000 		.word	.LANCHOR0
 2813 00b4 04ED00E0 		.word	-536810236
 2814              		.cfi_endproc
 2815              	.LFE145:
 2816              		.size	vTaskSuspend, .-vTaskSuspend
 2817              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2818              		.align	2
 2819              		.global	vTaskPlaceOnEventList
 2820              		.thumb
 2821              		.thumb_func
 2822              		.type	vTaskPlaceOnEventList, %function
 2823              	vTaskPlaceOnEventList:
 2824              	.LFB159:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2825              		.loc 1 2922 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 0
 2828              		@ frame_needed = 0, uses_anonymous_args = 0
 2829              	.LVL242:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2830              		.loc 1 2923 0
 2831 0000 40B9     		cbnz	r0, .L262
 2832              	.LBB149:
 2833              	.LBB150:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2834              		.loc 2 156 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 148


 2835              		.syntax unified
 2836              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2837 0002 4FF02003 			mov r3, #32												
 2838 0006 83F31188 		msr basepri, r3											
 2839 000a BFF36F8F 		isb														
 2840 000e BFF34F8F 		dsb														
 2841              	
 2842              	@ 0 "" 2
 2843              	.LVL243:
 2844              		.thumb
 2845              		.syntax unified
 2846              	.L263:
 2847 0012 FEE7     		b	.L263
 2848              	.L262:
 2849              	.LBE150:
 2850              	.LBE149:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2851              		.loc 1 2922 0
 2852 0014 10B5     		push	{r4, lr}
 2853              		.cfi_def_cfa_offset 8
 2854              		.cfi_offset 4, -8
 2855              		.cfi_offset 14, -4
 2856 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2857              		.loc 1 2932 0
 2858 0018 054B     		ldr	r3, .L265
 2859 001a D3F80011 		ldr	r1, [r3, #256]
 2860              	.LVL244:
 2861 001e 1831     		adds	r1, r1, #24
 2862 0020 FFF7FEFF 		bl	vListInsert
 2863              	.LVL245:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2864              		.loc 1 2934 0
 2865 0024 0121     		movs	r1, #1
 2866 0026 2046     		mov	r0, r4
 2867 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2868              	.LVL246:
 2869 002c 10BD     		pop	{r4, pc}
 2870              	.LVL247:
 2871              	.L266:
 2872 002e 00BF     		.align	2
 2873              	.L265:
 2874 0030 00000000 		.word	.LANCHOR0
 2875              		.cfi_endproc
 2876              	.LFE159:
 2877              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2878              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2879              		.align	2
 2880              		.global	vTaskPlaceOnUnorderedEventList
 2881              		.thumb
 2882              		.thumb_func
 2883              		.type	vTaskPlaceOnUnorderedEventList, %function
 2884              	vTaskPlaceOnUnorderedEventList:
 2885              	.LFB160:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2886              		.loc 1 2939 0
 2887              		.cfi_startproc
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 149


 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
 2890              	.LVL248:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2891              		.loc 1 2940 0
 2892 0000 40B9     		cbnz	r0, .L268
 2893              	.LBB151:
 2894              	.LBB152:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2895              		.loc 2 156 0
 2896              		.syntax unified
 2897              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2898 0002 4FF02003 			mov r3, #32												
 2899 0006 83F31188 		msr basepri, r3											
 2900 000a BFF36F8F 		isb														
 2901 000e BFF34F8F 		dsb														
 2902              	
 2903              	@ 0 "" 2
 2904              	.LVL249:
 2905              		.thumb
 2906              		.syntax unified
 2907              	.L269:
 2908 0012 FEE7     		b	.L269
 2909              	.L268:
 2910 0014 0346     		mov	r3, r0
 2911              	.LBE152:
 2912              	.LBE151:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2913              		.loc 1 2944 0
 2914 0016 1048     		ldr	r0, .L273
 2915              	.LVL250:
 2916 0018 D0F81801 		ldr	r0, [r0, #280]
 2917 001c 40B9     		cbnz	r0, .L270
 2918              	.LBB153:
 2919              	.LBB154:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2920              		.loc 2 156 0
 2921              		.syntax unified
 2922              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2923 001e 4FF02003 			mov r3, #32												
 2924 0022 83F31188 		msr basepri, r3											
 2925 0026 BFF36F8F 		isb														
 2926 002a BFF34F8F 		dsb														
 2927              	
 2928              	@ 0 "" 2
 2929              	.LVL251:
 2930              		.thumb
 2931              		.syntax unified
 2932              	.L271:
 2933 002e FEE7     		b	.L271
 2934              	.LVL252:
 2935              	.L270:
 2936              	.LBE154:
 2937              	.LBE153:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2938              		.loc 1 2939 0
 2939 0030 10B5     		push	{r4, lr}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 150


 2940              		.cfi_def_cfa_offset 8
 2941              		.cfi_offset 4, -8
 2942              		.cfi_offset 14, -4
 2943 0032 1846     		mov	r0, r3
 2944 0034 1446     		mov	r4, r2
 2945 0036 0B46     		mov	r3, r1
 2946              	.LVL253:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2947              		.loc 1 2949 0
 2948 0038 074A     		ldr	r2, .L273
 2949              	.LVL254:
 2950 003a D2F80011 		ldr	r1, [r2, #256]
 2951              	.LVL255:
 2952 003e 43F00043 		orr	r3, r3, #-2147483648
 2953              	.LVL256:
 2954 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2955              		.loc 1 2956 0
 2956 0044 D2F80011 		ldr	r1, [r2, #256]
 2957 0048 1831     		adds	r1, r1, #24
 2958 004a FFF7FEFF 		bl	vListInsertEnd
 2959              	.LVL257:
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2960              		.loc 1 2958 0
 2961 004e 0121     		movs	r1, #1
 2962 0050 2046     		mov	r0, r4
 2963 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2964              	.LVL258:
 2965 0056 10BD     		pop	{r4, pc}
 2966              	.LVL259:
 2967              	.L274:
 2968              		.align	2
 2969              	.L273:
 2970 0058 00000000 		.word	.LANCHOR0
 2971              		.cfi_endproc
 2972              	.LFE160:
 2973              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2974              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2975              		.align	2
 2976              		.global	vTaskPlaceOnEventListRestricted
 2977              		.thumb
 2978              		.thumb_func
 2979              		.type	vTaskPlaceOnEventListRestricted, %function
 2980              	vTaskPlaceOnEventListRestricted:
 2981              	.LFB161:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2982              		.loc 1 2965 0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 0
 2985              		@ frame_needed = 0, uses_anonymous_args = 0
 2986              	.LVL260:
 2987 0000 38B5     		push	{r3, r4, r5, lr}
 2988              		.cfi_def_cfa_offset 16
 2989              		.cfi_offset 3, -16
 2990              		.cfi_offset 4, -12
 2991              		.cfi_offset 5, -8
 2992              		.cfi_offset 14, -4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 151


2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2993              		.loc 1 2966 0
 2994 0002 40B9     		cbnz	r0, .L276
 2995              	.LBB155:
 2996              	.LBB156:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2997              		.loc 2 156 0
 2998              		.syntax unified
 2999              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3000 0004 4FF02003 			mov r3, #32												
 3001 0008 83F31188 		msr basepri, r3											
 3002 000c BFF36F8F 		isb														
 3003 0010 BFF34F8F 		dsb														
 3004              	
 3005              	@ 0 "" 2
 3006              	.LVL261:
 3007              		.thumb
 3008              		.syntax unified
 3009              	.L277:
 3010 0014 FEE7     		b	.L277
 3011              	.L276:
 3012 0016 0C46     		mov	r4, r1
 3013 0018 1546     		mov	r5, r2
 3014              	.LBE156:
 3015              	.LBE155:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3016              		.loc 1 2978 0
 3017 001a 074A     		ldr	r2, .L281
 3018              	.LVL262:
 3019 001c D2F80011 		ldr	r1, [r2, #256]
 3020              	.LVL263:
 3021 0020 1831     		adds	r1, r1, #24
 3022 0022 FFF7FEFF 		bl	vListInsertEnd
 3023              	.LVL264:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3024              		.loc 1 2983 0
 3025 0026 0DB1     		cbz	r5, .L278
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3026              		.loc 1 2985 0
 3027 0028 4FF0FF34 		mov	r4, #-1
 3028              	.LVL265:
 3029              	.L278:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3030              		.loc 1 2989 0
 3031 002c 2946     		mov	r1, r5
 3032 002e 2046     		mov	r0, r4
 3033 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3034              	.LVL266:
 3035 0034 38BD     		pop	{r3, r4, r5, pc}
 3036              	.LVL267:
 3037              	.L282:
 3038 0036 00BF     		.align	2
 3039              	.L281:
 3040 0038 00000000 		.word	.LANCHOR0
 3041              		.cfi_endproc
 3042              	.LFE161:
 3043              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 152


 3044              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3045              		.align	2
 3046              		.global	xTaskRemoveFromEventList
 3047              		.thumb
 3048              		.thumb_func
 3049              		.type	xTaskRemoveFromEventList, %function
 3050              	xTaskRemoveFromEventList:
 3051              	.LFB162:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3052              		.loc 1 2996 0
 3053              		.cfi_startproc
 3054              		@ args = 0, pretend = 0, frame = 0
 3055              		@ frame_needed = 0, uses_anonymous_args = 0
 3056              	.LVL268:
 3057 0000 38B5     		push	{r3, r4, r5, lr}
 3058              		.cfi_def_cfa_offset 16
 3059              		.cfi_offset 3, -16
 3060              		.cfi_offset 4, -12
 3061              		.cfi_offset 5, -8
 3062              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3063              		.loc 1 3013 0
 3064 0002 C368     		ldr	r3, [r0, #12]
 3065 0004 DC68     		ldr	r4, [r3, #12]
 3066              	.LVL269:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3067              		.loc 1 3014 0
 3068 0006 44B9     		cbnz	r4, .L284
 3069              	.LBB157:
 3070              	.LBB158:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3071              		.loc 2 156 0
 3072              		.syntax unified
 3073              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3074 0008 4FF02003 			mov r3, #32												
 3075 000c 83F31188 		msr basepri, r3											
 3076 0010 BFF36F8F 		isb														
 3077 0014 BFF34F8F 		dsb														
 3078              	
 3079              	@ 0 "" 2
 3080              	.LVL270:
 3081              		.thumb
 3082              		.syntax unified
 3083              	.L285:
 3084 0018 FEE7     		b	.L285
 3085              	.L284:
 3086              	.LBE158:
 3087              	.LBE157:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3088              		.loc 1 3015 0
 3089 001a 04F11805 		add	r5, r4, #24
 3090 001e 2846     		mov	r0, r5
 3091              	.LVL271:
 3092 0020 FFF7FEFF 		bl	uxListRemove
 3093              	.LVL272:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3094              		.loc 1 3017 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 153


 3095 0024 154B     		ldr	r3, .L292
 3096 0026 D3F81831 		ldr	r3, [r3, #280]
 3097 002a ABB9     		cbnz	r3, .L286
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3098              		.loc 1 3019 0
 3099 002c 251D     		adds	r5, r4, #4
 3100 002e 2846     		mov	r0, r5
 3101 0030 FFF7FEFF 		bl	uxListRemove
 3102              	.LVL273:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3103              		.loc 1 3020 0
 3104 0034 E36A     		ldr	r3, [r4, #44]
 3105 0036 114A     		ldr	r2, .L292
 3106 0038 D2F80C21 		ldr	r2, [r2, #268]
 3107 003c 9342     		cmp	r3, r2
 3108 003e 02D9     		bls	.L287
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3109              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3110 0040 0E4A     		ldr	r2, .L292
 3111 0042 C2F80C31 		str	r3, [r2, #268]
 3112              	.L287:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3113              		.loc 1 3020 0 discriminator 3
 3114 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3115 004a 9A00     		lsls	r2, r3, #2
 3116 004c 2946     		mov	r1, r5
 3117 004e 0C48     		ldr	r0, .L292+4
 3118 0050 1044     		add	r0, r0, r2
 3119 0052 FFF7FEFF 		bl	vListInsertEnd
 3120              	.LVL274:
 3121 0056 03E0     		b	.L288
 3122              	.L286:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3123              		.loc 1 3026 0 is_stmt 1
 3124 0058 2946     		mov	r1, r5
 3125 005a 0A48     		ldr	r0, .L292+8
 3126 005c FFF7FEFF 		bl	vListInsertEnd
 3127              	.LVL275:
 3128              	.L288:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3129              		.loc 1 3029 0
 3130 0060 E26A     		ldr	r2, [r4, #44]
 3131 0062 064B     		ldr	r3, .L292
 3132 0064 D3F80031 		ldr	r3, [r3, #256]
 3133 0068 DB6A     		ldr	r3, [r3, #44]
 3134 006a 9A42     		cmp	r2, r3
 3135 006c 04D9     		bls	.L290
 3136              	.LVL276:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3137              		.loc 1 3038 0
 3138 006e 0120     		movs	r0, #1
 3139 0070 024B     		ldr	r3, .L292
 3140 0072 C3F82801 		str	r0, [r3, #296]
 3141 0076 38BD     		pop	{r3, r4, r5, pc}
 3142              	.LVL277:
 3143              	.L290:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 154


 3144              		.loc 1 3042 0
 3145 0078 0020     		movs	r0, #0
 3146              	.LVL278:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3147              		.loc 1 3060 0
 3148 007a 38BD     		pop	{r3, r4, r5, pc}
 3149              	.LVL279:
 3150              	.L293:
 3151              		.align	2
 3152              	.L292:
 3153 007c 00000000 		.word	.LANCHOR0
 3154 0080 30000000 		.word	.LANCHOR0+48
 3155 0084 14000000 		.word	.LANCHOR0+20
 3156              		.cfi_endproc
 3157              	.LFE162:
 3158              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3159              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3160              		.align	2
 3161              		.global	vTaskRemoveFromUnorderedEventList
 3162              		.thumb
 3163              		.thumb_func
 3164              		.type	vTaskRemoveFromUnorderedEventList, %function
 3165              	vTaskRemoveFromUnorderedEventList:
 3166              	.LFB163:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3167              		.loc 1 3064 0
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 0
 3170              		@ frame_needed = 0, uses_anonymous_args = 0
 3171              	.LVL280:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3172              		.loc 1 3069 0
 3173 0000 1F4B     		ldr	r3, .L302
 3174 0002 D3F81831 		ldr	r3, [r3, #280]
 3175 0006 43B9     		cbnz	r3, .L295
 3176              	.LBB159:
 3177              	.LBB160:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3178              		.loc 2 156 0
 3179              		.syntax unified
 3180              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3181 0008 4FF02003 			mov r3, #32												
 3182 000c 83F31188 		msr basepri, r3											
 3183 0010 BFF36F8F 		isb														
 3184 0014 BFF34F8F 		dsb														
 3185              	
 3186              	@ 0 "" 2
 3187              	.LVL281:
 3188              		.thumb
 3189              		.syntax unified
 3190              	.L296:
 3191 0018 FEE7     		b	.L296
 3192              	.L295:
 3193              	.LBE160:
 3194              	.LBE159:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3195              		.loc 1 3064 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 155


 3196 001a 70B5     		push	{r4, r5, r6, lr}
 3197              		.cfi_def_cfa_offset 16
 3198              		.cfi_offset 4, -16
 3199              		.cfi_offset 5, -12
 3200              		.cfi_offset 6, -8
 3201              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3202              		.loc 1 3072 0
 3203 001c 41F00043 		orr	r3, r1, #-2147483648
 3204 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3205              		.loc 1 3076 0
 3206 0022 C468     		ldr	r4, [r0, #12]
 3207              	.LVL282:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3208              		.loc 1 3077 0
 3209 0024 44B9     		cbnz	r4, .L297
 3210              	.LBB161:
 3211              	.LBB162:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3212              		.loc 2 156 0
 3213              		.syntax unified
 3214              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3215 0026 4FF02003 			mov r3, #32												
 3216 002a 83F31188 		msr basepri, r3											
 3217 002e BFF36F8F 		isb														
 3218 0032 BFF34F8F 		dsb														
 3219              	
 3220              	@ 0 "" 2
 3221              	.LVL283:
 3222              		.thumb
 3223              		.syntax unified
 3224              	.L298:
 3225 0036 FEE7     		b	.L298
 3226              	.L297:
 3227              	.LBE162:
 3228              	.LBE161:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3229              		.loc 1 3078 0
 3230 0038 FFF7FEFF 		bl	uxListRemove
 3231              	.LVL284:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3232              		.loc 1 3083 0
 3233 003c 261D     		adds	r6, r4, #4
 3234 003e 3046     		mov	r0, r6
 3235 0040 FFF7FEFF 		bl	uxListRemove
 3236              	.LVL285:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3237              		.loc 1 3084 0
 3238 0044 E36A     		ldr	r3, [r4, #44]
 3239 0046 0E4A     		ldr	r2, .L302
 3240 0048 D2F80C21 		ldr	r2, [r2, #268]
 3241 004c 9342     		cmp	r3, r2
 3242 004e 02D9     		bls	.L299
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3243              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3244 0050 0B4A     		ldr	r2, .L302
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 156


 3245 0052 C2F80C31 		str	r3, [r2, #268]
 3246              	.L299:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3247              		.loc 1 3084 0 discriminator 3
 3248 0056 0A4D     		ldr	r5, .L302
 3249 0058 05F13000 		add	r0, r5, #48
 3250 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3251 0060 9A00     		lsls	r2, r3, #2
 3252 0062 3146     		mov	r1, r6
 3253 0064 1044     		add	r0, r0, r2
 3254 0066 FFF7FEFF 		bl	vListInsertEnd
 3255              	.LVL286:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3256              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3257 006a E26A     		ldr	r2, [r4, #44]
 3258 006c D5F80031 		ldr	r3, [r5, #256]
 3259 0070 DB6A     		ldr	r3, [r3, #44]
 3260 0072 9A42     		cmp	r2, r3
 3261 0074 02D9     		bls	.L294
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3262              		.loc 1 3092 0
 3263 0076 0122     		movs	r2, #1
 3264 0078 C5F82821 		str	r2, [r5, #296]
 3265              	.L294:
 3266 007c 70BD     		pop	{r4, r5, r6, pc}
 3267              	.LVL287:
 3268              	.L303:
 3269 007e 00BF     		.align	2
 3270              	.L302:
 3271 0080 00000000 		.word	.LANCHOR0
 3272              		.cfi_endproc
 3273              	.LFE163:
 3274              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3275              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3276              		.align	2
 3277              		.global	vTaskSetTimeOutState
 3278              		.thumb
 3279              		.thumb_func
 3280              		.type	vTaskSetTimeOutState, %function
 3281              	vTaskSetTimeOutState:
 3282              	.LFB164:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3283              		.loc 1 3098 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287              	.LVL288:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3288              		.loc 1 3099 0
 3289 0000 40B9     		cbnz	r0, .L305
 3290              	.LBB163:
 3291              	.LBB164:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3292              		.loc 2 156 0
 3293              		.syntax unified
 3294              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3295 0002 4FF02003 			mov r3, #32												
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 157


 3296 0006 83F31188 		msr basepri, r3											
 3297 000a BFF36F8F 		isb														
 3298 000e BFF34F8F 		dsb														
 3299              	
 3300              	@ 0 "" 2
 3301              	.LVL289:
 3302              		.thumb
 3303              		.syntax unified
 3304              	.L306:
 3305 0012 FEE7     		b	.L306
 3306              	.L305:
 3307              	.LBE164:
 3308              	.LBE163:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3309              		.loc 1 3098 0
 3310 0014 10B5     		push	{r4, lr}
 3311              		.cfi_def_cfa_offset 8
 3312              		.cfi_offset 4, -8
 3313              		.cfi_offset 14, -4
 3314 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3315              		.loc 1 3100 0
 3316 0018 FFF7FEFF 		bl	vPortEnterCritical
 3317              	.LVL290:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3318              		.loc 1 3102 0
 3319 001c 044B     		ldr	r3, .L308
 3320 001e D3F82021 		ldr	r2, [r3, #288]
 3321 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3322              		.loc 1 3103 0
 3323 0024 D3F81431 		ldr	r3, [r3, #276]
 3324 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3325              		.loc 1 3105 0
 3326 002a FFF7FEFF 		bl	vPortExitCritical
 3327              	.LVL291:
 3328 002e 10BD     		pop	{r4, pc}
 3329              	.LVL292:
 3330              	.L309:
 3331              		.align	2
 3332              	.L308:
 3333 0030 00000000 		.word	.LANCHOR0
 3334              		.cfi_endproc
 3335              	.LFE164:
 3336              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3337              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3338              		.align	2
 3339              		.global	vTaskInternalSetTimeOutState
 3340              		.thumb
 3341              		.thumb_func
 3342              		.type	vTaskInternalSetTimeOutState, %function
 3343              	vTaskInternalSetTimeOutState:
 3344              	.LFB165:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3345              		.loc 1 3110 0
 3346              		.cfi_startproc
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 158


 3347              		@ args = 0, pretend = 0, frame = 0
 3348              		@ frame_needed = 0, uses_anonymous_args = 0
 3349              		@ link register save eliminated.
 3350              	.LVL293:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3351              		.loc 1 3112 0
 3352 0000 034B     		ldr	r3, .L311
 3353 0002 D3F82021 		ldr	r2, [r3, #288]
 3354 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3355              		.loc 1 3113 0
 3356 0008 D3F81431 		ldr	r3, [r3, #276]
 3357 000c 4360     		str	r3, [r0, #4]
 3358 000e 7047     		bx	lr
 3359              	.L312:
 3360              		.align	2
 3361              	.L311:
 3362 0010 00000000 		.word	.LANCHOR0
 3363              		.cfi_endproc
 3364              	.LFE165:
 3365              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3366              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3367              		.align	2
 3368              		.global	xTaskCheckForTimeOut
 3369              		.thumb
 3370              		.thumb_func
 3371              		.type	xTaskCheckForTimeOut, %function
 3372              	xTaskCheckForTimeOut:
 3373              	.LFB166:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3374              		.loc 1 3118 0
 3375              		.cfi_startproc
 3376              		@ args = 0, pretend = 0, frame = 0
 3377              		@ frame_needed = 0, uses_anonymous_args = 0
 3378              	.LVL294:
 3379 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3380              		.cfi_def_cfa_offset 24
 3381              		.cfi_offset 3, -24
 3382              		.cfi_offset 4, -20
 3383              		.cfi_offset 5, -16
 3384              		.cfi_offset 6, -12
 3385              		.cfi_offset 7, -8
 3386              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3387              		.loc 1 3121 0
 3388 0002 40B9     		cbnz	r0, .L314
 3389              	.LBB165:
 3390              	.LBB166:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3391              		.loc 2 156 0
 3392              		.syntax unified
 3393              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3394 0004 4FF02003 			mov r3, #32												
 3395 0008 83F31188 		msr basepri, r3											
 3396 000c BFF36F8F 		isb														
 3397 0010 BFF34F8F 		dsb														
 3398              	
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 159


 3399              	@ 0 "" 2
 3400              	.LVL295:
 3401              		.thumb
 3402              		.syntax unified
 3403              	.L315:
 3404 0014 FEE7     		b	.L315
 3405              	.L314:
 3406 0016 0546     		mov	r5, r0
 3407              	.LBE166:
 3408              	.LBE165:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3409              		.loc 1 3122 0
 3410 0018 41B9     		cbnz	r1, .L316
 3411              	.LBB167:
 3412              	.LBB168:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3413              		.loc 2 156 0
 3414              		.syntax unified
 3415              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3416 001a 4FF02003 			mov r3, #32												
 3417 001e 83F31188 		msr basepri, r3											
 3418 0022 BFF36F8F 		isb														
 3419 0026 BFF34F8F 		dsb														
 3420              	
 3421              	@ 0 "" 2
 3422              	.LVL296:
 3423              		.thumb
 3424              		.syntax unified
 3425              	.L317:
 3426 002a FEE7     		b	.L317
 3427              	.L316:
 3428 002c 0C46     		mov	r4, r1
 3429              	.LBE168:
 3430              	.LBE167:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3431              		.loc 1 3124 0
 3432 002e FFF7FEFF 		bl	vPortEnterCritical
 3433              	.LVL297:
 3434              	.LBB169:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3435              		.loc 1 3127 0
 3436 0032 124B     		ldr	r3, .L324
 3437 0034 D3F81401 		ldr	r0, [r3, #276]
 3438              	.LVL298:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3439              		.loc 1 3128 0
 3440 0038 6968     		ldr	r1, [r5, #4]
 3441 003a 421A     		subs	r2, r0, r1
 3442              	.LVL299:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3443              		.loc 1 3142 0
 3444 003c 2368     		ldr	r3, [r4]
 3445 003e B3F1FF3F 		cmp	r3, #-1
 3446 0042 14D0     		beq	.L321
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3447              		.loc 1 3152 0
 3448 0044 2F68     		ldr	r7, [r5]
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 160


 3449 0046 0D4E     		ldr	r6, .L324
 3450 0048 D6F82061 		ldr	r6, [r6, #288]
 3451 004c B742     		cmp	r7, r6
 3452 004e 01D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3453              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3454 0050 8842     		cmp	r0, r1
 3455 0052 0ED2     		bcs	.L322
 3456              	.L319:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3457              		.loc 1 3161 0 is_stmt 1
 3458 0054 9A42     		cmp	r2, r3
 3459 0056 06D2     		bcs	.L320
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3460              		.loc 1 3164 0
 3461 0058 9B1A     		subs	r3, r3, r2
 3462 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3463              		.loc 1 3165 0
 3464 005c 2846     		mov	r0, r5
 3465              	.LVL300:
 3466 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3467              	.LVL301:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3468              		.loc 1 3166 0
 3469 0062 0024     		movs	r4, #0
 3470              	.LVL302:
 3471 0064 06E0     		b	.L318
 3472              	.LVL303:
 3473              	.L320:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3474              		.loc 1 3170 0
 3475 0066 0023     		movs	r3, #0
 3476 0068 2360     		str	r3, [r4]
 3477              	.LVL304:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3478              		.loc 1 3171 0
 3479 006a 0124     		movs	r4, #1
 3480              	.LVL305:
 3481 006c 02E0     		b	.L318
 3482              	.LVL306:
 3483              	.L321:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3484              		.loc 1 3147 0
 3485 006e 0024     		movs	r4, #0
 3486              	.LVL307:
 3487 0070 00E0     		b	.L318
 3488              	.LVL308:
 3489              	.L322:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3490              		.loc 1 3159 0
 3491 0072 0124     		movs	r4, #1
 3492              	.LVL309:
 3493              	.L318:
 3494              	.LBE169:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3495              		.loc 1 3174 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 161


 3496 0074 FFF7FEFF 		bl	vPortExitCritical
 3497              	.LVL310:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3498              		.loc 1 3177 0
 3499 0078 2046     		mov	r0, r4
 3500 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3501              	.LVL311:
 3502              	.L325:
 3503              		.align	2
 3504              	.L324:
 3505 007c 00000000 		.word	.LANCHOR0
 3506              		.cfi_endproc
 3507              	.LFE166:
 3508              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3509              		.section	.text.vTaskMissedYield,"ax",%progbits
 3510              		.align	2
 3511              		.global	vTaskMissedYield
 3512              		.thumb
 3513              		.thumb_func
 3514              		.type	vTaskMissedYield, %function
 3515              	vTaskMissedYield:
 3516              	.LFB167:
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3517              		.loc 1 3181 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 0
 3520              		@ frame_needed = 0, uses_anonymous_args = 0
 3521              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3522              		.loc 1 3182 0
 3523 0000 0122     		movs	r2, #1
 3524 0002 024B     		ldr	r3, .L327
 3525 0004 C3F82821 		str	r2, [r3, #296]
 3526 0008 7047     		bx	lr
 3527              	.L328:
 3528 000a 00BF     		.align	2
 3529              	.L327:
 3530 000c 00000000 		.word	.LANCHOR0
 3531              		.cfi_endproc
 3532              	.LFE167:
 3533              		.size	vTaskMissedYield, .-vTaskMissedYield
 3534              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3535              		.align	2
 3536              		.global	vTaskSetThreadLocalStoragePointer
 3537              		.thumb
 3538              		.thumb_func
 3539              		.type	vTaskSetThreadLocalStoragePointer, %function
 3540              	vTaskSetThreadLocalStoragePointer:
 3541              	.LFB169:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3542              		.loc 1 3395 0
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 0
 3545              		@ frame_needed = 0, uses_anonymous_args = 0
 3546              		@ link register save eliminated.
 3547              	.LVL312:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 162


 3548              		.loc 1 3398 0
 3549 0000 0429     		cmp	r1, #4
 3550 0002 07DC     		bgt	.L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3551              		.loc 1 3400 0
 3552 0004 10B9     		cbnz	r0, .L331
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3553              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3554 0006 044B     		ldr	r3, .L332
 3555 0008 D3F80001 		ldr	r0, [r3, #256]
 3556              	.LVL313:
 3557              	.L331:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3558              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3559 000c 1031     		adds	r1, r1, #16
 3560              	.LVL314:
 3561 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3562              	.LVL315:
 3563 0012 4A60     		str	r2, [r1, #4]
 3564              	.LVL316:
 3565              	.L329:
 3566 0014 7047     		bx	lr
 3567              	.L333:
 3568 0016 00BF     		.align	2
 3569              	.L332:
 3570 0018 00000000 		.word	.LANCHOR0
 3571              		.cfi_endproc
 3572              	.LFE169:
 3573              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3574              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3575              		.align	2
 3576              		.global	pvTaskGetThreadLocalStoragePointer
 3577              		.thumb
 3578              		.thumb_func
 3579              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3580              	pvTaskGetThreadLocalStoragePointer:
 3581              	.LFB170:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3582              		.loc 1 3411 0
 3583              		.cfi_startproc
 3584              		@ args = 0, pretend = 0, frame = 0
 3585              		@ frame_needed = 0, uses_anonymous_args = 0
 3586              		@ link register save eliminated.
 3587              	.LVL317:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3588              		.loc 1 3415 0
 3589 0000 0429     		cmp	r1, #4
 3590 0002 08DC     		bgt	.L337
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3591              		.loc 1 3417 0
 3592 0004 10B9     		cbnz	r0, .L336
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3593              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3594 0006 054B     		ldr	r3, .L338
 3595 0008 D3F80001 		ldr	r0, [r3, #256]
 3596              	.LVL318:
 3597              	.L336:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 163


3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3598              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3599 000c 1031     		adds	r1, r1, #16
 3600              	.LVL319:
 3601 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3602              	.LVL320:
 3603 0012 4068     		ldr	r0, [r0, #4]
 3604              	.LVL321:
 3605 0014 7047     		bx	lr
 3606              	.LVL322:
 3607              	.L337:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3608              		.loc 1 3422 0
 3609 0016 0020     		movs	r0, #0
 3610              	.LVL323:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3611              		.loc 1 3426 0
 3612 0018 7047     		bx	lr
 3613              	.L339:
 3614 001a 00BF     		.align	2
 3615              	.L338:
 3616 001c 00000000 		.word	.LANCHOR0
 3617              		.cfi_endproc
 3618              	.LFE170:
 3619              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3620              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3621              		.align	2
 3622              		.global	xTaskGetCurrentTaskHandle
 3623              		.thumb
 3624              		.thumb_func
 3625              		.type	xTaskGetCurrentTaskHandle, %function
 3626              	xTaskGetCurrentTaskHandle:
 3627              	.LFB175:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3628              		.loc 1 3768 0
 3629              		.cfi_startproc
 3630              		@ args = 0, pretend = 0, frame = 0
 3631              		@ frame_needed = 0, uses_anonymous_args = 0
 3632              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3633              		.loc 1 3774 0
 3634 0000 014B     		ldr	r3, .L341
 3635 0002 D3F80001 		ldr	r0, [r3, #256]
 3636              	.LVL324:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3637              		.loc 1 3777 0
 3638 0006 7047     		bx	lr
 3639              	.L342:
 3640              		.align	2
 3641              	.L341:
 3642 0008 00000000 		.word	.LANCHOR0
 3643              		.cfi_endproc
 3644              	.LFE175:
 3645              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3646              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3647              		.align	2
 3648              		.global	xTaskGetSchedulerState
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 164


 3649              		.thumb
 3650              		.thumb_func
 3651              		.type	xTaskGetSchedulerState, %function
 3652              	xTaskGetSchedulerState:
 3653              	.LFB176:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3654              		.loc 1 3785 0
 3655              		.cfi_startproc
 3656              		@ args = 0, pretend = 0, frame = 0
 3657              		@ frame_needed = 0, uses_anonymous_args = 0
 3658              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3659              		.loc 1 3788 0
 3660 0000 064B     		ldr	r3, .L347
 3661 0002 D3F80431 		ldr	r3, [r3, #260]
 3662 0006 2BB1     		cbz	r3, .L345
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3663              		.loc 1 3794 0
 3664 0008 044B     		ldr	r3, .L347
 3665 000a D3F81831 		ldr	r3, [r3, #280]
 3666 000e 1BB9     		cbnz	r3, .L346
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3667              		.loc 1 3796 0
 3668 0010 0220     		movs	r0, #2
 3669 0012 7047     		bx	lr
 3670              	.L345:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3671              		.loc 1 3790 0
 3672 0014 0120     		movs	r0, #1
 3673 0016 7047     		bx	lr
 3674              	.L346:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3675              		.loc 1 3800 0
 3676 0018 0020     		movs	r0, #0
 3677              	.LVL325:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3678              		.loc 1 3805 0
 3679 001a 7047     		bx	lr
 3680              	.L348:
 3681              		.align	2
 3682              	.L347:
 3683 001c 00000000 		.word	.LANCHOR0
 3684              		.cfi_endproc
 3685              	.LFE176:
 3686              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3687              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3688              		.align	2
 3689              		.global	uxTaskResetEventItemValue
 3690              		.thumb
 3691              		.thumb_func
 3692              		.type	uxTaskResetEventItemValue, %function
 3693              	uxTaskResetEventItemValue:
 3694              	.LFB177:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3695              		.loc 1 4394 0
 3696              		.cfi_startproc
 3697              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 165


 3698              		@ frame_needed = 0, uses_anonymous_args = 0
 3699              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3700              		.loc 1 4397 0
 3701 0000 064B     		ldr	r3, .L350
 3702 0002 D3F80021 		ldr	r2, [r3, #256]
 3703 0006 9069     		ldr	r0, [r2, #24]
 3704              	.LVL326:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3705              		.loc 1 4401 0
 3706 0008 D3F80021 		ldr	r2, [r3, #256]
 3707 000c D3F80031 		ldr	r3, [r3, #256]
 3708 0010 DB6A     		ldr	r3, [r3, #44]
 3709 0012 C3F10703 		rsb	r3, r3, #7
 3710 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3711              		.loc 1 4404 0
 3712 0018 7047     		bx	lr
 3713              	.L351:
 3714 001a 00BF     		.align	2
 3715              	.L350:
 3716 001c 00000000 		.word	.LANCHOR0
 3717              		.cfi_endproc
 3718              	.LFE177:
 3719              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3720              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3721              		.align	2
 3722              		.global	ulTaskNotifyTake
 3723              		.thumb
 3724              		.thumb_func
 3725              		.type	ulTaskNotifyTake, %function
 3726              	ulTaskNotifyTake:
 3727              	.LFB178:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3728              		.loc 1 4427 0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 0
 3731              		@ frame_needed = 0, uses_anonymous_args = 0
 3732              	.LVL327:
 3733 0000 38B5     		push	{r3, r4, r5, lr}
 3734              		.cfi_def_cfa_offset 16
 3735              		.cfi_offset 3, -16
 3736              		.cfi_offset 4, -12
 3737              		.cfi_offset 5, -8
 3738              		.cfi_offset 14, -4
 3739 0002 0546     		mov	r5, r0
 3740 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3741              		.loc 1 4430 0
 3742 0006 FFF7FEFF 		bl	vPortEnterCritical
 3743              	.LVL328:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3744              		.loc 1 4433 0
 3745 000a 1B4B     		ldr	r3, .L357
 3746 000c D3F80031 		ldr	r3, [r3, #256]
 3747 0010 9B6D     		ldr	r3, [r3, #88]
 3748 0012 93B9     		cbnz	r3, .L353
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 166


4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3749              		.loc 1 4436 0
 3750 0014 184B     		ldr	r3, .L357
 3751 0016 D3F80031 		ldr	r3, [r3, #256]
 3752 001a 0122     		movs	r2, #1
 3753 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3754              		.loc 1 4438 0
 3755 0020 5CB1     		cbz	r4, .L353
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3756              		.loc 1 4440 0
 3757 0022 1146     		mov	r1, r2
 3758 0024 2046     		mov	r0, r4
 3759 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3760              	.LVL329:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3761              		.loc 1 4447 0
 3762 002a 4FF08052 		mov	r2, #268435456
 3763 002e 134B     		ldr	r3, .L357+4
 3764 0030 1A60     		str	r2, [r3]
 3765              		.syntax unified
 3766              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3767 0032 BFF34F8F 		dsb
 3768              	@ 0 "" 2
 3769              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3770 0036 BFF36F8F 		isb
 3771              	@ 0 "" 2
 3772              		.thumb
 3773              		.syntax unified
 3774              	.L353:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3775              		.loc 1 4459 0
 3776 003a FFF7FEFF 		bl	vPortExitCritical
 3777              	.LVL330:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3778              		.loc 1 4461 0
 3779 003e FFF7FEFF 		bl	vPortEnterCritical
 3780              	.LVL331:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3781              		.loc 1 4464 0
 3782 0042 0D4B     		ldr	r3, .L357
 3783 0044 D3F80031 		ldr	r3, [r3, #256]
 3784 0048 9C6D     		ldr	r4, [r3, #88]
 3785              	.LVL332:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3786              		.loc 1 4466 0
 3787 004a 5CB1     		cbz	r4, .L354
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3788              		.loc 1 4468 0
 3789 004c 2DB1     		cbz	r5, .L355
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3790              		.loc 1 4470 0
 3791 004e 0A4B     		ldr	r3, .L357
 3792 0050 D3F80031 		ldr	r3, [r3, #256]
 3793 0054 0022     		movs	r2, #0
 3794 0056 9A65     		str	r2, [r3, #88]
 3795 0058 04E0     		b	.L354
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 167


 3796              	.L355:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3797              		.loc 1 4474 0
 3798 005a 074B     		ldr	r3, .L357
 3799 005c D3F80031 		ldr	r3, [r3, #256]
 3800 0060 621E     		subs	r2, r4, #1
 3801 0062 9A65     		str	r2, [r3, #88]
 3802              	.L354:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3803              		.loc 1 4482 0
 3804 0064 044B     		ldr	r3, .L357
 3805 0066 D3F80031 		ldr	r3, [r3, #256]
 3806 006a 0022     		movs	r2, #0
 3807 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3808              		.loc 1 4484 0
 3809 0070 FFF7FEFF 		bl	vPortExitCritical
 3810              	.LVL333:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3811              		.loc 1 4487 0
 3812 0074 2046     		mov	r0, r4
 3813 0076 38BD     		pop	{r3, r4, r5, pc}
 3814              	.LVL334:
 3815              	.L358:
 3816              		.align	2
 3817              	.L357:
 3818 0078 00000000 		.word	.LANCHOR0
 3819 007c 04ED00E0 		.word	-536810236
 3820              		.cfi_endproc
 3821              	.LFE178:
 3822              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3823              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3824              		.align	2
 3825              		.global	xTaskNotifyWait
 3826              		.thumb
 3827              		.thumb_func
 3828              		.type	xTaskNotifyWait, %function
 3829              	xTaskNotifyWait:
 3830              	.LFB179:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3831              		.loc 1 4495 0
 3832              		.cfi_startproc
 3833              		@ args = 0, pretend = 0, frame = 0
 3834              		@ frame_needed = 0, uses_anonymous_args = 0
 3835              	.LVL335:
 3836 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3837              		.cfi_def_cfa_offset 24
 3838              		.cfi_offset 3, -24
 3839              		.cfi_offset 4, -20
 3840              		.cfi_offset 5, -16
 3841              		.cfi_offset 6, -12
 3842              		.cfi_offset 7, -8
 3843              		.cfi_offset 14, -4
 3844 0002 0746     		mov	r7, r0
 3845 0004 0D46     		mov	r5, r1
 3846 0006 1446     		mov	r4, r2
 3847 0008 1E46     		mov	r6, r3
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 168


4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3848              		.loc 1 4498 0
 3849 000a FFF7FEFF 		bl	vPortEnterCritical
 3850              	.LVL336:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3851              		.loc 1 4501 0
 3852 000e 234B     		ldr	r3, .L365
 3853 0010 D3F80031 		ldr	r3, [r3, #256]
 3854 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3855 0018 DBB2     		uxtb	r3, r3
 3856 001a 022B     		cmp	r3, #2
 3857 001c 18D0     		beq	.L360
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3858              		.loc 1 4506 0
 3859 001e 1F4B     		ldr	r3, .L365
 3860 0020 D3F80021 		ldr	r2, [r3, #256]
 3861 0024 906D     		ldr	r0, [r2, #88]
 3862 0026 20EA0700 		bic	r0, r0, r7
 3863 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3864              		.loc 1 4509 0
 3865 002c D3F80031 		ldr	r3, [r3, #256]
 3866 0030 0122     		movs	r2, #1
 3867 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3868              		.loc 1 4511 0
 3869 0036 5EB1     		cbz	r6, .L360
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3870              		.loc 1 4513 0
 3871 0038 1146     		mov	r1, r2
 3872 003a 3046     		mov	r0, r6
 3873 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3874              	.LVL337:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3875              		.loc 1 4520 0
 3876 0040 4FF08052 		mov	r2, #268435456
 3877 0044 164B     		ldr	r3, .L365+4
 3878 0046 1A60     		str	r2, [r3]
 3879              		.syntax unified
 3880              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3881 0048 BFF34F8F 		dsb
 3882              	@ 0 "" 2
 3883              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3884 004c BFF36F8F 		isb
 3885              	@ 0 "" 2
 3886              		.thumb
 3887              		.syntax unified
 3888              	.L360:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3889              		.loc 1 4532 0
 3890 0050 FFF7FEFF 		bl	vPortExitCritical
 3891              	.LVL338:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3892              		.loc 1 4534 0
 3893 0054 FFF7FEFF 		bl	vPortEnterCritical
 3894              	.LVL339:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 169


 3895              		.loc 1 4538 0
 3896 0058 24B1     		cbz	r4, .L361
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3897              		.loc 1 4542 0
 3898 005a 104B     		ldr	r3, .L365
 3899 005c D3F80031 		ldr	r3, [r3, #256]
 3900 0060 9B6D     		ldr	r3, [r3, #88]
 3901 0062 2360     		str	r3, [r4]
 3902              	.L361:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3903              		.loc 1 4549 0
 3904 0064 0D4B     		ldr	r3, .L365
 3905 0066 D3F80031 		ldr	r3, [r3, #256]
 3906 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3907 006e DBB2     		uxtb	r3, r3
 3908 0070 022B     		cmp	r3, #2
 3909 0072 08D1     		bne	.L363
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3910              		.loc 1 4558 0
 3911 0074 094B     		ldr	r3, .L365
 3912 0076 D3F80021 		ldr	r2, [r3, #256]
 3913 007a 936D     		ldr	r3, [r2, #88]
 3914 007c 23EA0505 		bic	r5, r3, r5
 3915              	.LVL340:
 3916 0080 9565     		str	r5, [r2, #88]
 3917              	.LVL341:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3918              		.loc 1 4559 0
 3919 0082 0124     		movs	r4, #1
 3920              	.LVL342:
 3921 0084 00E0     		b	.L362
 3922              	.LVL343:
 3923              	.L363:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3924              		.loc 1 4552 0
 3925 0086 0024     		movs	r4, #0
 3926              	.LVL344:
 3927              	.L362:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3928              		.loc 1 4562 0
 3929 0088 044B     		ldr	r3, .L365
 3930 008a D3F80031 		ldr	r3, [r3, #256]
 3931 008e 0022     		movs	r2, #0
 3932 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3933              		.loc 1 4564 0
 3934 0094 FFF7FEFF 		bl	vPortExitCritical
 3935              	.LVL345:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3936              		.loc 1 4567 0
 3937 0098 2046     		mov	r0, r4
 3938 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3939              	.LVL346:
 3940              	.L366:
 3941              		.align	2
 3942              	.L365:
 3943 009c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 170


 3944 00a0 04ED00E0 		.word	-536810236
 3945              		.cfi_endproc
 3946              	.LFE179:
 3947              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3948              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3949              		.align	2
 3950              		.global	xTaskGenericNotify
 3951              		.thumb
 3952              		.thumb_func
 3953              		.type	xTaskGenericNotify, %function
 3954              	xTaskGenericNotify:
 3955              	.LFB180:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 3956              		.loc 1 4575 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 0
 3959              		@ frame_needed = 0, uses_anonymous_args = 0
 3960              	.LVL347:
 3961 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3962              		.cfi_def_cfa_offset 24
 3963              		.cfi_offset 3, -24
 3964              		.cfi_offset 4, -20
 3965              		.cfi_offset 5, -16
 3966              		.cfi_offset 6, -12
 3967              		.cfi_offset 7, -8
 3968              		.cfi_offset 14, -4
 3969              	.LVL348:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3970              		.loc 1 4580 0
 3971 0002 40B9     		cbnz	r0, .L368
 3972              	.LBB170:
 3973              	.LBB171:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3974              		.loc 2 156 0
 3975              		.syntax unified
 3976              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3977 0004 4FF02003 			mov r3, #32												
 3978 0008 83F31188 		msr basepri, r3											
 3979 000c BFF36F8F 		isb														
 3980 0010 BFF34F8F 		dsb														
 3981              	
 3982              	@ 0 "" 2
 3983              	.LVL349:
 3984              		.thumb
 3985              		.syntax unified
 3986              	.L369:
 3987 0014 FEE7     		b	.L369
 3988              	.LVL350:
 3989              	.L368:
 3990 0016 0446     		mov	r4, r0
 3991 0018 1F46     		mov	r7, r3
 3992 001a 1546     		mov	r5, r2
 3993 001c 0E46     		mov	r6, r1
 3994              	.LVL351:
 3995              	.LBE171:
 3996              	.LBE170:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 171


 3997              		.loc 1 4583 0
 3998 001e FFF7FEFF 		bl	vPortEnterCritical
 3999              	.LVL352:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4000              		.loc 1 4585 0
 4001 0022 0FB1     		cbz	r7, .L370
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4002              		.loc 1 4587 0
 4003 0024 A36D     		ldr	r3, [r4, #88]
 4004 0026 3B60     		str	r3, [r7]
 4005              	.L370:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4006              		.loc 1 4590 0
 4007 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4008 002c DBB2     		uxtb	r3, r3
 4009              	.LVL353:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4010              		.loc 1 4592 0
 4011 002e 0222     		movs	r2, #2
 4012 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4013              		.loc 1 4594 0
 4014 0034 6A1E     		subs	r2, r5, #1
 4015 0036 032A     		cmp	r2, #3
 4016 0038 15D8     		bhi	.L381
 4017 003a DFE802F0 		tbb	[pc, r2]
 4018              	.L373:
 4019 003e 02       		.byte	(.L372-.L373)/2
 4020 003f 07       		.byte	(.L374-.L373)/2
 4021 0040 0C       		.byte	(.L375-.L373)/2
 4022 0041 0F       		.byte	(.L376-.L373)/2
 4023              		.p2align 1
 4024              	.L372:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4025              		.loc 1 4597 0
 4026 0042 A26D     		ldr	r2, [r4, #88]
 4027 0044 1643     		orrs	r6, r6, r2
 4028              	.LVL354:
 4029 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4030              		.loc 1 4577 0
 4031 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4032              		.loc 1 4598 0
 4033 004a 0FE0     		b	.L371
 4034              	.LVL355:
 4035              	.L374:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4036              		.loc 1 4601 0
 4037 004c A26D     		ldr	r2, [r4, #88]
 4038 004e 0132     		adds	r2, r2, #1
 4039 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4040              		.loc 1 4577 0
 4041 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4042              		.loc 1 4602 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 172


 4043 0054 0AE0     		b	.L371
 4044              	.L375:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4045              		.loc 1 4605 0
 4046 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4047              		.loc 1 4577 0
 4048 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4049              		.loc 1 4606 0
 4050 005a 07E0     		b	.L371
 4051              	.L376:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4052              		.loc 1 4609 0
 4053 005c 022B     		cmp	r3, #2
 4054 005e 04D0     		beq	.L382
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4055              		.loc 1 4611 0
 4056 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4057              		.loc 1 4577 0
 4058 0062 0125     		movs	r5, #1
 4059 0064 02E0     		b	.L371
 4060              	.L381:
 4061 0066 0125     		movs	r5, #1
 4062 0068 00E0     		b	.L371
 4063              	.L382:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4064              		.loc 1 4616 0
 4065 006a 0025     		movs	r5, #0
 4066              	.LVL356:
 4067              	.L371:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4068              		.loc 1 4630 0
 4069 006c 012B     		cmp	r3, #1
 4070 006e 2ED1     		bne	.L377
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4071              		.loc 1 4632 0
 4072 0070 261D     		adds	r6, r4, #4
 4073 0072 3046     		mov	r0, r6
 4074 0074 FFF7FEFF 		bl	uxListRemove
 4075              	.LVL357:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4076              		.loc 1 4633 0
 4077 0078 E36A     		ldr	r3, [r4, #44]
 4078 007a 174A     		ldr	r2, .L384
 4079 007c D2F80C21 		ldr	r2, [r2, #268]
 4080 0080 9342     		cmp	r3, r2
 4081 0082 02D9     		bls	.L378
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4082              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4083 0084 144A     		ldr	r2, .L384
 4084 0086 C2F80C31 		str	r3, [r2, #268]
 4085              	.L378:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4086              		.loc 1 4633 0 discriminator 3
 4087 008a 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 173


 4088 008e 9A00     		lsls	r2, r3, #2
 4089 0090 3146     		mov	r1, r6
 4090 0092 1248     		ldr	r0, .L384+4
 4091 0094 1044     		add	r0, r0, r2
 4092 0096 FFF7FEFF 		bl	vListInsertEnd
 4093              	.LVL358:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4094              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4095 009a A36A     		ldr	r3, [r4, #40]
 4096 009c 43B1     		cbz	r3, .L379
 4097              	.LBB172:
 4098              	.LBB173:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4099              		.loc 2 156 0
 4100              		.syntax unified
 4101              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4102 009e 4FF02003 			mov r3, #32												
 4103 00a2 83F31188 		msr basepri, r3											
 4104 00a6 BFF36F8F 		isb														
 4105 00aa BFF34F8F 		dsb														
 4106              	
 4107              	@ 0 "" 2
 4108              	.LVL359:
 4109              		.thumb
 4110              		.syntax unified
 4111              	.L380:
 4112 00ae FEE7     		b	.L380
 4113              	.L379:
 4114              	.LBE173:
 4115              	.LBE172:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4116              		.loc 1 4654 0
 4117 00b0 E26A     		ldr	r2, [r4, #44]
 4118 00b2 094B     		ldr	r3, .L384
 4119 00b4 D3F80031 		ldr	r3, [r3, #256]
 4120 00b8 DB6A     		ldr	r3, [r3, #44]
 4121 00ba 9A42     		cmp	r2, r3
 4122 00bc 07D9     		bls	.L377
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4123              		.loc 1 4658 0
 4124 00be 4FF08052 		mov	r2, #268435456
 4125 00c2 074B     		ldr	r3, .L384+8
 4126 00c4 1A60     		str	r2, [r3]
 4127              		.syntax unified
 4128              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4129 00c6 BFF34F8F 		dsb
 4130              	@ 0 "" 2
 4131              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4132 00ca BFF36F8F 		isb
 4133              	@ 0 "" 2
 4134              		.thumb
 4135              		.syntax unified
 4136              	.L377:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4137              		.loc 1 4670 0
 4138 00ce FFF7FEFF 		bl	vPortExitCritical
 4139              	.LVL360:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 174


4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4140              		.loc 1 4673 0
 4141 00d2 2846     		mov	r0, r5
 4142 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4143              	.LVL361:
 4144              	.L385:
 4145 00d6 00BF     		.align	2
 4146              	.L384:
 4147 00d8 00000000 		.word	.LANCHOR0
 4148 00dc 30000000 		.word	.LANCHOR0+48
 4149 00e0 04ED00E0 		.word	-536810236
 4150              		.cfi_endproc
 4151              	.LFE180:
 4152              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4153              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4154              		.align	2
 4155              		.global	xTaskGenericNotifyFromISR
 4156              		.thumb
 4157              		.thumb_func
 4158              		.type	xTaskGenericNotifyFromISR, %function
 4159              	xTaskGenericNotifyFromISR:
 4160              	.LFB181:
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4161              		.loc 1 4681 0
 4162              		.cfi_startproc
 4163              		@ args = 4, pretend = 0, frame = 0
 4164              		@ frame_needed = 0, uses_anonymous_args = 0
 4165              	.LVL362:
 4166 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4167              		.cfi_def_cfa_offset 32
 4168              		.cfi_offset 3, -32
 4169              		.cfi_offset 4, -28
 4170              		.cfi_offset 5, -24
 4171              		.cfi_offset 6, -20
 4172              		.cfi_offset 7, -16
 4173              		.cfi_offset 8, -12
 4174              		.cfi_offset 9, -8
 4175              		.cfi_offset 14, -4
 4176 0004 089E     		ldr	r6, [sp, #32]
 4177              	.LVL363:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4178              		.loc 1 4687 0
 4179 0006 40B9     		cbnz	r0, .L387
 4180              	.LBB174:
 4181              	.LBB175:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4182              		.loc 2 156 0
 4183              		.syntax unified
 4184              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4185 0008 4FF02003 			mov r3, #32												
 4186 000c 83F31188 		msr basepri, r3											
 4187 0010 BFF36F8F 		isb														
 4188 0014 BFF34F8F 		dsb														
 4189              	
 4190              	@ 0 "" 2
 4191              	.LVL364:
 4192              		.thumb
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 175


 4193              		.syntax unified
 4194              	.L388:
 4195 0018 FEE7     		b	.L388
 4196              	.LVL365:
 4197              	.L387:
 4198 001a 0446     		mov	r4, r0
 4199 001c 9946     		mov	r9, r3
 4200 001e 1546     		mov	r5, r2
 4201 0020 8846     		mov	r8, r1
 4202              	.LBE175:
 4203              	.LBE174:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4204              		.loc 1 4705 0
 4205 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4206              	.LVL366:
 4207              	.LBB176:
 4208              	.LBB177:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4209              		.loc 2 172 0
 4210              		.syntax unified
 4211              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4212 0026 EFF31187 			mrs r7, basepri											
 4213 002a 4FF02003 		mov r3, #32												
 4214 002e 83F31188 		msr basepri, r3											
 4215 0032 BFF36F8F 		isb														
 4216 0036 BFF34F8F 		dsb														
 4217              	
 4218              	@ 0 "" 2
 4219              		.thumb
 4220              		.syntax unified
 4221              	.LBE177:
 4222              	.LBE176:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4223              		.loc 1 4711 0
 4224 003a B9F1000F 		cmp	r9, #0
 4225 003e 02D0     		beq	.L389
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4226              		.loc 1 4713 0
 4227 0040 A36D     		ldr	r3, [r4, #88]
 4228 0042 C9F80030 		str	r3, [r9]
 4229              	.L389:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4230              		.loc 1 4716 0
 4231 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4232 004a DBB2     		uxtb	r3, r3
 4233              	.LVL367:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4234              		.loc 1 4717 0
 4235 004c 0222     		movs	r2, #2
 4236 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4237              		.loc 1 4719 0
 4238 0052 6A1E     		subs	r2, r5, #1
 4239 0054 032A     		cmp	r2, #3
 4240 0056 18D8     		bhi	.L403
 4241 0058 DFE802F0 		tbb	[pc, r2]
 4242              	.L392:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 176


 4243 005c 02       		.byte	(.L391-.L392)/2
 4244 005d 08       		.byte	(.L393-.L392)/2
 4245 005e 0D       		.byte	(.L394-.L392)/2
 4246 005f 11       		.byte	(.L395-.L392)/2
 4247              		.p2align 1
 4248              	.L391:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4249              		.loc 1 4722 0
 4250 0060 A26D     		ldr	r2, [r4, #88]
 4251 0062 42EA0802 		orr	r2, r2, r8
 4252 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4253              		.loc 1 4684 0
 4254 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4255              		.loc 1 4723 0
 4256 006a 11E0     		b	.L390
 4257              	.L393:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4258              		.loc 1 4726 0
 4259 006c A26D     		ldr	r2, [r4, #88]
 4260 006e 0132     		adds	r2, r2, #1
 4261 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4262              		.loc 1 4684 0
 4263 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4264              		.loc 1 4727 0
 4265 0074 0CE0     		b	.L390
 4266              	.L394:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4267              		.loc 1 4730 0
 4268 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4269              		.loc 1 4684 0
 4270 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4271              		.loc 1 4731 0
 4272 007c 08E0     		b	.L390
 4273              	.L395:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4274              		.loc 1 4734 0
 4275 007e 022B     		cmp	r3, #2
 4276 0080 05D0     		beq	.L404
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4277              		.loc 1 4736 0
 4278 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4279              		.loc 1 4684 0
 4280 0086 0125     		movs	r5, #1
 4281 0088 02E0     		b	.L390
 4282              	.L403:
 4283 008a 0125     		movs	r5, #1
 4284 008c 00E0     		b	.L390
 4285              	.L404:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4286              		.loc 1 4741 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 177


 4287 008e 0025     		movs	r5, #0
 4288              	.L390:
 4289              	.LVL368:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4290              		.loc 1 4755 0
 4291 0090 012B     		cmp	r3, #1
 4292 0092 39D1     		bne	.L396
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4293              		.loc 1 4758 0
 4294 0094 A36A     		ldr	r3, [r4, #40]
 4295              	.LVL369:
 4296 0096 43B1     		cbz	r3, .L397
 4297              	.LBB178:
 4298              	.LBB179:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4299              		.loc 2 156 0
 4300              		.syntax unified
 4301              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4302 0098 4FF02003 			mov r3, #32												
 4303 009c 83F31188 		msr basepri, r3											
 4304 00a0 BFF36F8F 		isb														
 4305 00a4 BFF34F8F 		dsb														
 4306              	
 4307              	@ 0 "" 2
 4308              	.LVL370:
 4309              		.thumb
 4310              		.syntax unified
 4311              	.L398:
 4312 00a8 FEE7     		b	.L398
 4313              	.L397:
 4314              	.LBE179:
 4315              	.LBE178:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4316              		.loc 1 4760 0
 4317 00aa 1A4B     		ldr	r3, .L406
 4318 00ac D3F81831 		ldr	r3, [r3, #280]
 4319 00b0 B3B9     		cbnz	r3, .L399
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4320              		.loc 1 4762 0
 4321 00b2 04F10408 		add	r8, r4, #4
 4322              	.LVL371:
 4323 00b6 4046     		mov	r0, r8
 4324 00b8 FFF7FEFF 		bl	uxListRemove
 4325              	.LVL372:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4326              		.loc 1 4763 0
 4327 00bc E36A     		ldr	r3, [r4, #44]
 4328 00be 154A     		ldr	r2, .L406
 4329 00c0 D2F80C21 		ldr	r2, [r2, #268]
 4330 00c4 9342     		cmp	r3, r2
 4331 00c6 02D9     		bls	.L400
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4332              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4333 00c8 124A     		ldr	r2, .L406
 4334 00ca C2F80C31 		str	r3, [r2, #268]
 4335              	.L400:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 178


 4336              		.loc 1 4763 0 discriminator 3
 4337 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4338 00d2 9A00     		lsls	r2, r3, #2
 4339 00d4 4146     		mov	r1, r8
 4340 00d6 1048     		ldr	r0, .L406+4
 4341 00d8 1044     		add	r0, r0, r2
 4342 00da FFF7FEFF 		bl	vListInsertEnd
 4343              	.LVL373:
 4344 00de 04E0     		b	.L401
 4345              	.LVL374:
 4346              	.L399:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4347              		.loc 1 4769 0 is_stmt 1
 4348 00e0 04F11801 		add	r1, r4, #24
 4349 00e4 0D48     		ldr	r0, .L406+8
 4350 00e6 FFF7FEFF 		bl	vListInsertEnd
 4351              	.LVL375:
 4352              	.L401:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4353              		.loc 1 4772 0
 4354 00ea E26A     		ldr	r2, [r4, #44]
 4355 00ec 094B     		ldr	r3, .L406
 4356 00ee D3F80031 		ldr	r3, [r3, #256]
 4357 00f2 DB6A     		ldr	r3, [r3, #44]
 4358 00f4 9A42     		cmp	r2, r3
 4359 00f6 07D9     		bls	.L396
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4360              		.loc 1 4776 0
 4361 00f8 16B1     		cbz	r6, .L402
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4362              		.loc 1 4778 0
 4363 00fa 0123     		movs	r3, #1
 4364 00fc 3360     		str	r3, [r6]
 4365 00fe 03E0     		b	.L396
 4366              	.L402:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4367              		.loc 1 4785 0
 4368 0100 0122     		movs	r2, #1
 4369 0102 044B     		ldr	r3, .L406
 4370 0104 C3F82821 		str	r2, [r3, #296]
 4371              	.L396:
 4372              	.LVL376:
 4373              	.LBB180:
 4374              	.LBB181:
 4375              		.loc 2 190 0
 4376              		.syntax unified
 4377              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4378 0108 87F31188 			msr basepri, r7	
 4379              	@ 0 "" 2
 4380              	.LVL377:
 4381              		.thumb
 4382              		.syntax unified
 4383              	.LBE181:
 4384              	.LBE180:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4385              		.loc 1 4797 0
 4386 010c 2846     		mov	r0, r5
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 179


 4387 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4388              	.LVL378:
 4389              	.L407:
 4390 0112 00BF     		.align	2
 4391              	.L406:
 4392 0114 00000000 		.word	.LANCHOR0
 4393 0118 30000000 		.word	.LANCHOR0+48
 4394 011c 14000000 		.word	.LANCHOR0+20
 4395              		.cfi_endproc
 4396              	.LFE181:
 4397              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4398              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4399              		.align	2
 4400              		.global	vTaskNotifyGiveFromISR
 4401              		.thumb
 4402              		.thumb_func
 4403              		.type	vTaskNotifyGiveFromISR, %function
 4404              	vTaskNotifyGiveFromISR:
 4405              	.LFB182:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4406              		.loc 1 4805 0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 0
 4409              		@ frame_needed = 0, uses_anonymous_args = 0
 4410              	.LVL379:
 4411 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4412              		.cfi_def_cfa_offset 24
 4413              		.cfi_offset 3, -24
 4414              		.cfi_offset 4, -20
 4415              		.cfi_offset 5, -16
 4416              		.cfi_offset 6, -12
 4417              		.cfi_offset 7, -8
 4418              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4419              		.loc 1 4810 0
 4420 0002 40B9     		cbnz	r0, .L409
 4421              	.LBB182:
 4422              	.LBB183:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4423              		.loc 2 156 0
 4424              		.syntax unified
 4425              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4426 0004 4FF02003 			mov r3, #32												
 4427 0008 83F31188 		msr basepri, r3											
 4428 000c BFF36F8F 		isb														
 4429 0010 BFF34F8F 		dsb														
 4430              	
 4431              	@ 0 "" 2
 4432              	.LVL380:
 4433              		.thumb
 4434              		.syntax unified
 4435              	.L410:
 4436 0014 FEE7     		b	.L410
 4437              	.L409:
 4438 0016 0446     		mov	r4, r0
 4439 0018 0D46     		mov	r5, r1
 4440              	.LBE183:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 180


 4441              	.LBE182:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4442              		.loc 1 4828 0
 4443 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4444              	.LVL381:
 4445              	.LBB184:
 4446              	.LBB185:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4447              		.loc 2 172 0
 4448              		.syntax unified
 4449              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4450 001e EFF31186 			mrs r6, basepri											
 4451 0022 4FF02003 		mov r3, #32												
 4452 0026 83F31188 		msr basepri, r3											
 4453 002a BFF36F8F 		isb														
 4454 002e BFF34F8F 		dsb														
 4455              	
 4456              	@ 0 "" 2
 4457              		.thumb
 4458              		.syntax unified
 4459              	.LBE185:
 4460              	.LBE184:
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4461              		.loc 1 4834 0
 4462 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4463 0036 DBB2     		uxtb	r3, r3
 4464              	.LVL382:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4465              		.loc 1 4835 0
 4466 0038 0222     		movs	r2, #2
 4467 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4468              		.loc 1 4839 0
 4469 003e A26D     		ldr	r2, [r4, #88]
 4470 0040 0132     		adds	r2, r2, #1
 4471 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4472              		.loc 1 4845 0
 4473 0044 012B     		cmp	r3, #1
 4474 0046 38D1     		bne	.L411
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4475              		.loc 1 4848 0
 4476 0048 A36A     		ldr	r3, [r4, #40]
 4477              	.LVL383:
 4478 004a 43B1     		cbz	r3, .L412
 4479              	.LBB186:
 4480              	.LBB187:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4481              		.loc 2 156 0
 4482              		.syntax unified
 4483              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4484 004c 4FF02003 			mov r3, #32												
 4485 0050 83F31188 		msr basepri, r3											
 4486 0054 BFF36F8F 		isb														
 4487 0058 BFF34F8F 		dsb														
 4488              	
 4489              	@ 0 "" 2
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 181


 4490              	.LVL384:
 4491              		.thumb
 4492              		.syntax unified
 4493              	.L413:
 4494 005c FEE7     		b	.L413
 4495              	.L412:
 4496              	.LBE187:
 4497              	.LBE186:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4498              		.loc 1 4850 0
 4499 005e 184B     		ldr	r3, .L419
 4500 0060 D3F81831 		ldr	r3, [r3, #280]
 4501 0064 ABB9     		cbnz	r3, .L414
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4502              		.loc 1 4852 0
 4503 0066 271D     		adds	r7, r4, #4
 4504 0068 3846     		mov	r0, r7
 4505 006a FFF7FEFF 		bl	uxListRemove
 4506              	.LVL385:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4507              		.loc 1 4853 0
 4508 006e E36A     		ldr	r3, [r4, #44]
 4509 0070 134A     		ldr	r2, .L419
 4510 0072 D2F80C21 		ldr	r2, [r2, #268]
 4511 0076 9342     		cmp	r3, r2
 4512 0078 02D9     		bls	.L415
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4513              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4514 007a 114A     		ldr	r2, .L419
 4515 007c C2F80C31 		str	r3, [r2, #268]
 4516              	.L415:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4517              		.loc 1 4853 0 discriminator 3
 4518 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4519 0084 9A00     		lsls	r2, r3, #2
 4520 0086 3946     		mov	r1, r7
 4521 0088 0E48     		ldr	r0, .L419+4
 4522 008a 1044     		add	r0, r0, r2
 4523 008c FFF7FEFF 		bl	vListInsertEnd
 4524              	.LVL386:
 4525 0090 04E0     		b	.L416
 4526              	.L414:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4527              		.loc 1 4859 0 is_stmt 1
 4528 0092 04F11801 		add	r1, r4, #24
 4529 0096 0C48     		ldr	r0, .L419+8
 4530 0098 FFF7FEFF 		bl	vListInsertEnd
 4531              	.LVL387:
 4532              	.L416:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4533              		.loc 1 4862 0
 4534 009c E26A     		ldr	r2, [r4, #44]
 4535 009e 084B     		ldr	r3, .L419
 4536 00a0 D3F80031 		ldr	r3, [r3, #256]
 4537 00a4 DB6A     		ldr	r3, [r3, #44]
 4538 00a6 9A42     		cmp	r2, r3
 4539 00a8 07D9     		bls	.L411
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 182


4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4540              		.loc 1 4866 0
 4541 00aa 15B1     		cbz	r5, .L417
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4542              		.loc 1 4868 0
 4543 00ac 0123     		movs	r3, #1
 4544 00ae 2B60     		str	r3, [r5]
 4545 00b0 03E0     		b	.L411
 4546              	.L417:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4547              		.loc 1 4875 0
 4548 00b2 0122     		movs	r2, #1
 4549 00b4 024B     		ldr	r3, .L419
 4550 00b6 C3F82821 		str	r2, [r3, #296]
 4551              	.L411:
 4552              	.LVL388:
 4553              	.LBB188:
 4554              	.LBB189:
 4555              		.loc 2 190 0
 4556              		.syntax unified
 4557              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4558 00ba 86F31188 			msr basepri, r6	
 4559              	@ 0 "" 2
 4560              	.LVL389:
 4561              		.thumb
 4562              		.syntax unified
 4563 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4564              	.LVL390:
 4565              	.L420:
 4566              		.align	2
 4567              	.L419:
 4568 00c0 00000000 		.word	.LANCHOR0
 4569 00c4 30000000 		.word	.LANCHOR0+48
 4570 00c8 14000000 		.word	.LANCHOR0+20
 4571              	.LBE189:
 4572              	.LBE188:
 4573              		.cfi_endproc
 4574              	.LFE182:
 4575              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4576              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4577              		.align	2
 4578              		.global	xTaskNotifyStateClear
 4579              		.thumb
 4580              		.thumb_func
 4581              		.type	xTaskNotifyStateClear, %function
 4582              	xTaskNotifyStateClear:
 4583              	.LFB183:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4584              		.loc 1 4894 0
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 0
 4587              		@ frame_needed = 0, uses_anonymous_args = 0
 4588              	.LVL391:
 4589 0000 10B5     		push	{r4, lr}
 4590              		.cfi_def_cfa_offset 8
 4591              		.cfi_offset 4, -8
 4592              		.cfi_offset 14, -4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 183


4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4593              		.loc 1 4900 0
 4594 0002 0446     		mov	r4, r0
 4595 0004 10B9     		cbnz	r0, .L422
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4596              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4597 0006 0A4B     		ldr	r3, .L426
 4598 0008 D3F80041 		ldr	r4, [r3, #256]
 4599              	.LVL392:
 4600              	.L422:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4601              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4602 000c FFF7FEFF 		bl	vPortEnterCritical
 4603              	.LVL393:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4604              		.loc 1 4904 0 discriminator 4
 4605 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4606 0014 DBB2     		uxtb	r3, r3
 4607 0016 022B     		cmp	r3, #2
 4608 0018 04D1     		bne	.L424
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4609              		.loc 1 4906 0
 4610 001a 0023     		movs	r3, #0
 4611 001c 84F85C30 		strb	r3, [r4, #92]
 4612              	.LVL394:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4613              		.loc 1 4907 0
 4614 0020 0124     		movs	r4, #1
 4615              	.LVL395:
 4616 0022 00E0     		b	.L423
 4617              	.LVL396:
 4618              	.L424:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4619              		.loc 1 4911 0
 4620 0024 0024     		movs	r4, #0
 4621              	.LVL397:
 4622              	.L423:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4623              		.loc 1 4914 0
 4624 0026 FFF7FEFF 		bl	vPortExitCritical
 4625              	.LVL398:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4626              		.loc 1 4917 0
 4627 002a 2046     		mov	r0, r4
 4628 002c 10BD     		pop	{r4, pc}
 4629              	.LVL399:
 4630              	.L427:
 4631 002e 00BF     		.align	2
 4632              	.L426:
 4633 0030 00000000 		.word	.LANCHOR0
 4634              		.cfi_endproc
 4635              	.LFE183:
 4636              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4637              		.global	pxCurrentTCB
 4638              		.section	.rodata.str1.4,"aMS",%progbits,1
 4639              		.align	2
 4640              	.LC0:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 184


 4641 0000 49444C45 		.ascii	"IDLE\000"
 4641      00
 4642              		.bss
 4643              		.align	2
 4644              		.set	.LANCHOR0,. + 0
 4645              		.type	xSuspendedTaskList, %object
 4646              		.size	xSuspendedTaskList, 20
 4647              	xSuspendedTaskList:
 4648 0000 00000000 		.space	20
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4649              		.type	xPendingReadyList, %object
 4650              		.size	xPendingReadyList, 20
 4651              	xPendingReadyList:
 4652 0014 00000000 		.space	20
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4653              		.type	pxDelayedTaskList, %object
 4654              		.size	pxDelayedTaskList, 4
 4655              	pxDelayedTaskList:
 4656 0028 00000000 		.space	4
 4657              		.type	xNextTaskUnblockTime, %object
 4658              		.size	xNextTaskUnblockTime, 4
 4659              	xNextTaskUnblockTime:
 4660 002c 00000000 		.space	4
 4661              		.type	pxReadyTasksLists, %object
 4662              		.size	pxReadyTasksLists, 140
 4663              	pxReadyTasksLists:
 4664 0030 00000000 		.space	140
 4664      00000000 
 4664      00000000 
 4664      00000000 
 4664      00000000 
 4665              		.type	xDelayedTaskList1, %object
 4666              		.size	xDelayedTaskList1, 20
 4667              	xDelayedTaskList1:
 4668 00bc 00000000 		.space	20
 4668      00000000 
 4668      00000000 
 4668      00000000 
 4668      00000000 
 4669              		.type	xDelayedTaskList2, %object
 4670              		.size	xDelayedTaskList2, 20
 4671              	xDelayedTaskList2:
 4672 00d0 00000000 		.space	20
 4672      00000000 
 4672      00000000 
 4672      00000000 
 4672      00000000 
 4673              		.type	xTasksWaitingTermination, %object
 4674              		.size	xTasksWaitingTermination, 20
 4675              	xTasksWaitingTermination:
 4676 00e4 00000000 		.space	20
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 185


 4676      00000000 
 4676      00000000 
 4676      00000000 
 4676      00000000 
 4677              		.type	pxOverflowDelayedTaskList, %object
 4678              		.size	pxOverflowDelayedTaskList, 4
 4679              	pxOverflowDelayedTaskList:
 4680 00f8 00000000 		.space	4
 4681              		.type	uxCurrentNumberOfTasks, %object
 4682              		.size	uxCurrentNumberOfTasks, 4
 4683              	uxCurrentNumberOfTasks:
 4684 00fc 00000000 		.space	4
 4685              		.type	pxCurrentTCB, %object
 4686              		.size	pxCurrentTCB, 4
 4687              	pxCurrentTCB:
 4688 0100 00000000 		.space	4
 4689              		.type	xSchedulerRunning, %object
 4690              		.size	xSchedulerRunning, 4
 4691              	xSchedulerRunning:
 4692 0104 00000000 		.space	4
 4693              		.type	uxTaskNumber, %object
 4694              		.size	uxTaskNumber, 4
 4695              	uxTaskNumber:
 4696 0108 00000000 		.space	4
 4697              		.type	uxTopReadyPriority, %object
 4698              		.size	uxTopReadyPriority, 4
 4699              	uxTopReadyPriority:
 4700 010c 00000000 		.space	4
 4701              		.type	uxDeletedTasksWaitingCleanUp, %object
 4702              		.size	uxDeletedTasksWaitingCleanUp, 4
 4703              	uxDeletedTasksWaitingCleanUp:
 4704 0110 00000000 		.space	4
 4705              		.type	xTickCount, %object
 4706              		.size	xTickCount, 4
 4707              	xTickCount:
 4708 0114 00000000 		.space	4
 4709              		.type	uxSchedulerSuspended, %object
 4710              		.size	uxSchedulerSuspended, 4
 4711              	uxSchedulerSuspended:
 4712 0118 00000000 		.space	4
 4713              		.type	xIdleTaskHandle, %object
 4714              		.size	xIdleTaskHandle, 4
 4715              	xIdleTaskHandle:
 4716 011c 00000000 		.space	4
 4717              		.type	xNumOfOverflows, %object
 4718              		.size	xNumOfOverflows, 4
 4719              	xNumOfOverflows:
 4720 0120 00000000 		.space	4
 4721              		.type	uxPendedTicks, %object
 4722              		.size	uxPendedTicks, 4
 4723              	uxPendedTicks:
 4724 0124 00000000 		.space	4
 4725              		.type	xYieldPending, %object
 4726              		.size	xYieldPending, 4
 4727              	xYieldPending:
 4728 0128 00000000 		.space	4
 4729              		.text
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 186


 4730              	.Letext0:
 4731              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4732              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4733              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4734              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4735              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4736              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4737              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4738              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 4739              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 4740              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4741              		.section	.debug_info,"",%progbits
 4742              	.Ldebug_info0:
 4743 0000 B0220000 		.4byte	0x22b0
 4744 0004 0400     		.2byte	0x4
 4745 0006 00000000 		.4byte	.Ldebug_abbrev0
 4746 000a 04       		.byte	0x4
 4747 000b 01       		.uleb128 0x1
 4748 000c 61080000 		.4byte	.LASF221
 4749 0010 0C       		.byte	0xc
 4750 0011 32050000 		.4byte	.LASF222
 4751 0015 8E090000 		.4byte	.LASF223
 4752 0019 40000000 		.4byte	.Ldebug_ranges0+0x40
 4753 001d 00000000 		.4byte	0
 4754 0021 00000000 		.4byte	.Ldebug_line0
 4755 0025 02       		.uleb128 0x2
 4756 0026 4D000000 		.4byte	.LASF4
 4757 002a 03       		.byte	0x3
 4758 002b D8       		.byte	0xd8
 4759 002c 30000000 		.4byte	0x30
 4760 0030 03       		.uleb128 0x3
 4761 0031 04       		.byte	0x4
 4762 0032 07       		.byte	0x7
 4763 0033 D20B0000 		.4byte	.LASF0
 4764 0037 04       		.uleb128 0x4
 4765 0038 04       		.byte	0x4
 4766 0039 05       		.byte	0x5
 4767 003a 696E7400 		.ascii	"int\000"
 4768 003e 03       		.uleb128 0x3
 4769 003f 08       		.byte	0x8
 4770 0040 05       		.byte	0x5
 4771 0041 F5010000 		.4byte	.LASF1
 4772 0045 03       		.uleb128 0x3
 4773 0046 08       		.byte	0x8
 4774 0047 04       		.byte	0x4
 4775 0048 5E0B0000 		.4byte	.LASF2
 4776 004c 03       		.uleb128 0x3
 4777 004d 01       		.byte	0x1
 4778 004e 06       		.byte	0x6
 4779 004f CE000000 		.4byte	.LASF3
 4780 0053 02       		.uleb128 0x2
 4781 0054 DA000000 		.4byte	.LASF5
 4782 0058 04       		.byte	0x4
 4783 0059 1D       		.byte	0x1d
 4784 005a 5E000000 		.4byte	0x5e
 4785 005e 03       		.uleb128 0x3
 4786 005f 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 187


 4787 0060 08       		.byte	0x8
 4788 0061 70090000 		.4byte	.LASF6
 4789 0065 03       		.uleb128 0x3
 4790 0066 02       		.byte	0x2
 4791 0067 05       		.byte	0x5
 4792 0068 F7090000 		.4byte	.LASF7
 4793 006c 02       		.uleb128 0x2
 4794 006d DF0B0000 		.4byte	.LASF8
 4795 0071 04       		.byte	0x4
 4796 0072 2B       		.byte	0x2b
 4797 0073 77000000 		.4byte	0x77
 4798 0077 03       		.uleb128 0x3
 4799 0078 02       		.byte	0x2
 4800 0079 07       		.byte	0x7
 4801 007a D2050000 		.4byte	.LASF9
 4802 007e 02       		.uleb128 0x2
 4803 007f 320C0000 		.4byte	.LASF10
 4804 0083 04       		.byte	0x4
 4805 0084 3F       		.byte	0x3f
 4806 0085 89000000 		.4byte	0x89
 4807 0089 03       		.uleb128 0x3
 4808 008a 04       		.byte	0x4
 4809 008b 05       		.byte	0x5
 4810 008c 1C010000 		.4byte	.LASF11
 4811 0090 02       		.uleb128 0x2
 4812 0091 6F040000 		.4byte	.LASF12
 4813 0095 04       		.byte	0x4
 4814 0096 41       		.byte	0x41
 4815 0097 9B000000 		.4byte	0x9b
 4816 009b 03       		.uleb128 0x3
 4817 009c 04       		.byte	0x4
 4818 009d 07       		.byte	0x7
 4819 009e 20050000 		.4byte	.LASF13
 4820 00a2 03       		.uleb128 0x3
 4821 00a3 08       		.byte	0x8
 4822 00a4 07       		.byte	0x7
 4823 00a5 48010000 		.4byte	.LASF14
 4824 00a9 03       		.uleb128 0x3
 4825 00aa 04       		.byte	0x4
 4826 00ab 07       		.byte	0x7
 4827 00ac DE0D0000 		.4byte	.LASF15
 4828 00b0 05       		.uleb128 0x5
 4829 00b1 04       		.byte	0x4
 4830 00b2 06       		.uleb128 0x6
 4831 00b3 04       		.byte	0x4
 4832 00b4 B8000000 		.4byte	0xb8
 4833 00b8 03       		.uleb128 0x3
 4834 00b9 01       		.byte	0x1
 4835 00ba 08       		.byte	0x8
 4836 00bb 890B0000 		.4byte	.LASF16
 4837 00bf 06       		.uleb128 0x6
 4838 00c0 04       		.byte	0x4
 4839 00c1 C5000000 		.4byte	0xc5
 4840 00c5 07       		.uleb128 0x7
 4841 00c6 B8000000 		.4byte	0xb8
 4842 00ca 02       		.uleb128 0x2
 4843 00cb AE0D0000 		.4byte	.LASF17
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 188


 4844 00cf 05       		.byte	0x5
 4845 00d0 18       		.byte	0x18
 4846 00d1 53000000 		.4byte	0x53
 4847 00d5 02       		.uleb128 0x2
 4848 00d6 82030000 		.4byte	.LASF18
 4849 00da 05       		.byte	0x5
 4850 00db 24       		.byte	0x24
 4851 00dc 6C000000 		.4byte	0x6c
 4852 00e0 02       		.uleb128 0x2
 4853 00e1 7F050000 		.4byte	.LASF19
 4854 00e5 05       		.byte	0x5
 4855 00e6 2C       		.byte	0x2c
 4856 00e7 7E000000 		.4byte	0x7e
 4857 00eb 02       		.uleb128 0x2
 4858 00ec 390B0000 		.4byte	.LASF20
 4859 00f0 05       		.byte	0x5
 4860 00f1 30       		.byte	0x30
 4861 00f2 90000000 		.4byte	0x90
 4862 00f6 08       		.uleb128 0x8
 4863 00f7 EB000000 		.4byte	0xeb
 4864 00fb 08       		.uleb128 0x8
 4865 00fc CA000000 		.4byte	0xca
 4866 0100 03       		.uleb128 0x3
 4867 0101 04       		.byte	0x4
 4868 0102 04       		.byte	0x4
 4869 0103 1C090000 		.4byte	.LASF21
 4870 0107 03       		.uleb128 0x3
 4871 0108 08       		.byte	0x8
 4872 0109 04       		.byte	0x4
 4873 010a 8B030000 		.4byte	.LASF22
 4874 010e 02       		.uleb128 0x2
 4875 010f 6C0A0000 		.4byte	.LASF23
 4876 0113 06       		.byte	0x6
 4877 0114 23       		.byte	0x23
 4878 0115 19010000 		.4byte	0x119
 4879 0119 06       		.uleb128 0x6
 4880 011a 04       		.byte	0x4
 4881 011b 1F010000 		.4byte	0x11f
 4882 011f 09       		.uleb128 0x9
 4883 0120 2A010000 		.4byte	0x12a
 4884 0124 0A       		.uleb128 0xa
 4885 0125 B0000000 		.4byte	0xb0
 4886 0129 00       		.byte	0
 4887 012a 02       		.uleb128 0x2
 4888 012b E5050000 		.4byte	.LASF24
 4889 012f 02       		.byte	0x2
 4890 0130 37       		.byte	0x37
 4891 0131 EB000000 		.4byte	0xeb
 4892 0135 02       		.uleb128 0x2
 4893 0136 A8030000 		.4byte	.LASF25
 4894 013a 02       		.byte	0x2
 4895 013b 38       		.byte	0x38
 4896 013c 89000000 		.4byte	0x89
 4897 0140 02       		.uleb128 0x2
 4898 0141 C40E0000 		.4byte	.LASF26
 4899 0145 02       		.byte	0x2
 4900 0146 39       		.byte	0x39
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 189


 4901 0147 9B000000 		.4byte	0x9b
 4902 014b 02       		.uleb128 0x2
 4903 014c 41030000 		.4byte	.LASF27
 4904 0150 02       		.byte	0x2
 4905 0151 3F       		.byte	0x3f
 4906 0152 EB000000 		.4byte	0xeb
 4907 0156 0B       		.uleb128 0xb
 4908 0157 B0000000 		.4byte	0xb0
 4909 015b 66010000 		.4byte	0x166
 4910 015f 0C       		.uleb128 0xc
 4911 0160 A9000000 		.4byte	0xa9
 4912 0164 04       		.byte	0x4
 4913 0165 00       		.byte	0
 4914 0166 0D       		.uleb128 0xd
 4915 0167 370E0000 		.4byte	.LASF34
 4916 016b 14       		.byte	0x14
 4917 016c 07       		.byte	0x7
 4918 016d 8B       		.byte	0x8b
 4919 016e AF010000 		.4byte	0x1af
 4920 0172 0E       		.uleb128 0xe
 4921 0173 C70B0000 		.4byte	.LASF28
 4922 0177 07       		.byte	0x7
 4923 0178 8E       		.byte	0x8e
 4924 0179 4B010000 		.4byte	0x14b
 4925 017d 00       		.byte	0
 4926 017e 0E       		.uleb128 0xe
 4927 017f E70D0000 		.4byte	.LASF29
 4928 0183 07       		.byte	0x7
 4929 0184 8F       		.byte	0x8f
 4930 0185 AF010000 		.4byte	0x1af
 4931 0189 04       		.byte	0x4
 4932 018a 0E       		.uleb128 0xe
 4933 018b 48080000 		.4byte	.LASF30
 4934 018f 07       		.byte	0x7
 4935 0190 90       		.byte	0x90
 4936 0191 AF010000 		.4byte	0x1af
 4937 0195 08       		.byte	0x8
 4938 0196 0E       		.uleb128 0xe
 4939 0197 B1040000 		.4byte	.LASF31
 4940 019b 07       		.byte	0x7
 4941 019c 91       		.byte	0x91
 4942 019d B0000000 		.4byte	0xb0
 4943 01a1 0C       		.byte	0xc
 4944 01a2 0E       		.uleb128 0xe
 4945 01a3 3B090000 		.4byte	.LASF32
 4946 01a7 07       		.byte	0x7
 4947 01a8 92       		.byte	0x92
 4948 01a9 B0000000 		.4byte	0xb0
 4949 01ad 10       		.byte	0x10
 4950 01ae 00       		.byte	0
 4951 01af 06       		.uleb128 0x6
 4952 01b0 04       		.byte	0x4
 4953 01b1 66010000 		.4byte	0x166
 4954 01b5 02       		.uleb128 0x2
 4955 01b6 1A080000 		.4byte	.LASF33
 4956 01ba 07       		.byte	0x7
 4957 01bb 95       		.byte	0x95
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 190


 4958 01bc 66010000 		.4byte	0x166
 4959 01c0 0D       		.uleb128 0xd
 4960 01c1 C1010000 		.4byte	.LASF35
 4961 01c5 0C       		.byte	0xc
 4962 01c6 07       		.byte	0x7
 4963 01c7 97       		.byte	0x97
 4964 01c8 F1010000 		.4byte	0x1f1
 4965 01cc 0E       		.uleb128 0xe
 4966 01cd C70B0000 		.4byte	.LASF28
 4967 01d1 07       		.byte	0x7
 4968 01d2 9A       		.byte	0x9a
 4969 01d3 4B010000 		.4byte	0x14b
 4970 01d7 00       		.byte	0
 4971 01d8 0E       		.uleb128 0xe
 4972 01d9 E70D0000 		.4byte	.LASF29
 4973 01dd 07       		.byte	0x7
 4974 01de 9B       		.byte	0x9b
 4975 01df AF010000 		.4byte	0x1af
 4976 01e3 04       		.byte	0x4
 4977 01e4 0E       		.uleb128 0xe
 4978 01e5 48080000 		.4byte	.LASF30
 4979 01e9 07       		.byte	0x7
 4980 01ea 9C       		.byte	0x9c
 4981 01eb AF010000 		.4byte	0x1af
 4982 01ef 08       		.byte	0x8
 4983 01f0 00       		.byte	0
 4984 01f1 02       		.uleb128 0x2
 4985 01f2 54000000 		.4byte	.LASF36
 4986 01f6 07       		.byte	0x7
 4987 01f7 9E       		.byte	0x9e
 4988 01f8 C0010000 		.4byte	0x1c0
 4989 01fc 0D       		.uleb128 0xd
 4990 01fd 7B0A0000 		.4byte	.LASF37
 4991 0201 14       		.byte	0x14
 4992 0202 07       		.byte	0x7
 4993 0203 A3       		.byte	0xa3
 4994 0204 2D020000 		.4byte	0x22d
 4995 0208 0E       		.uleb128 0xe
 4996 0209 10050000 		.4byte	.LASF38
 4997 020d 07       		.byte	0x7
 4998 020e A6       		.byte	0xa6
 4999 020f 2D020000 		.4byte	0x22d
 5000 0213 00       		.byte	0
 5001 0214 0E       		.uleb128 0xe
 5002 0215 88010000 		.4byte	.LASF39
 5003 0219 07       		.byte	0x7
 5004 021a A7       		.byte	0xa7
 5005 021b 32020000 		.4byte	0x232
 5006 021f 04       		.byte	0x4
 5007 0220 0E       		.uleb128 0xe
 5008 0221 90010000 		.4byte	.LASF40
 5009 0225 07       		.byte	0x7
 5010 0226 A8       		.byte	0xa8
 5011 0227 F1010000 		.4byte	0x1f1
 5012 022b 08       		.byte	0x8
 5013 022c 00       		.byte	0
 5014 022d 08       		.uleb128 0x8
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 191


 5015 022e 40010000 		.4byte	0x140
 5016 0232 06       		.uleb128 0x6
 5017 0233 04       		.byte	0x4
 5018 0234 B5010000 		.4byte	0x1b5
 5019 0238 02       		.uleb128 0x2
 5020 0239 C20A0000 		.4byte	.LASF41
 5021 023d 07       		.byte	0x7
 5022 023e AA       		.byte	0xaa
 5023 023f FC010000 		.4byte	0x1fc
 5024 0243 02       		.uleb128 0x2
 5025 0244 2C030000 		.4byte	.LASF42
 5026 0248 08       		.byte	0x8
 5027 0249 3D       		.byte	0x3d
 5028 024a B0000000 		.4byte	0xb0
 5029 024e 0F       		.uleb128 0xf
 5030 024f 01       		.byte	0x1
 5031 0250 5E000000 		.4byte	0x5e
 5032 0254 08       		.byte	0x8
 5033 0255 52       		.byte	0x52
 5034 0256 79020000 		.4byte	0x279
 5035 025a 10       		.uleb128 0x10
 5036 025b D40D0000 		.4byte	.LASF43
 5037 025f 00       		.byte	0
 5038 0260 10       		.uleb128 0x10
 5039 0261 F60B0000 		.4byte	.LASF44
 5040 0265 01       		.byte	0x1
 5041 0266 10       		.uleb128 0x10
 5042 0267 F6060000 		.4byte	.LASF45
 5043 026b 02       		.byte	0x2
 5044 026c 10       		.uleb128 0x10
 5045 026d BE070000 		.4byte	.LASF46
 5046 0271 03       		.byte	0x3
 5047 0272 10       		.uleb128 0x10
 5048 0273 890D0000 		.4byte	.LASF47
 5049 0277 04       		.byte	0x4
 5050 0278 00       		.byte	0
 5051 0279 02       		.uleb128 0x2
 5052 027a 03020000 		.4byte	.LASF48
 5053 027e 08       		.byte	0x8
 5054 027f 58       		.byte	0x58
 5055 0280 4E020000 		.4byte	0x24e
 5056 0284 0D       		.uleb128 0xd
 5057 0285 B7010000 		.4byte	.LASF49
 5058 0289 08       		.byte	0x8
 5059 028a 08       		.byte	0x8
 5060 028b 5D       		.byte	0x5d
 5061 028c A9020000 		.4byte	0x2a9
 5062 0290 0E       		.uleb128 0xe
 5063 0291 29040000 		.4byte	.LASF50
 5064 0295 08       		.byte	0x8
 5065 0296 5F       		.byte	0x5f
 5066 0297 35010000 		.4byte	0x135
 5067 029b 00       		.byte	0
 5068 029c 0E       		.uleb128 0xe
 5069 029d D3040000 		.4byte	.LASF51
 5070 02a1 08       		.byte	0x8
 5071 02a2 60       		.byte	0x60
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 192


 5072 02a3 4B010000 		.4byte	0x14b
 5073 02a7 04       		.byte	0x4
 5074 02a8 00       		.byte	0
 5075 02a9 02       		.uleb128 0x2
 5076 02aa 63000000 		.4byte	.LASF52
 5077 02ae 08       		.byte	0x8
 5078 02af 61       		.byte	0x61
 5079 02b0 84020000 		.4byte	0x284
 5080 02b4 0D       		.uleb128 0xd
 5081 02b5 77060000 		.4byte	.LASF53
 5082 02b9 0C       		.byte	0xc
 5083 02ba 08       		.byte	0x8
 5084 02bb 66       		.byte	0x66
 5085 02bc E5020000 		.4byte	0x2e5
 5086 02c0 0E       		.uleb128 0xe
 5087 02c1 88020000 		.4byte	.LASF54
 5088 02c5 08       		.byte	0x8
 5089 02c6 68       		.byte	0x68
 5090 02c7 B0000000 		.4byte	0xb0
 5091 02cb 00       		.byte	0
 5092 02cc 0E       		.uleb128 0xe
 5093 02cd FA070000 		.4byte	.LASF55
 5094 02d1 08       		.byte	0x8
 5095 02d2 69       		.byte	0x69
 5096 02d3 EB000000 		.4byte	0xeb
 5097 02d7 04       		.byte	0x4
 5098 02d8 0E       		.uleb128 0xe
 5099 02d9 2A070000 		.4byte	.LASF56
 5100 02dd 08       		.byte	0x8
 5101 02de 6A       		.byte	0x6a
 5102 02df EB000000 		.4byte	0xeb
 5103 02e3 08       		.byte	0x8
 5104 02e4 00       		.byte	0
 5105 02e5 02       		.uleb128 0x2
 5106 02e6 60030000 		.4byte	.LASF57
 5107 02ea 08       		.byte	0x8
 5108 02eb 6B       		.byte	0x6b
 5109 02ec B4020000 		.4byte	0x2b4
 5110 02f0 07       		.uleb128 0x7
 5111 02f1 BF000000 		.4byte	0xbf
 5112 02f5 06       		.uleb128 0x6
 5113 02f6 04       		.byte	0x4
 5114 02f7 2A010000 		.4byte	0x12a
 5115 02fb 11       		.uleb128 0x11
 5116 02fc C6020000 		.4byte	.LASF58
 5117 0300 60       		.byte	0x60
 5118 0301 01       		.byte	0x1
 5119 0302 0D01     		.2byte	0x10d
 5120 0304 7E030000 		.4byte	0x37e
 5121 0308 12       		.uleb128 0x12
 5122 0309 87050000 		.4byte	.LASF59
 5123 030d 01       		.byte	0x1
 5124 030e 0F01     		.2byte	0x10f
 5125 0310 7E030000 		.4byte	0x37e
 5126 0314 00       		.byte	0
 5127 0315 12       		.uleb128 0x12
 5128 0316 61020000 		.4byte	.LASF60
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 193


 5129 031a 01       		.byte	0x1
 5130 031b 1501     		.2byte	0x115
 5131 031d B5010000 		.4byte	0x1b5
 5132 0321 04       		.byte	0x4
 5133 0322 12       		.uleb128 0x12
 5134 0323 5F010000 		.4byte	.LASF61
 5135 0327 01       		.byte	0x1
 5136 0328 1601     		.2byte	0x116
 5137 032a B5010000 		.4byte	0x1b5
 5138 032e 18       		.byte	0x18
 5139 032f 12       		.uleb128 0x12
 5140 0330 420E0000 		.4byte	.LASF62
 5141 0334 01       		.byte	0x1
 5142 0335 1701     		.2byte	0x117
 5143 0337 40010000 		.4byte	0x140
 5144 033b 2C       		.byte	0x2c
 5145 033c 12       		.uleb128 0x12
 5146 033d 39030000 		.4byte	.LASF63
 5147 0341 01       		.byte	0x1
 5148 0342 1801     		.2byte	0x118
 5149 0344 F5020000 		.4byte	0x2f5
 5150 0348 30       		.byte	0x30
 5151 0349 12       		.uleb128 0x12
 5152 034a A30D0000 		.4byte	.LASF64
 5153 034e 01       		.byte	0x1
 5154 034f 1901     		.2byte	0x119
 5155 0351 89030000 		.4byte	0x389
 5156 0355 34       		.byte	0x34
 5157 0356 12       		.uleb128 0x12
 5158 0357 96020000 		.4byte	.LASF65
 5159 035b 01       		.byte	0x1
 5160 035c 3201     		.2byte	0x132
 5161 035e 56010000 		.4byte	0x156
 5162 0362 44       		.byte	0x44
 5163 0363 12       		.uleb128 0x12
 5164 0364 7E090000 		.4byte	.LASF66
 5165 0368 01       		.byte	0x1
 5166 0369 4501     		.2byte	0x145
 5167 036b F6000000 		.4byte	0xf6
 5168 036f 58       		.byte	0x58
 5169 0370 12       		.uleb128 0x12
 5170 0371 56090000 		.4byte	.LASF67
 5171 0375 01       		.byte	0x1
 5172 0376 4601     		.2byte	0x146
 5173 0378 FB000000 		.4byte	0xfb
 5174 037c 5C       		.byte	0x5c
 5175 037d 00       		.byte	0
 5176 037e 06       		.uleb128 0x6
 5177 037f 04       		.byte	0x4
 5178 0380 84030000 		.4byte	0x384
 5179 0384 08       		.uleb128 0x8
 5180 0385 2A010000 		.4byte	0x12a
 5181 0389 0B       		.uleb128 0xb
 5182 038a B8000000 		.4byte	0xb8
 5183 038e 99030000 		.4byte	0x399
 5184 0392 0C       		.uleb128 0xc
 5185 0393 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 194


 5186 0397 0F       		.byte	0xf
 5187 0398 00       		.byte	0
 5188 0399 13       		.uleb128 0x13
 5189 039a A1050000 		.4byte	.LASF68
 5190 039e 01       		.byte	0x1
 5191 039f 5301     		.2byte	0x153
 5192 03a1 FB020000 		.4byte	0x2fb
 5193 03a5 13       		.uleb128 0x13
 5194 03a6 F1090000 		.4byte	.LASF69
 5195 03aa 01       		.byte	0x1
 5196 03ab 5701     		.2byte	0x157
 5197 03ad 99030000 		.4byte	0x399
 5198 03b1 14       		.uleb128 0x14
 5199 03b2 90060000 		.4byte	.LASF72
 5200 03b6 02       		.byte	0x2
 5201 03b7 98       		.byte	0x98
 5202 03b8 03       		.byte	0x3
 5203 03b9 C9030000 		.4byte	0x3c9
 5204 03bd 15       		.uleb128 0x15
 5205 03be 3B010000 		.4byte	.LASF70
 5206 03c2 02       		.byte	0x2
 5207 03c3 9A       		.byte	0x9a
 5208 03c4 EB000000 		.4byte	0xeb
 5209 03c8 00       		.byte	0
 5210 03c9 16       		.uleb128 0x16
 5211 03ca B3020000 		.4byte	.LASF224
 5212 03ce 02       		.byte	0x2
 5213 03cf A8       		.byte	0xa8
 5214 03d0 EB000000 		.4byte	0xeb
 5215 03d4 03       		.byte	0x3
 5216 03d5 F0030000 		.4byte	0x3f0
 5217 03d9 15       		.uleb128 0x15
 5218 03da 16000000 		.4byte	.LASF71
 5219 03de 02       		.byte	0x2
 5220 03df AA       		.byte	0xaa
 5221 03e0 EB000000 		.4byte	0xeb
 5222 03e4 15       		.uleb128 0x15
 5223 03e5 3B010000 		.4byte	.LASF70
 5224 03e9 02       		.byte	0x2
 5225 03ea AA       		.byte	0xaa
 5226 03eb EB000000 		.4byte	0xeb
 5227 03ef 00       		.byte	0
 5228 03f0 14       		.uleb128 0x14
 5229 03f1 0A080000 		.4byte	.LASF73
 5230 03f5 02       		.byte	0x2
 5231 03f6 BC       		.byte	0xbc
 5232 03f7 03       		.byte	0x3
 5233 03f8 08040000 		.4byte	0x408
 5234 03fc 17       		.uleb128 0x17
 5235 03fd 8F040000 		.4byte	.LASF225
 5236 0401 02       		.byte	0x2
 5237 0402 BC       		.byte	0xbc
 5238 0403 EB000000 		.4byte	0xeb
 5239 0407 00       		.byte	0
 5240 0408 18       		.uleb128 0x18
 5241 0409 BD0D0000 		.4byte	.LASF90
 5242 040d 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 195


 5243 040e C306     		.2byte	0x6c3
 5244 0410 35010000 		.4byte	0x135
 5245 0414 00000000 		.4byte	.LFB146
 5246 0418 4C000000 		.4byte	.LFE146-.LFB146
 5247 041c 01       		.uleb128 0x1
 5248 041d 9C       		.byte	0x9c
 5249 041e 73040000 		.4byte	0x473
 5250 0422 19       		.uleb128 0x19
 5251 0423 51070000 		.4byte	.LASF78
 5252 0427 01       		.byte	0x1
 5253 0428 C306     		.2byte	0x6c3
 5254 042a 73040000 		.4byte	0x473
 5255 042e 00000000 		.4byte	.LLST0
 5256 0432 1A       		.uleb128 0x1a
 5257 0433 B9040000 		.4byte	.LASF74
 5258 0437 01       		.byte	0x1
 5259 0438 C506     		.2byte	0x6c5
 5260 043a 35010000 		.4byte	0x135
 5261 043e 69000000 		.4byte	.LLST1
 5262 0442 1A       		.uleb128 0x1a
 5263 0443 F1050000 		.4byte	.LASF75
 5264 0447 01       		.byte	0x1
 5265 0448 C606     		.2byte	0x6c6
 5266 044a 83040000 		.4byte	0x483
 5267 044e 88000000 		.4byte	.LLST2
 5268 0452 1B       		.uleb128 0x1b
 5269 0453 B1030000 		.4byte	0x3b1
 5270 0457 04000000 		.4byte	.LBB94
 5271 045b 12000000 		.4byte	.LBE94-.LBB94
 5272 045f 01       		.byte	0x1
 5273 0460 CC06     		.2byte	0x6cc
 5274 0462 1C       		.uleb128 0x1c
 5275 0463 04000000 		.4byte	.LBB95
 5276 0467 12000000 		.4byte	.LBE95-.LBB95
 5277 046b 1D       		.uleb128 0x1d
 5278 046c BD030000 		.4byte	0x3bd
 5279 0470 00       		.byte	0
 5280 0471 00       		.byte	0
 5281 0472 00       		.byte	0
 5282 0473 07       		.uleb128 0x7
 5283 0474 43020000 		.4byte	0x243
 5284 0478 06       		.uleb128 0x6
 5285 0479 04       		.byte	0x4
 5286 047a 7E040000 		.4byte	0x47e
 5287 047e 07       		.uleb128 0x7
 5288 047f A5030000 		.4byte	0x3a5
 5289 0483 07       		.uleb128 0x7
 5290 0484 78040000 		.4byte	0x478
 5291 0488 1E       		.uleb128 0x1e
 5292 0489 DF030000 		.4byte	.LASF76
 5293 048d 01       		.byte	0x1
 5294 048e 9D0E     		.2byte	0xe9d
 5295 0490 00000000 		.4byte	.LFB174
 5296 0494 2C000000 		.4byte	.LFE174-.LFB174
 5297 0498 01       		.uleb128 0x1
 5298 0499 9C       		.byte	0x9c
 5299 049a AF040000 		.4byte	0x4af
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 196


 5300 049e 1A       		.uleb128 0x1a
 5301 049f F1050000 		.4byte	.LASF75
 5302 04a3 01       		.byte	0x1
 5303 04a4 9F0E     		.2byte	0xe9f
 5304 04a6 AF040000 		.4byte	0x4af
 5305 04aa F1000000 		.4byte	.LLST3
 5306 04ae 00       		.byte	0
 5307 04af 06       		.uleb128 0x6
 5308 04b0 04       		.byte	0x4
 5309 04b1 A5030000 		.4byte	0x3a5
 5310 04b5 1E       		.uleb128 0x1e
 5311 04b6 B0060000 		.4byte	.LASF77
 5312 04ba 01       		.byte	0x1
 5313 04bb 670E     		.2byte	0xe67
 5314 04bd 00000000 		.4byte	.LFB173
 5315 04c1 12000000 		.4byte	.LFE173-.LFB173
 5316 04c5 01       		.uleb128 0x1
 5317 04c6 9C       		.byte	0x9c
 5318 04c7 F5040000 		.4byte	0x4f5
 5319 04cb 19       		.uleb128 0x19
 5320 04cc F1050000 		.4byte	.LASF75
 5321 04d0 01       		.byte	0x1
 5322 04d1 670E     		.2byte	0xe67
 5323 04d3 AF040000 		.4byte	0x4af
 5324 04d7 04010000 		.4byte	.LLST4
 5325 04db 1F       		.uleb128 0x1f
 5326 04dc 0A000000 		.4byte	.LVL13
 5327 04e0 FC210000 		.4byte	0x21fc
 5328 04e4 20       		.uleb128 0x20
 5329 04e5 10000000 		.4byte	.LVL14
 5330 04e9 FC210000 		.4byte	0x21fc
 5331 04ed 21       		.uleb128 0x21
 5332 04ee 01       		.uleb128 0x1
 5333 04ef 50       		.byte	0x50
 5334 04f0 02       		.uleb128 0x2
 5335 04f1 74       		.byte	0x74
 5336 04f2 00       		.sleb128 0
 5337 04f3 00       		.byte	0
 5338 04f4 00       		.byte	0
 5339 04f5 1E       		.uleb128 0x1e
 5340 04f6 C90A0000 		.4byte	.LASF79
 5341 04fa 01       		.byte	0x1
 5342 04fb 3703     		.2byte	0x337
 5343 04fd 00000000 		.4byte	.LFB137
 5344 0501 9E000000 		.4byte	.LFE137-.LFB137
 5345 0505 01       		.uleb128 0x1
 5346 0506 9C       		.byte	0x9c
 5347 0507 05060000 		.4byte	0x605
 5348 050b 19       		.uleb128 0x19
 5349 050c 7E070000 		.4byte	.LASF80
 5350 0510 01       		.byte	0x1
 5351 0511 3703     		.2byte	0x337
 5352 0513 0E010000 		.4byte	0x10e
 5353 0517 22010000 		.4byte	.LLST5
 5354 051b 19       		.uleb128 0x19
 5355 051c 820E0000 		.4byte	.LASF81
 5356 0520 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 197


 5357 0521 3803     		.2byte	0x338
 5358 0523 F0020000 		.4byte	0x2f0
 5359 0527 40010000 		.4byte	.LLST6
 5360 052b 19       		.uleb128 0x19
 5361 052c 89070000 		.4byte	.LASF82
 5362 0530 01       		.byte	0x1
 5363 0531 3903     		.2byte	0x339
 5364 0533 05060000 		.4byte	0x605
 5365 0537 5E010000 		.4byte	.LLST7
 5366 053b 19       		.uleb128 0x19
 5367 053c 94050000 		.4byte	.LASF83
 5368 0540 01       		.byte	0x1
 5369 0541 3A03     		.2byte	0x33a
 5370 0543 0A060000 		.4byte	0x60a
 5371 0547 9B010000 		.4byte	.LLST8
 5372 054b 19       		.uleb128 0x19
 5373 054c 420E0000 		.4byte	.LASF62
 5374 0550 01       		.byte	0x1
 5375 0551 3B03     		.2byte	0x33b
 5376 0553 40010000 		.4byte	0x140
 5377 0557 B9010000 		.4byte	.LLST9
 5378 055b 22       		.uleb128 0x22
 5379 055c 02050000 		.4byte	.LASF84
 5380 0560 01       		.byte	0x1
 5381 0561 3C03     		.2byte	0x33c
 5382 0563 15060000 		.4byte	0x615
 5383 0567 02       		.uleb128 0x2
 5384 0568 91       		.byte	0x91
 5385 0569 04       		.sleb128 4
 5386 056a 22       		.uleb128 0x22
 5387 056b DA020000 		.4byte	.LASF85
 5388 056f 01       		.byte	0x1
 5389 0570 3D03     		.2byte	0x33d
 5390 0572 AF040000 		.4byte	0x4af
 5391 0576 02       		.uleb128 0x2
 5392 0577 91       		.byte	0x91
 5393 0578 08       		.sleb128 8
 5394 0579 22       		.uleb128 0x22
 5395 057a 37070000 		.4byte	.LASF86
 5396 057e 01       		.byte	0x1
 5397 057f 3E03     		.2byte	0x33e
 5398 0581 25060000 		.4byte	0x625
 5399 0585 02       		.uleb128 0x2
 5400 0586 91       		.byte	0x91
 5401 0587 0C       		.sleb128 12
 5402 0588 23       		.uleb128 0x23
 5403 0589 87050000 		.4byte	.LASF59
 5404 058d 01       		.byte	0x1
 5405 058e 4003     		.2byte	0x340
 5406 0590 F5020000 		.4byte	0x2f5
 5407 0594 01       		.uleb128 0x1
 5408 0595 55       		.byte	0x55
 5409 0596 24       		.uleb128 0x24
 5410 0597 7800     		.ascii	"x\000"
 5411 0599 01       		.byte	0x1
 5412 059a 4103     		.2byte	0x341
 5413 059c 40010000 		.4byte	0x140
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 198


 5414 05a0 D8010000 		.4byte	.LLST10
 5415 05a4 25       		.uleb128 0x25
 5416 05a5 1C000000 		.4byte	.LVL19
 5417 05a9 07220000 		.4byte	0x2207
 5418 05ad C0050000 		.4byte	0x5c0
 5419 05b1 21       		.uleb128 0x21
 5420 05b2 01       		.uleb128 0x1
 5421 05b3 51       		.byte	0x51
 5422 05b4 02       		.uleb128 0x2
 5423 05b5 08       		.byte	0x8
 5424 05b6 A5       		.byte	0xa5
 5425 05b7 21       		.uleb128 0x21
 5426 05b8 01       		.uleb128 0x1
 5427 05b9 52       		.byte	0x52
 5428 05ba 04       		.uleb128 0x4
 5429 05bb 75       		.byte	0x75
 5430 05bc 00       		.sleb128 0
 5431 05bd 32       		.byte	0x32
 5432 05be 24       		.byte	0x24
 5433 05bf 00       		.byte	0
 5434 05c0 25       		.uleb128 0x25
 5435 05c1 5A000000 		.4byte	.LVL26
 5436 05c5 12220000 		.4byte	0x2212
 5437 05c9 D4050000 		.4byte	0x5d4
 5438 05cd 21       		.uleb128 0x21
 5439 05ce 01       		.uleb128 0x1
 5440 05cf 50       		.byte	0x50
 5441 05d0 02       		.uleb128 0x2
 5442 05d1 74       		.byte	0x74
 5443 05d2 04       		.sleb128 4
 5444 05d3 00       		.byte	0
 5445 05d4 25       		.uleb128 0x25
 5446 05d5 62000000 		.4byte	.LVL27
 5447 05d9 12220000 		.4byte	0x2212
 5448 05dd E8050000 		.4byte	0x5e8
 5449 05e1 21       		.uleb128 0x21
 5450 05e2 01       		.uleb128 0x1
 5451 05e3 50       		.byte	0x50
 5452 05e4 02       		.uleb128 0x2
 5453 05e5 74       		.byte	0x74
 5454 05e6 18       		.sleb128 24
 5455 05e7 00       		.byte	0
 5456 05e8 20       		.uleb128 0x20
 5457 05e9 94000000 		.4byte	.LVL32
 5458 05ed 1E220000 		.4byte	0x221e
 5459 05f1 21       		.uleb128 0x21
 5460 05f2 01       		.uleb128 0x1
 5461 05f3 50       		.byte	0x50
 5462 05f4 02       		.uleb128 0x2
 5463 05f5 75       		.byte	0x75
 5464 05f6 00       		.sleb128 0
 5465 05f7 21       		.uleb128 0x21
 5466 05f8 01       		.uleb128 0x1
 5467 05f9 51       		.byte	0x51
 5468 05fa 02       		.uleb128 0x2
 5469 05fb 7A       		.byte	0x7a
 5470 05fc 00       		.sleb128 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 199


 5471 05fd 21       		.uleb128 0x21
 5472 05fe 01       		.uleb128 0x1
 5473 05ff 52       		.byte	0x52
 5474 0600 02       		.uleb128 0x2
 5475 0601 78       		.byte	0x78
 5476 0602 00       		.sleb128 0
 5477 0603 00       		.byte	0
 5478 0604 00       		.byte	0
 5479 0605 07       		.uleb128 0x7
 5480 0606 EB000000 		.4byte	0xeb
 5481 060a 07       		.uleb128 0x7
 5482 060b B0000000 		.4byte	0xb0
 5483 060f 06       		.uleb128 0x6
 5484 0610 04       		.byte	0x4
 5485 0611 43020000 		.4byte	0x243
 5486 0615 07       		.uleb128 0x7
 5487 0616 0F060000 		.4byte	0x60f
 5488 061a 06       		.uleb128 0x6
 5489 061b 04       		.byte	0x4
 5490 061c 20060000 		.4byte	0x620
 5491 0620 07       		.uleb128 0x7
 5492 0621 E5020000 		.4byte	0x2e5
 5493 0625 07       		.uleb128 0x7
 5494 0626 1A060000 		.4byte	0x61a
 5495 062a 1E       		.uleb128 0x1e
 5496 062b 60060000 		.4byte	.LASF87
 5497 062f 01       		.byte	0x1
 5498 0630 770D     		.2byte	0xd77
 5499 0632 00000000 		.4byte	.LFB171
 5500 0636 58000000 		.4byte	.LFE171-.LFB171
 5501 063a 01       		.uleb128 0x1
 5502 063b 9C       		.byte	0x9c
 5503 063c D3060000 		.4byte	0x6d3
 5504 0640 1A       		.uleb128 0x1a
 5505 0641 420E0000 		.4byte	.LASF62
 5506 0645 01       		.byte	0x1
 5507 0646 790D     		.2byte	0xd79
 5508 0648 40010000 		.4byte	0x140
 5509 064c 02020000 		.4byte	.LLST11
 5510 0650 25       		.uleb128 0x25
 5511 0651 14000000 		.4byte	.LVL35
 5512 0655 29220000 		.4byte	0x2229
 5513 0659 71060000 		.4byte	0x671
 5514 065d 21       		.uleb128 0x21
 5515 065e 01       		.uleb128 0x1
 5516 065f 50       		.byte	0x50
 5517 0660 0F       		.uleb128 0xf
 5518 0661 74       		.byte	0x74
 5519 0662 00       		.sleb128 0
 5520 0663 32       		.byte	0x32
 5521 0664 24       		.byte	0x24
 5522 0665 74       		.byte	0x74
 5523 0666 00       		.sleb128 0
 5524 0667 22       		.byte	0x22
 5525 0668 32       		.byte	0x32
 5526 0669 24       		.byte	0x24
 5527 066a 03       		.byte	0x3
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 200


 5528 066b 30000000 		.4byte	.LANCHOR0+48
 5529 066f 22       		.byte	0x22
 5530 0670 00       		.byte	0
 5531 0671 25       		.uleb128 0x25
 5532 0672 26000000 		.4byte	.LVL38
 5533 0676 29220000 		.4byte	0x2229
 5534 067a 85060000 		.4byte	0x685
 5535 067e 21       		.uleb128 0x21
 5536 067f 01       		.uleb128 0x1
 5537 0680 50       		.byte	0x50
 5538 0681 02       		.uleb128 0x2
 5539 0682 76       		.byte	0x76
 5540 0683 00       		.sleb128 0
 5541 0684 00       		.byte	0
 5542 0685 25       		.uleb128 0x25
 5543 0686 30000000 		.4byte	.LVL39
 5544 068a 29220000 		.4byte	0x2229
 5545 068e 99060000 		.4byte	0x699
 5546 0692 21       		.uleb128 0x21
 5547 0693 01       		.uleb128 0x1
 5548 0694 50       		.byte	0x50
 5549 0695 02       		.uleb128 0x2
 5550 0696 75       		.byte	0x75
 5551 0697 00       		.sleb128 0
 5552 0698 00       		.byte	0
 5553 0699 25       		.uleb128 0x25
 5554 069a 38000000 		.4byte	.LVL40
 5555 069e 29220000 		.4byte	0x2229
 5556 06a2 AD060000 		.4byte	0x6ad
 5557 06a6 21       		.uleb128 0x21
 5558 06a7 01       		.uleb128 0x1
 5559 06a8 50       		.byte	0x50
 5560 06a9 02       		.uleb128 0x2
 5561 06aa 74       		.byte	0x74
 5562 06ab 14       		.sleb128 20
 5563 06ac 00       		.byte	0
 5564 06ad 25       		.uleb128 0x25
 5565 06ae 40000000 		.4byte	.LVL41
 5566 06b2 29220000 		.4byte	0x2229
 5567 06b6 C2060000 		.4byte	0x6c2
 5568 06ba 21       		.uleb128 0x21
 5569 06bb 01       		.uleb128 0x1
 5570 06bc 50       		.byte	0x50
 5571 06bd 03       		.uleb128 0x3
 5572 06be 74       		.byte	0x74
 5573 06bf E401     		.sleb128 228
 5574 06c1 00       		.byte	0
 5575 06c2 20       		.uleb128 0x20
 5576 06c3 46000000 		.4byte	.LVL42
 5577 06c7 29220000 		.4byte	0x2229
 5578 06cb 21       		.uleb128 0x21
 5579 06cc 01       		.uleb128 0x1
 5580 06cd 50       		.byte	0x50
 5581 06ce 02       		.uleb128 0x2
 5582 06cf 74       		.byte	0x74
 5583 06d0 00       		.sleb128 0
 5584 06d1 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 201


 5585 06d2 00       		.byte	0
 5586 06d3 1E       		.uleb128 0x1e
 5587 06d4 1B060000 		.4byte	.LASF88
 5588 06d8 01       		.byte	0x1
 5589 06d9 0304     		.2byte	0x403
 5590 06db 00000000 		.4byte	.LFB138
 5591 06df AC000000 		.4byte	.LFE138-.LFB138
 5592 06e3 01       		.uleb128 0x1
 5593 06e4 9C       		.byte	0x9c
 5594 06e5 29070000 		.4byte	0x729
 5595 06e9 19       		.uleb128 0x19
 5596 06ea DA020000 		.4byte	.LASF85
 5597 06ee 01       		.byte	0x1
 5598 06ef 0304     		.2byte	0x403
 5599 06f1 AF040000 		.4byte	0x4af
 5600 06f5 21020000 		.4byte	.LLST12
 5601 06f9 1F       		.uleb128 0x1f
 5602 06fa 08000000 		.4byte	.LVL44
 5603 06fe 35220000 		.4byte	0x2235
 5604 0702 1F       		.uleb128 0x1f
 5605 0703 2C000000 		.4byte	.LVL45
 5606 0707 2A060000 		.4byte	0x62a
 5607 070b 25       		.uleb128 0x25
 5608 070c 7A000000 		.4byte	.LVL46
 5609 0710 40220000 		.4byte	0x2240
 5610 0714 1F070000 		.4byte	0x71f
 5611 0718 21       		.uleb128 0x21
 5612 0719 01       		.uleb128 0x1
 5613 071a 51       		.byte	0x51
 5614 071b 02       		.uleb128 0x2
 5615 071c 74       		.byte	0x74
 5616 071d 04       		.sleb128 4
 5617 071e 00       		.byte	0
 5618 071f 1F       		.uleb128 0x1f
 5619 0720 7E000000 		.4byte	.LVL47
 5620 0724 4C220000 		.4byte	0x224c
 5621 0728 00       		.byte	0
 5622 0729 1E       		.uleb128 0x1e
 5623 072a 190B0000 		.4byte	.LASF89
 5624 072e 01       		.byte	0x1
 5625 072f 970D     		.2byte	0xd97
 5626 0731 00000000 		.4byte	.LFB172
 5627 0735 44000000 		.4byte	.LFE172-.LFB172
 5628 0739 01       		.uleb128 0x1
 5629 073a 9C       		.byte	0x9c
 5630 073b 90070000 		.4byte	0x790
 5631 073f 1C       		.uleb128 0x1c
 5632 0740 02000000 		.4byte	.LBB96
 5633 0744 3C000000 		.4byte	.LBE96-.LBB96
 5634 0748 1A       		.uleb128 0x1a
 5635 0749 F1050000 		.4byte	.LASF75
 5636 074d 01       		.byte	0x1
 5637 074e 9E0D     		.2byte	0xd9e
 5638 0750 AF040000 		.4byte	0x4af
 5639 0754 4D020000 		.4byte	.LLST13
 5640 0758 1F       		.uleb128 0x1f
 5641 0759 08000000 		.4byte	.LVL49
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 202


 5642 075d 35220000 		.4byte	0x2235
 5643 0761 25       		.uleb128 0x25
 5644 0762 16000000 		.4byte	.LVL51
 5645 0766 57220000 		.4byte	0x2257
 5646 076a 75070000 		.4byte	0x775
 5647 076e 21       		.uleb128 0x21
 5648 076f 01       		.uleb128 0x1
 5649 0770 50       		.byte	0x50
 5650 0771 02       		.uleb128 0x2
 5651 0772 75       		.byte	0x75
 5652 0773 04       		.sleb128 4
 5653 0774 00       		.byte	0
 5654 0775 1F       		.uleb128 0x1f
 5655 0776 2E000000 		.4byte	.LVL52
 5656 077a 4C220000 		.4byte	0x224c
 5657 077e 20       		.uleb128 0x20
 5658 077f 34000000 		.4byte	.LVL53
 5659 0783 B5040000 		.4byte	0x4b5
 5660 0787 21       		.uleb128 0x21
 5661 0788 01       		.uleb128 0x1
 5662 0789 50       		.byte	0x50
 5663 078a 02       		.uleb128 0x2
 5664 078b 75       		.byte	0x75
 5665 078c 00       		.sleb128 0
 5666 078d 00       		.byte	0
 5667 078e 00       		.byte	0
 5668 078f 00       		.byte	0
 5669 0790 26       		.uleb128 0x26
 5670 0791 CA060000 		.4byte	.LASF91
 5671 0795 01       		.byte	0x1
 5672 0796 A30C     		.2byte	0xca3
 5673 0798 00000000 		.4byte	.LFB168
 5674 079c 28000000 		.4byte	.LFE168-.LFB168
 5675 07a0 01       		.uleb128 0x1
 5676 07a1 9C       		.byte	0x9c
 5677 07a2 C0070000 		.4byte	0x7c0
 5678 07a6 19       		.uleb128 0x19
 5679 07a7 94050000 		.4byte	.LASF83
 5680 07ab 01       		.byte	0x1
 5681 07ac A30C     		.2byte	0xca3
 5682 07ae B0000000 		.4byte	0xb0
 5683 07b2 60020000 		.4byte	.LLST14
 5684 07b6 1F       		.uleb128 0x1f
 5685 07b7 06000000 		.4byte	.LVL56
 5686 07bb 29070000 		.4byte	0x729
 5687 07bf 00       		.byte	0
 5688 07c0 1E       		.uleb128 0x1e
 5689 07c1 6A0B0000 		.4byte	.LASF92
 5690 07c5 01       		.byte	0x1
 5691 07c6 3B13     		.2byte	0x133b
 5692 07c8 00000000 		.4byte	.LFB184
 5693 07cc 68000000 		.4byte	.LFE184-.LFB184
 5694 07d0 01       		.uleb128 0x1
 5695 07d1 9C       		.byte	0x9c
 5696 07d2 49080000 		.4byte	0x849
 5697 07d6 19       		.uleb128 0x19
 5698 07d7 27020000 		.4byte	.LASF93
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 203


 5699 07db 01       		.byte	0x1
 5700 07dc 3B13     		.2byte	0x133b
 5701 07de 4B010000 		.4byte	0x14b
 5702 07e2 81020000 		.4byte	.LLST15
 5703 07e6 19       		.uleb128 0x19
 5704 07e7 00000000 		.4byte	.LASF94
 5705 07eb 01       		.byte	0x1
 5706 07ec 3B13     		.2byte	0x133b
 5707 07ee 49080000 		.4byte	0x849
 5708 07f2 AD020000 		.4byte	.LLST16
 5709 07f6 1A       		.uleb128 0x1a
 5710 07f7 64090000 		.4byte	.LASF95
 5711 07fb 01       		.byte	0x1
 5712 07fc 3D13     		.2byte	0x133d
 5713 07fe 4B010000 		.4byte	0x14b
 5714 0802 D9020000 		.4byte	.LLST17
 5715 0806 1A       		.uleb128 0x1a
 5716 0807 2B090000 		.4byte	.LASF96
 5717 080b 01       		.byte	0x1
 5718 080c 3E13     		.2byte	0x133e
 5719 080e 4E080000 		.4byte	0x84e
 5720 0812 EC020000 		.4byte	.LLST18
 5721 0816 1F       		.uleb128 0x1f
 5722 0817 16000000 		.4byte	.LVL60
 5723 081b 57220000 		.4byte	0x2257
 5724 081f 25       		.uleb128 0x25
 5725 0820 2A000000 		.4byte	.LVL61
 5726 0824 40220000 		.4byte	0x2240
 5727 0828 36080000 		.4byte	0x836
 5728 082c 21       		.uleb128 0x21
 5729 082d 01       		.uleb128 0x1
 5730 082e 50       		.byte	0x50
 5731 082f 05       		.uleb128 0x5
 5732 0830 03       		.byte	0x3
 5733 0831 00000000 		.4byte	.LANCHOR0
 5734 0835 00       		.byte	0
 5735 0836 1F       		.uleb128 0x1f
 5736 0837 4A000000 		.4byte	.LVL64
 5737 083b 63220000 		.4byte	0x2263
 5738 083f 1F       		.uleb128 0x1f
 5739 0840 5A000000 		.4byte	.LVL67
 5740 0844 63220000 		.4byte	0x2263
 5741 0848 00       		.byte	0
 5742 0849 07       		.uleb128 0x7
 5743 084a 35010000 		.4byte	0x135
 5744 084e 07       		.uleb128 0x7
 5745 084f 4B010000 		.4byte	0x14b
 5746 0853 27       		.uleb128 0x27
 5747 0854 41000000 		.4byte	.LASF99
 5748 0858 01       		.byte	0x1
 5749 0859 DC02     		.2byte	0x2dc
 5750 085b 35010000 		.4byte	0x135
 5751 085f 00000000 		.4byte	.LFB136
 5752 0863 62000000 		.4byte	.LFE136-.LFB136
 5753 0867 01       		.uleb128 0x1
 5754 0868 9C       		.byte	0x9c
 5755 0869 97090000 		.4byte	0x997
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 204


 5756 086d 19       		.uleb128 0x19
 5757 086e 7E070000 		.4byte	.LASF80
 5758 0872 01       		.byte	0x1
 5759 0873 DC02     		.2byte	0x2dc
 5760 0875 0E010000 		.4byte	0x10e
 5761 0879 FF020000 		.4byte	.LLST19
 5762 087d 19       		.uleb128 0x19
 5763 087e 820E0000 		.4byte	.LASF81
 5764 0882 01       		.byte	0x1
 5765 0883 DD02     		.2byte	0x2dd
 5766 0885 F0020000 		.4byte	0x2f0
 5767 0889 1D030000 		.4byte	.LLST20
 5768 088d 19       		.uleb128 0x19
 5769 088e FB030000 		.4byte	.LASF97
 5770 0892 01       		.byte	0x1
 5771 0893 DE02     		.2byte	0x2de
 5772 0895 97090000 		.4byte	0x997
 5773 0899 3B030000 		.4byte	.LLST21
 5774 089d 19       		.uleb128 0x19
 5775 089e 94050000 		.4byte	.LASF83
 5776 08a2 01       		.byte	0x1
 5777 08a3 DF02     		.2byte	0x2df
 5778 08a5 0A060000 		.4byte	0x60a
 5779 08a9 5C030000 		.4byte	.LLST22
 5780 08ad 22       		.uleb128 0x22
 5781 08ae 420E0000 		.4byte	.LASF62
 5782 08b2 01       		.byte	0x1
 5783 08b3 E002     		.2byte	0x2e0
 5784 08b5 40010000 		.4byte	0x140
 5785 08b9 02       		.uleb128 0x2
 5786 08ba 91       		.byte	0x91
 5787 08bb 00       		.sleb128 0
 5788 08bc 22       		.uleb128 0x22
 5789 08bd 02050000 		.4byte	.LASF84
 5790 08c1 01       		.byte	0x1
 5791 08c2 E102     		.2byte	0x2e1
 5792 08c4 15060000 		.4byte	0x615
 5793 08c8 02       		.uleb128 0x2
 5794 08c9 91       		.byte	0x91
 5795 08ca 04       		.sleb128 4
 5796 08cb 1A       		.uleb128 0x1a
 5797 08cc DA020000 		.4byte	.LASF85
 5798 08d0 01       		.byte	0x1
 5799 08d1 E302     		.2byte	0x2e3
 5800 08d3 AF040000 		.4byte	0x4af
 5801 08d7 7A030000 		.4byte	.LLST23
 5802 08db 1A       		.uleb128 0x1a
 5803 08dc B9040000 		.4byte	.LASF74
 5804 08e0 01       		.byte	0x1
 5805 08e1 E402     		.2byte	0x2e4
 5806 08e3 35010000 		.4byte	0x135
 5807 08e7 A3030000 		.4byte	.LLST24
 5808 08eb 28       		.uleb128 0x28
 5809 08ec 0E000000 		.4byte	.LBB97
 5810 08f0 24000000 		.4byte	.LBE97-.LBB97
 5811 08f4 43090000 		.4byte	0x943
 5812 08f8 1A       		.uleb128 0x1a
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 205


 5813 08f9 39030000 		.4byte	.LASF63
 5814 08fd 01       		.byte	0x1
 5815 08fe 0103     		.2byte	0x301
 5816 0900 F5020000 		.4byte	0x2f5
 5817 0904 C2030000 		.4byte	.LLST25
 5818 0908 25       		.uleb128 0x25
 5819 0909 14000000 		.4byte	.LVL71
 5820 090d 6F220000 		.4byte	0x226f
 5821 0911 1E090000 		.4byte	0x91e
 5822 0915 21       		.uleb128 0x21
 5823 0916 01       		.uleb128 0x1
 5824 0917 50       		.byte	0x50
 5825 0918 04       		.uleb128 0x4
 5826 0919 75       		.byte	0x75
 5827 091a 00       		.sleb128 0
 5828 091b 32       		.byte	0x32
 5829 091c 24       		.byte	0x24
 5830 091d 00       		.byte	0
 5831 091e 25       		.uleb128 0x25
 5832 091f 1E000000 		.4byte	.LVL73
 5833 0923 6F220000 		.4byte	0x226f
 5834 0927 32090000 		.4byte	0x932
 5835 092b 21       		.uleb128 0x21
 5836 092c 01       		.uleb128 0x1
 5837 092d 50       		.byte	0x50
 5838 092e 02       		.uleb128 0x2
 5839 092f 08       		.byte	0x8
 5840 0930 60       		.byte	0x60
 5841 0931 00       		.byte	0
 5842 0932 20       		.uleb128 0x20
 5843 0933 2E000000 		.4byte	.LVL75
 5844 0937 FC210000 		.4byte	0x21fc
 5845 093b 21       		.uleb128 0x21
 5846 093c 01       		.uleb128 0x1
 5847 093d 50       		.byte	0x50
 5848 093e 02       		.uleb128 0x2
 5849 093f 79       		.byte	0x79
 5850 0940 00       		.sleb128 0
 5851 0941 00       		.byte	0
 5852 0942 00       		.byte	0
 5853 0943 25       		.uleb128 0x25
 5854 0944 4E000000 		.4byte	.LVL78
 5855 0948 F5040000 		.4byte	0x4f5
 5856 094c 86090000 		.4byte	0x986
 5857 0950 21       		.uleb128 0x21
 5858 0951 01       		.uleb128 0x1
 5859 0952 50       		.byte	0x50
 5860 0953 02       		.uleb128 0x2
 5861 0954 76       		.byte	0x76
 5862 0955 00       		.sleb128 0
 5863 0956 21       		.uleb128 0x21
 5864 0957 01       		.uleb128 0x1
 5865 0958 51       		.byte	0x51
 5866 0959 02       		.uleb128 0x2
 5867 095a 77       		.byte	0x77
 5868 095b 00       		.sleb128 0
 5869 095c 21       		.uleb128 0x21
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 206


 5870 095d 01       		.uleb128 0x1
 5871 095e 52       		.byte	0x52
 5872 095f 02       		.uleb128 0x2
 5873 0960 75       		.byte	0x75
 5874 0961 00       		.sleb128 0
 5875 0962 21       		.uleb128 0x21
 5876 0963 01       		.uleb128 0x1
 5877 0964 53       		.byte	0x53
 5878 0965 02       		.uleb128 0x2
 5879 0966 78       		.byte	0x78
 5880 0967 00       		.sleb128 0
 5881 0968 21       		.uleb128 0x21
 5882 0969 02       		.uleb128 0x2
 5883 096a 7D       		.byte	0x7d
 5884 096b 00       		.sleb128 0
 5885 096c 03       		.uleb128 0x3
 5886 096d 91       		.byte	0x91
 5887 096e 00       		.sleb128 0
 5888 096f 06       		.byte	0x6
 5889 0970 21       		.uleb128 0x21
 5890 0971 02       		.uleb128 0x2
 5891 0972 7D       		.byte	0x7d
 5892 0973 04       		.sleb128 4
 5893 0974 03       		.uleb128 0x3
 5894 0975 91       		.byte	0x91
 5895 0976 04       		.sleb128 4
 5896 0977 06       		.byte	0x6
 5897 0978 21       		.uleb128 0x21
 5898 0979 02       		.uleb128 0x2
 5899 097a 7D       		.byte	0x7d
 5900 097b 08       		.sleb128 8
 5901 097c 02       		.uleb128 0x2
 5902 097d 74       		.byte	0x74
 5903 097e 00       		.sleb128 0
 5904 097f 21       		.uleb128 0x21
 5905 0980 02       		.uleb128 0x2
 5906 0981 7D       		.byte	0x7d
 5907 0982 0C       		.sleb128 12
 5908 0983 01       		.uleb128 0x1
 5909 0984 30       		.byte	0x30
 5910 0985 00       		.byte	0
 5911 0986 20       		.uleb128 0x20
 5912 0987 54000000 		.4byte	.LVL79
 5913 098b D3060000 		.4byte	0x6d3
 5914 098f 21       		.uleb128 0x21
 5915 0990 01       		.uleb128 0x1
 5916 0991 50       		.byte	0x50
 5917 0992 02       		.uleb128 0x2
 5918 0993 74       		.byte	0x74
 5919 0994 00       		.sleb128 0
 5920 0995 00       		.byte	0
 5921 0996 00       		.byte	0
 5922 0997 07       		.uleb128 0x7
 5923 0998 D5000000 		.4byte	0xd5
 5924 099c 29       		.uleb128 0x29
 5925 099d EA0B0000 		.4byte	.LASF104
 5926 09a1 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 207


 5927 09a2 5804     		.2byte	0x458
 5928 09a4 00000000 		.4byte	.LFB139
 5929 09a8 B0000000 		.4byte	.LFE139-.LFB139
 5930 09ac 01       		.uleb128 0x1
 5931 09ad 9C       		.byte	0x9c
 5932 09ae 690A0000 		.4byte	0xa69
 5933 09b2 19       		.uleb128 0x19
 5934 09b3 53080000 		.4byte	.LASF98
 5935 09b7 01       		.byte	0x1
 5936 09b8 5804     		.2byte	0x458
 5937 09ba 43020000 		.4byte	0x243
 5938 09be EB030000 		.4byte	.LLST26
 5939 09c2 1A       		.uleb128 0x1a
 5940 09c3 F1050000 		.4byte	.LASF75
 5941 09c7 01       		.byte	0x1
 5942 09c8 5A04     		.2byte	0x45a
 5943 09ca AF040000 		.4byte	0x4af
 5944 09ce 09040000 		.4byte	.LLST27
 5945 09d2 2A       		.uleb128 0x2a
 5946 09d3 B1030000 		.4byte	0x3b1
 5947 09d7 84000000 		.4byte	.LBB98
 5948 09db 12000000 		.4byte	.LBE98-.LBB98
 5949 09df 01       		.byte	0x1
 5950 09e0 A504     		.2byte	0x4a5
 5951 09e2 F6090000 		.4byte	0x9f6
 5952 09e6 1C       		.uleb128 0x1c
 5953 09e7 84000000 		.4byte	.LBB99
 5954 09eb 12000000 		.4byte	.LBE99-.LBB99
 5955 09ef 1D       		.uleb128 0x1d
 5956 09f0 BD030000 		.4byte	0x3bd
 5957 09f4 00       		.byte	0
 5958 09f5 00       		.byte	0
 5959 09f6 1F       		.uleb128 0x1f
 5960 09f7 08000000 		.4byte	.LVL83
 5961 09fb 35220000 		.4byte	0x2235
 5962 09ff 25       		.uleb128 0x25
 5963 0a00 18000000 		.4byte	.LVL85
 5964 0a04 57220000 		.4byte	0x2257
 5965 0a08 130A0000 		.4byte	0xa13
 5966 0a0c 21       		.uleb128 0x21
 5967 0a0d 01       		.uleb128 0x1
 5968 0a0e 50       		.byte	0x50
 5969 0a0f 02       		.uleb128 0x2
 5970 0a10 76       		.byte	0x76
 5971 0a11 00       		.sleb128 0
 5972 0a12 00       		.byte	0
 5973 0a13 25       		.uleb128 0x25
 5974 0a14 24000000 		.4byte	.LVL86
 5975 0a18 57220000 		.4byte	0x2257
 5976 0a1c 270A0000 		.4byte	0xa27
 5977 0a20 21       		.uleb128 0x21
 5978 0a21 01       		.uleb128 0x1
 5979 0a22 50       		.byte	0x50
 5980 0a23 02       		.uleb128 0x2
 5981 0a24 74       		.byte	0x74
 5982 0a25 18       		.sleb128 24
 5983 0a26 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 208


 5984 0a27 25       		.uleb128 0x25
 5985 0a28 44000000 		.4byte	.LVL87
 5986 0a2c 40220000 		.4byte	0x2240
 5987 0a30 420A0000 		.4byte	0xa42
 5988 0a34 21       		.uleb128 0x21
 5989 0a35 01       		.uleb128 0x1
 5990 0a36 50       		.byte	0x50
 5991 0a37 03       		.uleb128 0x3
 5992 0a38 75       		.byte	0x75
 5993 0a39 E401     		.sleb128 228
 5994 0a3b 21       		.uleb128 0x21
 5995 0a3c 01       		.uleb128 0x1
 5996 0a3d 51       		.byte	0x51
 5997 0a3e 02       		.uleb128 0x2
 5998 0a3f 76       		.byte	0x76
 5999 0a40 00       		.sleb128 0
 6000 0a41 00       		.byte	0
 6001 0a42 25       		.uleb128 0x25
 6002 0a43 62000000 		.4byte	.LVL88
 6003 0a47 B5040000 		.4byte	0x4b5
 6004 0a4b 560A0000 		.4byte	0xa56
 6005 0a4f 21       		.uleb128 0x21
 6006 0a50 01       		.uleb128 0x1
 6007 0a51 50       		.byte	0x50
 6008 0a52 02       		.uleb128 0x2
 6009 0a53 74       		.byte	0x74
 6010 0a54 00       		.sleb128 0
 6011 0a55 00       		.byte	0
 6012 0a56 1F       		.uleb128 0x1f
 6013 0a57 66000000 		.4byte	.LVL89
 6014 0a5b 88040000 		.4byte	0x488
 6015 0a5f 1F       		.uleb128 0x1f
 6016 0a60 6A000000 		.4byte	.LVL90
 6017 0a64 4C220000 		.4byte	0x224c
 6018 0a68 00       		.byte	0
 6019 0a69 27       		.uleb128 0x27
 6020 0a6a 890E0000 		.4byte	.LASF100
 6021 0a6e 01       		.byte	0x1
 6022 0a6f 7C05     		.2byte	0x57c
 6023 0a71 40010000 		.4byte	0x140
 6024 0a75 00000000 		.4byte	.LFB142
 6025 0a79 20000000 		.4byte	.LFE142-.LFB142
 6026 0a7d 01       		.uleb128 0x1
 6027 0a7e 9C       		.byte	0x9c
 6028 0a7f C60A0000 		.4byte	0xac6
 6029 0a83 19       		.uleb128 0x19
 6030 0a84 51070000 		.4byte	.LASF78
 6031 0a88 01       		.byte	0x1
 6032 0a89 7C05     		.2byte	0x57c
 6033 0a8b 43020000 		.4byte	0x243
 6034 0a8f 1C040000 		.4byte	.LLST28
 6035 0a93 1A       		.uleb128 0x1a
 6036 0a94 F1050000 		.4byte	.LASF75
 6037 0a98 01       		.byte	0x1
 6038 0a99 7E05     		.2byte	0x57e
 6039 0a9b AF040000 		.4byte	0x4af
 6040 0a9f 3A040000 		.4byte	.LLST29
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 209


 6041 0aa3 1A       		.uleb128 0x1a
 6042 0aa4 50060000 		.4byte	.LASF101
 6043 0aa8 01       		.byte	0x1
 6044 0aa9 7F05     		.2byte	0x57f
 6045 0aab 40010000 		.4byte	0x140
 6046 0aaf 4D040000 		.4byte	.LLST30
 6047 0ab3 1F       		.uleb128 0x1f
 6048 0ab4 08000000 		.4byte	.LVL94
 6049 0ab8 35220000 		.4byte	0x2235
 6050 0abc 1F       		.uleb128 0x1f
 6051 0abd 16000000 		.4byte	.LVL97
 6052 0ac1 4C220000 		.4byte	0x224c
 6053 0ac5 00       		.byte	0
 6054 0ac6 27       		.uleb128 0x27
 6055 0ac7 810A0000 		.4byte	.LASF102
 6056 0acb 01       		.byte	0x1
 6057 0acc 9205     		.2byte	0x592
 6058 0ace 40010000 		.4byte	0x140
 6059 0ad2 00000000 		.4byte	.LFB143
 6060 0ad6 30000000 		.4byte	.LFE143-.LFB143
 6061 0ada 01       		.uleb128 0x1
 6062 0adb 9C       		.byte	0x9c
 6063 0adc 6B0B0000 		.4byte	0xb6b
 6064 0ae0 19       		.uleb128 0x19
 6065 0ae1 51070000 		.4byte	.LASF78
 6066 0ae5 01       		.byte	0x1
 6067 0ae6 9205     		.2byte	0x592
 6068 0ae8 43020000 		.4byte	0x243
 6069 0aec 6B040000 		.4byte	.LLST31
 6070 0af0 1A       		.uleb128 0x1a
 6071 0af1 F1050000 		.4byte	.LASF75
 6072 0af5 01       		.byte	0x1
 6073 0af6 9405     		.2byte	0x594
 6074 0af8 AF040000 		.4byte	0x4af
 6075 0afc 89040000 		.4byte	.LLST32
 6076 0b00 23       		.uleb128 0x23
 6077 0b01 50060000 		.4byte	.LASF101
 6078 0b05 01       		.byte	0x1
 6079 0b06 9505     		.2byte	0x595
 6080 0b08 40010000 		.4byte	0x140
 6081 0b0c 01       		.uleb128 0x1
 6082 0b0d 50       		.byte	0x50
 6083 0b0e 2B       		.uleb128 0x2b
 6084 0b0f 1C0C0000 		.4byte	.LASF103
 6085 0b13 01       		.byte	0x1
 6086 0b14 9505     		.2byte	0x595
 6087 0b16 40010000 		.4byte	0x140
 6088 0b1a 2A       		.uleb128 0x2a
 6089 0b1b C9030000 		.4byte	0x3c9
 6090 0b1f 08000000 		.4byte	.LBB100
 6091 0b23 14000000 		.4byte	.LBE100-.LBB100
 6092 0b27 01       		.byte	0x1
 6093 0b28 A905     		.2byte	0x5a9
 6094 0b2a 430B0000 		.4byte	0xb43
 6095 0b2e 1C       		.uleb128 0x1c
 6096 0b2f 08000000 		.4byte	.LBB101
 6097 0b33 14000000 		.4byte	.LBE101-.LBB101
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 210


 6098 0b37 1D       		.uleb128 0x1d
 6099 0b38 D9030000 		.4byte	0x3d9
 6100 0b3c 1D       		.uleb128 0x1d
 6101 0b3d E4030000 		.4byte	0x3e4
 6102 0b41 00       		.byte	0
 6103 0b42 00       		.byte	0
 6104 0b43 2A       		.uleb128 0x2a
 6105 0b44 F0030000 		.4byte	0x3f0
 6106 0b48 26000000 		.4byte	.LBB102
 6107 0b4c 04000000 		.4byte	.LBE102-.LBB102
 6108 0b50 01       		.byte	0x1
 6109 0b51 B005     		.2byte	0x5b0
 6110 0b53 610B0000 		.4byte	0xb61
 6111 0b57 2C       		.uleb128 0x2c
 6112 0b58 FC030000 		.4byte	0x3fc
 6113 0b5c 9C040000 		.4byte	.LLST33
 6114 0b60 00       		.byte	0
 6115 0b61 1F       		.uleb128 0x1f
 6116 0b62 08000000 		.4byte	.LVL100
 6117 0b66 7A220000 		.4byte	0x227a
 6118 0b6a 00       		.byte	0
 6119 0b6b 29       		.uleb128 0x29
 6120 0b6c A6010000 		.4byte	.LASF105
 6121 0b70 01       		.byte	0x1
 6122 0b71 BA05     		.2byte	0x5ba
 6123 0b73 00000000 		.4byte	.LFB144
 6124 0b77 DC000000 		.4byte	.LFE144-.LFB144
 6125 0b7b 01       		.uleb128 0x1
 6126 0b7c 9C       		.byte	0x9c
 6127 0b7d 400C0000 		.4byte	0xc40
 6128 0b81 19       		.uleb128 0x19
 6129 0b82 51070000 		.4byte	.LASF78
 6130 0b86 01       		.byte	0x1
 6131 0b87 BA05     		.2byte	0x5ba
 6132 0b89 43020000 		.4byte	0x243
 6133 0b8d AF040000 		.4byte	.LLST34
 6134 0b91 19       		.uleb128 0x19
 6135 0b92 70070000 		.4byte	.LASF106
 6136 0b96 01       		.byte	0x1
 6137 0b97 BA05     		.2byte	0x5ba
 6138 0b99 40010000 		.4byte	0x140
 6139 0b9d CD040000 		.4byte	.LLST35
 6140 0ba1 1A       		.uleb128 0x1a
 6141 0ba2 F1050000 		.4byte	.LASF75
 6142 0ba6 01       		.byte	0x1
 6143 0ba7 BC05     		.2byte	0x5bc
 6144 0ba9 AF040000 		.4byte	0x4af
 6145 0bad F7040000 		.4byte	.LLST36
 6146 0bb1 1A       		.uleb128 0x1a
 6147 0bb2 DB090000 		.4byte	.LASF107
 6148 0bb6 01       		.byte	0x1
 6149 0bb7 BD05     		.2byte	0x5bd
 6150 0bb9 40010000 		.4byte	0x140
 6151 0bbd 0A050000 		.4byte	.LLST37
 6152 0bc1 1A       		.uleb128 0x1a
 6153 0bc2 11020000 		.4byte	.LASF108
 6154 0bc6 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 211


 6155 0bc7 BD05     		.2byte	0x5bd
 6156 0bc9 40010000 		.4byte	0x140
 6157 0bcd 1D050000 		.4byte	.LLST38
 6158 0bd1 1A       		.uleb128 0x1a
 6159 0bd2 F7050000 		.4byte	.LASF109
 6160 0bd6 01       		.byte	0x1
 6161 0bd7 BE05     		.2byte	0x5be
 6162 0bd9 35010000 		.4byte	0x135
 6163 0bdd 30050000 		.4byte	.LLST39
 6164 0be1 2A       		.uleb128 0x2a
 6165 0be2 B1030000 		.4byte	0x3b1
 6166 0be6 04000000 		.4byte	.LBB104
 6167 0bea 12000000 		.4byte	.LBE104-.LBB104
 6168 0bee 01       		.byte	0x1
 6169 0bef C005     		.2byte	0x5c0
 6170 0bf1 050C0000 		.4byte	0xc05
 6171 0bf5 1C       		.uleb128 0x1c
 6172 0bf6 04000000 		.4byte	.LBB105
 6173 0bfa 12000000 		.4byte	.LBE105-.LBB105
 6174 0bfe 1D       		.uleb128 0x1d
 6175 0bff BD030000 		.4byte	0x3bd
 6176 0c03 00       		.byte	0
 6177 0c04 00       		.byte	0
 6178 0c05 1F       		.uleb128 0x1f
 6179 0c06 26000000 		.4byte	.LVL108
 6180 0c0a 35220000 		.4byte	0x2235
 6181 0c0e 25       		.uleb128 0x25
 6182 0c0f 96000000 		.4byte	.LVL114
 6183 0c13 57220000 		.4byte	0x2257
 6184 0c17 220C0000 		.4byte	0xc22
 6185 0c1b 21       		.uleb128 0x21
 6186 0c1c 01       		.uleb128 0x1
 6187 0c1d 50       		.byte	0x50
 6188 0c1e 02       		.uleb128 0x2
 6189 0c1f 75       		.byte	0x75
 6190 0c20 00       		.sleb128 0
 6191 0c21 00       		.byte	0
 6192 0c22 25       		.uleb128 0x25
 6193 0c23 B8000000 		.4byte	.LVL115
 6194 0c27 40220000 		.4byte	0x2240
 6195 0c2b 360C0000 		.4byte	0xc36
 6196 0c2f 21       		.uleb128 0x21
 6197 0c30 01       		.uleb128 0x1
 6198 0c31 51       		.byte	0x51
 6199 0c32 02       		.uleb128 0x2
 6200 0c33 75       		.byte	0x75
 6201 0c34 00       		.sleb128 0
 6202 0c35 00       		.byte	0
 6203 0c36 1F       		.uleb128 0x1f
 6204 0c37 CE000000 		.4byte	.LVL117
 6205 0c3b 4C220000 		.4byte	0x224c
 6206 0c3f 00       		.byte	0
 6207 0c40 29       		.uleb128 0x29
 6208 0c41 34060000 		.4byte	.LASF110
 6209 0c45 01       		.byte	0x1
 6210 0c46 F106     		.2byte	0x6f1
 6211 0c48 00000000 		.4byte	.LFB147
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 212


 6212 0c4c 88000000 		.4byte	.LFE147-.LFB147
 6213 0c50 01       		.uleb128 0x1
 6214 0c51 9C       		.byte	0x9c
 6215 0c52 E90C0000 		.4byte	0xce9
 6216 0c56 19       		.uleb128 0x19
 6217 0c57 410A0000 		.4byte	.LASF111
 6218 0c5b 01       		.byte	0x1
 6219 0c5c F106     		.2byte	0x6f1
 6220 0c5e 43020000 		.4byte	0x243
 6221 0c62 4F050000 		.4byte	.LLST40
 6222 0c66 1A       		.uleb128 0x1a
 6223 0c67 F1050000 		.4byte	.LASF75
 6224 0c6b 01       		.byte	0x1
 6225 0c6c F306     		.2byte	0x6f3
 6226 0c6e E90C0000 		.4byte	0xce9
 6227 0c72 7B050000 		.4byte	.LLST41
 6228 0c76 2A       		.uleb128 0x2a
 6229 0c77 B1030000 		.4byte	0x3b1
 6230 0c7b 02000000 		.4byte	.LBB106
 6231 0c7f 12000000 		.4byte	.LBE106-.LBB106
 6232 0c83 01       		.byte	0x1
 6233 0c84 F606     		.2byte	0x6f6
 6234 0c86 9A0C0000 		.4byte	0xc9a
 6235 0c8a 1C       		.uleb128 0x1c
 6236 0c8b 02000000 		.4byte	.LBB107
 6237 0c8f 12000000 		.4byte	.LBE107-.LBB107
 6238 0c93 1D       		.uleb128 0x1d
 6239 0c94 BD030000 		.4byte	0x3bd
 6240 0c98 00       		.byte	0
 6241 0c99 00       		.byte	0
 6242 0c9a 1F       		.uleb128 0x1f
 6243 0c9b 28000000 		.4byte	.LVL121
 6244 0c9f 35220000 		.4byte	0x2235
 6245 0ca3 25       		.uleb128 0x25
 6246 0ca4 2E000000 		.4byte	.LVL122
 6247 0ca8 08040000 		.4byte	0x408
 6248 0cac B70C0000 		.4byte	0xcb7
 6249 0cb0 21       		.uleb128 0x21
 6250 0cb1 01       		.uleb128 0x1
 6251 0cb2 50       		.byte	0x50
 6252 0cb3 02       		.uleb128 0x2
 6253 0cb4 74       		.byte	0x74
 6254 0cb5 00       		.sleb128 0
 6255 0cb6 00       		.byte	0
 6256 0cb7 25       		.uleb128 0x25
 6257 0cb8 38000000 		.4byte	.LVL123
 6258 0cbc 57220000 		.4byte	0x2257
 6259 0cc0 CB0C0000 		.4byte	0xccb
 6260 0cc4 21       		.uleb128 0x21
 6261 0cc5 01       		.uleb128 0x1
 6262 0cc6 50       		.byte	0x50
 6263 0cc7 02       		.uleb128 0x2
 6264 0cc8 76       		.byte	0x76
 6265 0cc9 00       		.sleb128 0
 6266 0cca 00       		.byte	0
 6267 0ccb 25       		.uleb128 0x25
 6268 0ccc 5E000000 		.4byte	.LVL124
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 213


 6269 0cd0 40220000 		.4byte	0x2240
 6270 0cd4 DF0C0000 		.4byte	0xcdf
 6271 0cd8 21       		.uleb128 0x21
 6272 0cd9 01       		.uleb128 0x1
 6273 0cda 51       		.byte	0x51
 6274 0cdb 02       		.uleb128 0x2
 6275 0cdc 76       		.byte	0x76
 6276 0cdd 00       		.sleb128 0
 6277 0cde 00       		.byte	0
 6278 0cdf 1F       		.uleb128 0x1f
 6279 0ce0 7E000000 		.4byte	.LVL125
 6280 0ce4 4C220000 		.4byte	0x224c
 6281 0ce8 00       		.byte	0
 6282 0ce9 07       		.uleb128 0x7
 6283 0cea AF040000 		.4byte	0x4af
 6284 0cee 27       		.uleb128 0x27
 6285 0cef 9E040000 		.4byte	.LASF112
 6286 0cf3 01       		.byte	0x1
 6287 0cf4 2707     		.2byte	0x727
 6288 0cf6 35010000 		.4byte	0x135
 6289 0cfa 00000000 		.4byte	.LFB148
 6290 0cfe A4000000 		.4byte	.LFE148-.LFB148
 6291 0d02 01       		.uleb128 0x1
 6292 0d03 9C       		.byte	0x9c
 6293 0d04 0E0E0000 		.4byte	0xe0e
 6294 0d08 19       		.uleb128 0x19
 6295 0d09 410A0000 		.4byte	.LASF111
 6296 0d0d 01       		.byte	0x1
 6297 0d0e 2707     		.2byte	0x727
 6298 0d10 43020000 		.4byte	0x243
 6299 0d14 A7050000 		.4byte	.LLST42
 6300 0d18 1A       		.uleb128 0x1a
 6301 0d19 F7050000 		.4byte	.LASF109
 6302 0d1d 01       		.byte	0x1
 6303 0d1e 2907     		.2byte	0x729
 6304 0d20 35010000 		.4byte	0x135
 6305 0d24 D3050000 		.4byte	.LLST43
 6306 0d28 1A       		.uleb128 0x1a
 6307 0d29 F1050000 		.4byte	.LASF75
 6308 0d2d 01       		.byte	0x1
 6309 0d2e 2A07     		.2byte	0x72a
 6310 0d30 E90C0000 		.4byte	0xce9
 6311 0d34 14060000 		.4byte	.LLST44
 6312 0d38 2B       		.uleb128 0x2b
 6313 0d39 F50A0000 		.4byte	.LASF113
 6314 0d3d 01       		.byte	0x1
 6315 0d3e 2B07     		.2byte	0x72b
 6316 0d40 40010000 		.4byte	0x140
 6317 0d44 2A       		.uleb128 0x2a
 6318 0d45 B1030000 		.4byte	0x3b1
 6319 0d49 04000000 		.4byte	.LBB108
 6320 0d4d 14000000 		.4byte	.LBE108-.LBB108
 6321 0d51 01       		.byte	0x1
 6322 0d52 2D07     		.2byte	0x72d
 6323 0d54 680D0000 		.4byte	0xd68
 6324 0d58 1C       		.uleb128 0x1c
 6325 0d59 04000000 		.4byte	.LBB109
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 214


 6326 0d5d 14000000 		.4byte	.LBE109-.LBB109
 6327 0d61 1D       		.uleb128 0x1d
 6328 0d62 BD030000 		.4byte	0x3bd
 6329 0d66 00       		.byte	0
 6330 0d67 00       		.byte	0
 6331 0d68 2A       		.uleb128 0x2a
 6332 0d69 C9030000 		.4byte	0x3c9
 6333 0d6d 1C000000 		.4byte	.LBB110
 6334 0d71 14000000 		.4byte	.LBE110-.LBB110
 6335 0d75 01       		.byte	0x1
 6336 0d76 4107     		.2byte	0x741
 6337 0d78 910D0000 		.4byte	0xd91
 6338 0d7c 1C       		.uleb128 0x1c
 6339 0d7d 1C000000 		.4byte	.LBB111
 6340 0d81 14000000 		.4byte	.LBE111-.LBB111
 6341 0d85 1D       		.uleb128 0x1d
 6342 0d86 D9030000 		.4byte	0x3d9
 6343 0d8a 1D       		.uleb128 0x1d
 6344 0d8b E4030000 		.4byte	0x3e4
 6345 0d8f 00       		.byte	0
 6346 0d90 00       		.byte	0
 6347 0d91 2A       		.uleb128 0x2a
 6348 0d92 F0030000 		.4byte	0x3f0
 6349 0d96 90000000 		.4byte	.LBB112
 6350 0d9a 04000000 		.4byte	.LBE112-.LBB112
 6351 0d9e 01       		.byte	0x1
 6352 0d9f 6507     		.2byte	0x765
 6353 0da1 AF0D0000 		.4byte	0xdaf
 6354 0da5 2C       		.uleb128 0x2c
 6355 0da6 FC030000 		.4byte	0x3fc
 6356 0daa 40060000 		.4byte	.LLST45
 6357 0dae 00       		.byte	0
 6358 0daf 1F       		.uleb128 0x1f
 6359 0db0 1C000000 		.4byte	.LVL130
 6360 0db4 7A220000 		.4byte	0x227a
 6361 0db8 25       		.uleb128 0x25
 6362 0db9 36000000 		.4byte	.LVL131
 6363 0dbd 08040000 		.4byte	0x408
 6364 0dc1 CC0D0000 		.4byte	0xdcc
 6365 0dc5 21       		.uleb128 0x21
 6366 0dc6 01       		.uleb128 0x1
 6367 0dc7 50       		.byte	0x50
 6368 0dc8 02       		.uleb128 0x2
 6369 0dc9 74       		.byte	0x74
 6370 0dca 00       		.sleb128 0
 6371 0dcb 00       		.byte	0
 6372 0dcc 25       		.uleb128 0x25
 6373 0dcd 5C000000 		.4byte	.LVL133
 6374 0dd1 57220000 		.4byte	0x2257
 6375 0dd5 E00D0000 		.4byte	0xde0
 6376 0dd9 21       		.uleb128 0x21
 6377 0dda 01       		.uleb128 0x1
 6378 0ddb 50       		.byte	0x50
 6379 0ddc 02       		.uleb128 0x2
 6380 0ddd 76       		.byte	0x76
 6381 0dde 00       		.sleb128 0
 6382 0ddf 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 215


 6383 0de0 25       		.uleb128 0x25
 6384 0de1 7E000000 		.4byte	.LVL134
 6385 0de5 40220000 		.4byte	0x2240
 6386 0de9 F40D0000 		.4byte	0xdf4
 6387 0ded 21       		.uleb128 0x21
 6388 0dee 01       		.uleb128 0x1
 6389 0def 51       		.byte	0x51
 6390 0df0 02       		.uleb128 0x2
 6391 0df1 76       		.byte	0x76
 6392 0df2 00       		.sleb128 0
 6393 0df3 00       		.byte	0
 6394 0df4 20       		.uleb128 0x20
 6395 0df5 8A000000 		.4byte	.LVL136
 6396 0df9 40220000 		.4byte	0x2240
 6397 0dfd 21       		.uleb128 0x21
 6398 0dfe 01       		.uleb128 0x1
 6399 0dff 50       		.byte	0x50
 6400 0e00 05       		.uleb128 0x5
 6401 0e01 03       		.byte	0x3
 6402 0e02 14000000 		.4byte	.LANCHOR0+20
 6403 0e06 21       		.uleb128 0x21
 6404 0e07 01       		.uleb128 0x1
 6405 0e08 51       		.byte	0x51
 6406 0e09 02       		.uleb128 0x2
 6407 0e0a 74       		.byte	0x74
 6408 0e0b 18       		.sleb128 24
 6409 0e0c 00       		.byte	0
 6410 0e0d 00       		.byte	0
 6411 0e0e 29       		.uleb128 0x29
 6412 0e0f 38040000 		.4byte	.LASF114
 6413 0e13 01       		.byte	0x1
 6414 0e14 6D07     		.2byte	0x76d
 6415 0e16 00000000 		.4byte	.LFB149
 6416 0e1a 7C000000 		.4byte	.LFE149-.LFB149
 6417 0e1e 01       		.uleb128 0x1
 6418 0e1f 9C       		.byte	0x9c
 6419 0e20 CA0E0000 		.4byte	0xeca
 6420 0e24 1A       		.uleb128 0x1a
 6421 0e25 B9040000 		.4byte	.LASF74
 6422 0e29 01       		.byte	0x1
 6423 0e2a 6F07     		.2byte	0x76f
 6424 0e2c 35010000 		.4byte	0x135
 6425 0e30 53060000 		.4byte	.LLST46
 6426 0e34 2A       		.uleb128 0x2a
 6427 0e35 B1030000 		.4byte	0x3b1
 6428 0e39 22000000 		.4byte	.LBB114
 6429 0e3d 10000000 		.4byte	.LBE114-.LBB114
 6430 0e41 01       		.byte	0x1
 6431 0e42 B507     		.2byte	0x7b5
 6432 0e44 580E0000 		.4byte	0xe58
 6433 0e48 1C       		.uleb128 0x1c
 6434 0e49 22000000 		.4byte	.LBB115
 6435 0e4d 10000000 		.4byte	.LBE115-.LBB115
 6436 0e51 1D       		.uleb128 0x1d
 6437 0e52 BD030000 		.4byte	0x3bd
 6438 0e56 00       		.byte	0
 6439 0e57 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 216


 6440 0e58 2A       		.uleb128 0x2a
 6441 0e59 B1030000 		.4byte	0x3b1
 6442 0e5d 52000000 		.4byte	.LBB116
 6443 0e61 12000000 		.4byte	.LBE116-.LBB116
 6444 0e65 01       		.byte	0x1
 6445 0e66 DC07     		.2byte	0x7dc
 6446 0e68 7C0E0000 		.4byte	0xe7c
 6447 0e6c 1C       		.uleb128 0x1c
 6448 0e6d 52000000 		.4byte	.LBB117
 6449 0e71 12000000 		.4byte	.LBE117-.LBB117
 6450 0e75 1D       		.uleb128 0x1d
 6451 0e76 BD030000 		.4byte	0x3bd
 6452 0e7a 00       		.byte	0
 6453 0e7b 00       		.byte	0
 6454 0e7c 25       		.uleb128 0x25
 6455 0e7d 16000000 		.4byte	.LVL140
 6456 0e81 53080000 		.4byte	0x853
 6457 0e85 B70E0000 		.4byte	0xeb7
 6458 0e89 21       		.uleb128 0x21
 6459 0e8a 01       		.uleb128 0x1
 6460 0e8b 50       		.byte	0x50
 6461 0e8c 05       		.uleb128 0x5
 6462 0e8d 03       		.byte	0x3
 6463 0e8e 00000000 		.4byte	prvIdleTask
 6464 0e92 21       		.uleb128 0x21
 6465 0e93 01       		.uleb128 0x1
 6466 0e94 51       		.byte	0x51
 6467 0e95 05       		.uleb128 0x5
 6468 0e96 03       		.byte	0x3
 6469 0e97 00000000 		.4byte	.LC0
 6470 0e9b 21       		.uleb128 0x21
 6471 0e9c 01       		.uleb128 0x1
 6472 0e9d 52       		.byte	0x52
 6473 0e9e 02       		.uleb128 0x2
 6474 0e9f 08       		.byte	0x8
 6475 0ea0 80       		.byte	0x80
 6476 0ea1 21       		.uleb128 0x21
 6477 0ea2 01       		.uleb128 0x1
 6478 0ea3 53       		.byte	0x53
 6479 0ea4 01       		.uleb128 0x1
 6480 0ea5 30       		.byte	0x30
 6481 0ea6 21       		.uleb128 0x21
 6482 0ea7 02       		.uleb128 0x2
 6483 0ea8 7D       		.byte	0x7d
 6484 0ea9 00       		.sleb128 0
 6485 0eaa 01       		.uleb128 0x1
 6486 0eab 30       		.byte	0x30
 6487 0eac 21       		.uleb128 0x21
 6488 0ead 02       		.uleb128 0x2
 6489 0eae 7D       		.byte	0x7d
 6490 0eaf 04       		.sleb128 4
 6491 0eb0 05       		.uleb128 0x5
 6492 0eb1 03       		.byte	0x3
 6493 0eb2 1C010000 		.4byte	.LANCHOR0+284
 6494 0eb6 00       		.byte	0
 6495 0eb7 1F       		.uleb128 0x1f
 6496 0eb8 1E000000 		.4byte	.LVL141
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 217


 6497 0ebc 85220000 		.4byte	0x2285
 6498 0ec0 1F       		.uleb128 0x1f
 6499 0ec1 4A000000 		.4byte	.LVL142
 6500 0ec5 91220000 		.4byte	0x2291
 6501 0ec9 00       		.byte	0
 6502 0eca 29       		.uleb128 0x29
 6503 0ecb 200A0000 		.4byte	.LASF115
 6504 0ecf 01       		.byte	0x1
 6505 0ed0 E507     		.2byte	0x7e5
 6506 0ed2 00000000 		.4byte	.LFB150
 6507 0ed6 24000000 		.4byte	.LFE150-.LFB150
 6508 0eda 01       		.uleb128 0x1
 6509 0edb 9C       		.byte	0x9c
 6510 0edc 0E0F0000 		.4byte	0xf0e
 6511 0ee0 2A       		.uleb128 0x2a
 6512 0ee1 B1030000 		.4byte	0x3b1
 6513 0ee5 02000000 		.4byte	.LBB118
 6514 0ee9 10000000 		.4byte	.LBE118-.LBB118
 6515 0eed 01       		.byte	0x1
 6516 0eee EA07     		.2byte	0x7ea
 6517 0ef0 040F0000 		.4byte	0xf04
 6518 0ef4 1C       		.uleb128 0x1c
 6519 0ef5 02000000 		.4byte	.LBB119
 6520 0ef9 10000000 		.4byte	.LBE119-.LBB119
 6521 0efd 1D       		.uleb128 0x1d
 6522 0efe BD030000 		.4byte	0x3bd
 6523 0f02 00       		.byte	0
 6524 0f03 00       		.byte	0
 6525 0f04 1F       		.uleb128 0x1f
 6526 0f05 1E000000 		.4byte	.LVL146
 6527 0f09 9C220000 		.4byte	0x229c
 6528 0f0d 00       		.byte	0
 6529 0f0e 2D       		.uleb128 0x2d
 6530 0f0f 4E0B0000 		.4byte	.LASF155
 6531 0f13 01       		.byte	0x1
 6532 0f14 F007     		.2byte	0x7f0
 6533 0f16 00000000 		.4byte	.LFB151
 6534 0f1a 14000000 		.4byte	.LFE151-.LFB151
 6535 0f1e 01       		.uleb128 0x1
 6536 0f1f 9C       		.byte	0x9c
 6537 0f20 27       		.uleb128 0x27
 6538 0f21 E3010000 		.4byte	.LASF116
 6539 0f25 01       		.byte	0x1
 6540 0f26 A708     		.2byte	0x8a7
 6541 0f28 4B010000 		.4byte	0x14b
 6542 0f2c 00000000 		.4byte	.LFB153
 6543 0f30 0C000000 		.4byte	.LFE153-.LFB153
 6544 0f34 01       		.uleb128 0x1
 6545 0f35 9C       		.byte	0x9c
 6546 0f36 490F0000 		.4byte	0xf49
 6547 0f3a 23       		.uleb128 0x23
 6548 0f3b B60D0000 		.4byte	.LASF117
 6549 0f3f 01       		.byte	0x1
 6550 0f40 A908     		.2byte	0x8a9
 6551 0f42 4B010000 		.4byte	0x14b
 6552 0f46 01       		.uleb128 0x1
 6553 0f47 50       		.byte	0x50
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 218


 6554 0f48 00       		.byte	0
 6555 0f49 27       		.uleb128 0x27
 6556 0f4a 13030000 		.4byte	.LASF118
 6557 0f4e 01       		.byte	0x1
 6558 0f4f B608     		.2byte	0x8b6
 6559 0f51 4B010000 		.4byte	0x14b
 6560 0f55 00000000 		.4byte	.LFB154
 6561 0f59 14000000 		.4byte	.LFE154-.LFB154
 6562 0f5d 01       		.uleb128 0x1
 6563 0f5e 9C       		.byte	0x9c
 6564 0f5f 880F0000 		.4byte	0xf88
 6565 0f63 23       		.uleb128 0x23
 6566 0f64 B9040000 		.4byte	.LASF74
 6567 0f68 01       		.byte	0x1
 6568 0f69 B808     		.2byte	0x8b8
 6569 0f6b 4B010000 		.4byte	0x14b
 6570 0f6f 01       		.uleb128 0x1
 6571 0f70 50       		.byte	0x50
 6572 0f71 2E       		.uleb128 0x2e
 6573 0f72 F50A0000 		.4byte	.LASF113
 6574 0f76 01       		.byte	0x1
 6575 0f77 B908     		.2byte	0x8b9
 6576 0f79 40010000 		.4byte	0x140
 6577 0f7d 00       		.byte	0
 6578 0f7e 1F       		.uleb128 0x1f
 6579 0f7f 06000000 		.4byte	.LVL148
 6580 0f83 7A220000 		.4byte	0x227a
 6581 0f87 00       		.byte	0
 6582 0f88 2F       		.uleb128 0x2f
 6583 0f89 B60C0000 		.4byte	.LASF226
 6584 0f8d 01       		.byte	0x1
 6585 0f8e D508     		.2byte	0x8d5
 6586 0f90 40010000 		.4byte	0x140
 6587 0f94 00000000 		.4byte	.LFB155
 6588 0f98 0C000000 		.4byte	.LFE155-.LFB155
 6589 0f9c 01       		.uleb128 0x1
 6590 0f9d 9C       		.byte	0x9c
 6591 0f9e 27       		.uleb128 0x27
 6592 0f9f 8E0B0000 		.4byte	.LASF119
 6593 0fa3 01       		.byte	0x1
 6594 0fa4 DD08     		.2byte	0x8dd
 6595 0fa6 B2000000 		.4byte	0xb2
 6596 0faa 00000000 		.4byte	.LFB156
 6597 0fae 28000000 		.4byte	.LFE156-.LFB156
 6598 0fb2 01       		.uleb128 0x1
 6599 0fb3 9C       		.byte	0x9c
 6600 0fb4 F90F0000 		.4byte	0xff9
 6601 0fb8 19       		.uleb128 0x19
 6602 0fb9 08040000 		.4byte	.LASF120
 6603 0fbd 01       		.byte	0x1
 6604 0fbe DD08     		.2byte	0x8dd
 6605 0fc0 43020000 		.4byte	0x243
 6606 0fc4 7C060000 		.4byte	.LLST47
 6607 0fc8 1A       		.uleb128 0x1a
 6608 0fc9 F1050000 		.4byte	.LASF75
 6609 0fcd 01       		.byte	0x1
 6610 0fce DF08     		.2byte	0x8df
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 219


 6611 0fd0 AF040000 		.4byte	0x4af
 6612 0fd4 8F060000 		.4byte	.LLST48
 6613 0fd8 1B       		.uleb128 0x1b
 6614 0fd9 B1030000 		.4byte	0x3b1
 6615 0fdd 0C000000 		.4byte	.LBB120
 6616 0fe1 12000000 		.4byte	.LBE120-.LBB120
 6617 0fe5 01       		.byte	0x1
 6618 0fe6 E408     		.2byte	0x8e4
 6619 0fe8 1C       		.uleb128 0x1c
 6620 0fe9 0C000000 		.4byte	.LBB121
 6621 0fed 12000000 		.4byte	.LBE121-.LBB121
 6622 0ff1 1D       		.uleb128 0x1d
 6623 0ff2 BD030000 		.4byte	0x3bd
 6624 0ff6 00       		.byte	0
 6625 0ff7 00       		.byte	0
 6626 0ff8 00       		.byte	0
 6627 0ff9 27       		.uleb128 0x27
 6628 0ffa 6F030000 		.4byte	.LASF121
 6629 0ffe 01       		.byte	0x1
 6630 0fff 1D0A     		.2byte	0xa1d
 6631 1001 35010000 		.4byte	0x135
 6632 1005 00000000 		.4byte	.LFB157
 6633 1009 18010000 		.4byte	.LFE157-.LFB157
 6634 100d 01       		.uleb128 0x1
 6635 100e 9C       		.byte	0x9c
 6636 100f DD100000 		.4byte	0x10dd
 6637 1013 1A       		.uleb128 0x1a
 6638 1014 F1050000 		.4byte	.LASF75
 6639 1018 01       		.byte	0x1
 6640 1019 1F0A     		.2byte	0xa1f
 6641 101b AF040000 		.4byte	0x4af
 6642 101f AD060000 		.4byte	.LLST49
 6643 1023 1A       		.uleb128 0x1a
 6644 1024 C70B0000 		.4byte	.LASF28
 6645 1028 01       		.byte	0x1
 6646 1029 200A     		.2byte	0xa20
 6647 102b 4B010000 		.4byte	0x14b
 6648 102f CB060000 		.4byte	.LLST50
 6649 1033 1A       		.uleb128 0x1a
 6650 1034 40060000 		.4byte	.LASF122
 6651 1038 01       		.byte	0x1
 6652 1039 210A     		.2byte	0xa21
 6653 103b 35010000 		.4byte	0x135
 6654 103f DE060000 		.4byte	.LLST51
 6655 1043 30       		.uleb128 0x30
 6656 1044 00000000 		.4byte	.Ldebug_ranges0+0
 6657 1048 1A       		.uleb128 0x1a
 6658 1049 2B090000 		.4byte	.LASF96
 6659 104d 01       		.byte	0x1
 6660 104e 2B0A     		.2byte	0xa2b
 6661 1050 4E080000 		.4byte	0x84e
 6662 1054 36070000 		.4byte	.LLST52
 6663 1058 28       		.uleb128 0x28
 6664 1059 1C000000 		.4byte	.LBB123
 6665 105d 34000000 		.4byte	.LBE123-.LBB123
 6666 1061 A3100000 		.4byte	0x10a3
 6667 1065 1A       		.uleb128 0x1a
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 220


 6668 1066 7B0C0000 		.4byte	.LASF123
 6669 106a 01       		.byte	0x1
 6670 106b 330A     		.2byte	0xa33
 6671 106d DD100000 		.4byte	0x10dd
 6672 1071 54070000 		.4byte	.LLST53
 6673 1075 2A       		.uleb128 0x2a
 6674 1076 B1030000 		.4byte	0x3b1
 6675 107a 22000000 		.4byte	.LBB124
 6676 107e 12000000 		.4byte	.LBE124-.LBB124
 6677 1082 01       		.byte	0x1
 6678 1083 330A     		.2byte	0xa33
 6679 1085 99100000 		.4byte	0x1099
 6680 1089 1C       		.uleb128 0x1c
 6681 108a 22000000 		.4byte	.LBB125
 6682 108e 12000000 		.4byte	.LBE125-.LBB125
 6683 1092 1D       		.uleb128 0x1d
 6684 1093 BD030000 		.4byte	0x3bd
 6685 1097 00       		.byte	0
 6686 1098 00       		.byte	0
 6687 1099 1F       		.uleb128 0x1f
 6688 109a 50000000 		.4byte	.LVL160
 6689 109e 88040000 		.4byte	0x488
 6690 10a2 00       		.byte	0
 6691 10a3 25       		.uleb128 0x25
 6692 10a4 9A000000 		.4byte	.LVL167
 6693 10a8 57220000 		.4byte	0x2257
 6694 10ac B7100000 		.4byte	0x10b7
 6695 10b0 21       		.uleb128 0x21
 6696 10b1 01       		.uleb128 0x1
 6697 10b2 50       		.byte	0x50
 6698 10b3 02       		.uleb128 0x2
 6699 10b4 78       		.byte	0x78
 6700 10b5 00       		.sleb128 0
 6701 10b6 00       		.byte	0
 6702 10b7 25       		.uleb128 0x25
 6703 10b8 A6000000 		.4byte	.LVL168
 6704 10bc 57220000 		.4byte	0x2257
 6705 10c0 CB100000 		.4byte	0x10cb
 6706 10c4 21       		.uleb128 0x21
 6707 10c5 01       		.uleb128 0x1
 6708 10c6 50       		.byte	0x50
 6709 10c7 02       		.uleb128 0x2
 6710 10c8 76       		.byte	0x76
 6711 10c9 18       		.sleb128 24
 6712 10ca 00       		.byte	0
 6713 10cb 20       		.uleb128 0x20
 6714 10cc CC000000 		.4byte	.LVL169
 6715 10d0 40220000 		.4byte	0x2240
 6716 10d4 21       		.uleb128 0x21
 6717 10d5 01       		.uleb128 0x1
 6718 10d6 51       		.byte	0x51
 6719 10d7 02       		.uleb128 0x2
 6720 10d8 78       		.byte	0x78
 6721 10d9 00       		.sleb128 0
 6722 10da 00       		.byte	0
 6723 10db 00       		.byte	0
 6724 10dc 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 221


 6725 10dd 06       		.uleb128 0x6
 6726 10de 04       		.byte	0x4
 6727 10df 38020000 		.4byte	0x238
 6728 10e3 27       		.uleb128 0x27
 6729 10e4 4F0A0000 		.4byte	.LASF124
 6730 10e8 01       		.byte	0x1
 6731 10e9 3908     		.2byte	0x839
 6732 10eb 35010000 		.4byte	0x135
 6733 10ef 00000000 		.4byte	.LFB152
 6734 10f3 F0000000 		.4byte	.LFE152-.LFB152
 6735 10f7 01       		.uleb128 0x1
 6736 10f8 9C       		.byte	0x9c
 6737 10f9 C0110000 		.4byte	0x11c0
 6738 10fd 1A       		.uleb128 0x1a
 6739 10fe F1050000 		.4byte	.LASF75
 6740 1102 01       		.byte	0x1
 6741 1103 3B08     		.2byte	0x83b
 6742 1105 AF040000 		.4byte	0x4af
 6743 1109 76070000 		.4byte	.LLST54
 6744 110d 1A       		.uleb128 0x1a
 6745 110e 6E010000 		.4byte	.LASF125
 6746 1112 01       		.byte	0x1
 6747 1113 3C08     		.2byte	0x83c
 6748 1115 35010000 		.4byte	0x135
 6749 1119 B8070000 		.4byte	.LLST55
 6750 111d 2A       		.uleb128 0x2a
 6751 111e B1030000 		.4byte	0x3b1
 6752 1122 08000000 		.4byte	.LBB128
 6753 1126 12000000 		.4byte	.LBE128-.LBB128
 6754 112a 01       		.byte	0x1
 6755 112b 4008     		.2byte	0x840
 6756 112d 41110000 		.4byte	0x1141
 6757 1131 1C       		.uleb128 0x1c
 6758 1132 08000000 		.4byte	.LBB129
 6759 1136 12000000 		.4byte	.LBE129-.LBB129
 6760 113a 1D       		.uleb128 0x1d
 6761 113b BD030000 		.4byte	0x3bd
 6762 113f 00       		.byte	0
 6763 1140 00       		.byte	0
 6764 1141 28       		.uleb128 0x28
 6765 1142 9C000000 		.4byte	.LBB130
 6766 1146 22000000 		.4byte	.LBE130-.LBB130
 6767 114a 68110000 		.4byte	0x1168
 6768 114e 1A       		.uleb128 0x1a
 6769 114f 320A0000 		.4byte	.LASF126
 6770 1153 01       		.byte	0x1
 6771 1154 7408     		.2byte	0x874
 6772 1156 40010000 		.4byte	0x140
 6773 115a FA070000 		.4byte	.LLST56
 6774 115e 1F       		.uleb128 0x1f
 6775 115f A8000000 		.4byte	.LVL188
 6776 1163 F90F0000 		.4byte	0xff9
 6777 1167 00       		.byte	0
 6778 1168 1F       		.uleb128 0x1f
 6779 1169 20000000 		.4byte	.LVL178
 6780 116d 35220000 		.4byte	0x2235
 6781 1171 25       		.uleb128 0x25
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 222


 6782 1172 4E000000 		.4byte	.LVL181
 6783 1176 57220000 		.4byte	0x2257
 6784 117a 85110000 		.4byte	0x1185
 6785 117e 21       		.uleb128 0x21
 6786 117f 01       		.uleb128 0x1
 6787 1180 50       		.byte	0x50
 6788 1181 02       		.uleb128 0x2
 6789 1182 74       		.byte	0x74
 6790 1183 18       		.sleb128 24
 6791 1184 00       		.byte	0
 6792 1185 25       		.uleb128 0x25
 6793 1186 56000000 		.4byte	.LVL182
 6794 118a 57220000 		.4byte	0x2257
 6795 118e 99110000 		.4byte	0x1199
 6796 1192 21       		.uleb128 0x21
 6797 1193 01       		.uleb128 0x1
 6798 1194 50       		.byte	0x50
 6799 1195 02       		.uleb128 0x2
 6800 1196 76       		.byte	0x76
 6801 1197 00       		.sleb128 0
 6802 1198 00       		.byte	0
 6803 1199 25       		.uleb128 0x25
 6804 119a 78000000 		.4byte	.LVL183
 6805 119e 40220000 		.4byte	0x2240
 6806 11a2 AD110000 		.4byte	0x11ad
 6807 11a6 21       		.uleb128 0x21
 6808 11a7 01       		.uleb128 0x1
 6809 11a8 51       		.byte	0x51
 6810 11a9 02       		.uleb128 0x2
 6811 11aa 76       		.byte	0x76
 6812 11ab 00       		.sleb128 0
 6813 11ac 00       		.byte	0
 6814 11ad 1F       		.uleb128 0x1f
 6815 11ae 9C000000 		.4byte	.LVL186
 6816 11b2 88040000 		.4byte	0x488
 6817 11b6 1F       		.uleb128 0x1f
 6818 11b7 E4000000 		.4byte	.LVL196
 6819 11bb 4C220000 		.4byte	0x224c
 6820 11bf 00       		.byte	0
 6821 11c0 29       		.uleb128 0x29
 6822 11c1 70020000 		.4byte	.LASF127
 6823 11c5 01       		.byte	0x1
 6824 11c6 B404     		.2byte	0x4b4
 6825 11c8 00000000 		.4byte	.LFB140
 6826 11cc AC000000 		.4byte	.LFE140-.LFB140
 6827 11d0 01       		.uleb128 0x1
 6828 11d1 9C       		.byte	0x9c
 6829 11d2 CC120000 		.4byte	0x12cc
 6830 11d6 19       		.uleb128 0x19
 6831 11d7 96070000 		.4byte	.LASF128
 6832 11db 01       		.byte	0x1
 6833 11dc B404     		.2byte	0x4b4
 6834 11de D2120000 		.4byte	0x12d2
 6835 11e2 30080000 		.4byte	.LLST57
 6836 11e6 19       		.uleb128 0x19
 6837 11e7 7A0D0000 		.4byte	.LASF129
 6838 11eb 01       		.byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 223


 6839 11ec B404     		.2byte	0x4b4
 6840 11ee 4E080000 		.4byte	0x84e
 6841 11f2 5C080000 		.4byte	.LLST58
 6842 11f6 1A       		.uleb128 0x1a
 6843 11f7 64090000 		.4byte	.LASF95
 6844 11fb 01       		.byte	0x1
 6845 11fc B604     		.2byte	0x4b6
 6846 11fe 4B010000 		.4byte	0x14b
 6847 1202 88080000 		.4byte	.LLST59
 6848 1206 23       		.uleb128 0x23
 6849 1207 6E010000 		.4byte	.LASF125
 6850 120b 01       		.byte	0x1
 6851 120c B704     		.2byte	0x4b7
 6852 120e 35010000 		.4byte	0x135
 6853 1212 01       		.uleb128 0x1
 6854 1213 50       		.byte	0x50
 6855 1214 1A       		.uleb128 0x1a
 6856 1215 0C0B0000 		.4byte	.LASF130
 6857 1219 01       		.byte	0x1
 6858 121a B704     		.2byte	0x4b7
 6859 121c 35010000 		.4byte	0x135
 6860 1220 9B080000 		.4byte	.LLST60
 6861 1224 2A       		.uleb128 0x2a
 6862 1225 B1030000 		.4byte	0x3b1
 6863 1229 04000000 		.4byte	.LBB131
 6864 122d 14000000 		.4byte	.LBE131-.LBB131
 6865 1231 01       		.byte	0x1
 6866 1232 B904     		.2byte	0x4b9
 6867 1234 48120000 		.4byte	0x1248
 6868 1238 1C       		.uleb128 0x1c
 6869 1239 04000000 		.4byte	.LBB132
 6870 123d 14000000 		.4byte	.LBE132-.LBB132
 6871 1241 1D       		.uleb128 0x1d
 6872 1242 BD030000 		.4byte	0x3bd
 6873 1246 00       		.byte	0
 6874 1247 00       		.byte	0
 6875 1248 2A       		.uleb128 0x2a
 6876 1249 B1030000 		.4byte	0x3b1
 6877 124d 1A000000 		.4byte	.LBB133
 6878 1251 12000000 		.4byte	.LBE133-.LBB133
 6879 1255 01       		.byte	0x1
 6880 1256 BA04     		.2byte	0x4ba
 6881 1258 6C120000 		.4byte	0x126c
 6882 125c 1C       		.uleb128 0x1c
 6883 125d 1A000000 		.4byte	.LBB134
 6884 1261 12000000 		.4byte	.LBE134-.LBB134
 6885 1265 1D       		.uleb128 0x1d
 6886 1266 BD030000 		.4byte	0x3bd
 6887 126a 00       		.byte	0
 6888 126b 00       		.byte	0
 6889 126c 2A       		.uleb128 0x2a
 6890 126d B1030000 		.4byte	0x3b1
 6891 1271 34000000 		.4byte	.LBB135
 6892 1275 14000000 		.4byte	.LBE135-.LBB135
 6893 1279 01       		.byte	0x1
 6894 127a BB04     		.2byte	0x4bb
 6895 127c 90120000 		.4byte	0x1290
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 224


 6896 1280 1C       		.uleb128 0x1c
 6897 1281 34000000 		.4byte	.LBB136
 6898 1285 14000000 		.4byte	.LBE136-.LBB136
 6899 1289 1D       		.uleb128 0x1d
 6900 128a BD030000 		.4byte	0x3bd
 6901 128e 00       		.byte	0
 6902 128f 00       		.byte	0
 6903 1290 31       		.uleb128 0x31
 6904 1291 20000000 		.4byte	.Ldebug_ranges0+0x20
 6905 1295 B9120000 		.4byte	0x12b9
 6906 1299 1A       		.uleb128 0x1a
 6907 129a 2B090000 		.4byte	.LASF96
 6908 129e 01       		.byte	0x1
 6909 129f C104     		.2byte	0x4c1
 6910 12a1 4E080000 		.4byte	0x84e
 6911 12a5 BA080000 		.4byte	.LLST61
 6912 12a9 20       		.uleb128 0x20
 6913 12aa 8C000000 		.4byte	.LVL208
 6914 12ae C0070000 		.4byte	0x7c0
 6915 12b2 21       		.uleb128 0x21
 6916 12b3 01       		.uleb128 0x1
 6917 12b4 51       		.byte	0x51
 6918 12b5 01       		.uleb128 0x1
 6919 12b6 30       		.byte	0x30
 6920 12b7 00       		.byte	0
 6921 12b8 00       		.byte	0
 6922 12b9 1F       		.uleb128 0x1f
 6923 12ba 4C000000 		.4byte	.LVL203
 6924 12be 0E0F0000 		.4byte	0xf0e
 6925 12c2 1F       		.uleb128 0x1f
 6926 12c3 90000000 		.4byte	.LVL209
 6927 12c7 E3100000 		.4byte	0x10e3
 6928 12cb 00       		.byte	0
 6929 12cc 06       		.uleb128 0x6
 6930 12cd 04       		.byte	0x4
 6931 12ce 4B010000 		.4byte	0x14b
 6932 12d2 07       		.uleb128 0x7
 6933 12d3 CC120000 		.4byte	0x12cc
 6934 12d7 29       		.uleb128 0x29
 6935 12d8 11010000 		.4byte	.LASF131
 6936 12dc 01       		.byte	0x1
 6937 12dd 0805     		.2byte	0x508
 6938 12df 00000000 		.4byte	.LFB141
 6939 12e3 50000000 		.4byte	.LFE141-.LFB141
 6940 12e7 01       		.uleb128 0x1
 6941 12e8 9C       		.byte	0x9c
 6942 12e9 5D130000 		.4byte	0x135d
 6943 12ed 19       		.uleb128 0x19
 6944 12ee 560D0000 		.4byte	.LASF132
 6945 12f2 01       		.byte	0x1
 6946 12f3 0805     		.2byte	0x508
 6947 12f5 4E080000 		.4byte	0x84e
 6948 12f9 CD080000 		.4byte	.LLST62
 6949 12fd 1A       		.uleb128 0x1a
 6950 12fe 6E010000 		.4byte	.LASF125
 6951 1302 01       		.byte	0x1
 6952 1303 0A05     		.2byte	0x50a
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 225


 6953 1305 35010000 		.4byte	0x135
 6954 1309 04090000 		.4byte	.LLST63
 6955 130d 2A       		.uleb128 0x2a
 6956 130e B1030000 		.4byte	0x3b1
 6957 1312 0E000000 		.4byte	.LBB140
 6958 1316 12000000 		.4byte	.LBE140-.LBB140
 6959 131a 01       		.byte	0x1
 6960 131b 0F05     		.2byte	0x50f
 6961 131d 31130000 		.4byte	0x1331
 6962 1321 1C       		.uleb128 0x1c
 6963 1322 0E000000 		.4byte	.LBB141
 6964 1326 12000000 		.4byte	.LBE141-.LBB141
 6965 132a 1D       		.uleb128 0x1d
 6966 132b BD030000 		.4byte	0x3bd
 6967 132f 00       		.byte	0
 6968 1330 00       		.byte	0
 6969 1331 1F       		.uleb128 0x1f
 6970 1332 24000000 		.4byte	.LVL214
 6971 1336 0E0F0000 		.4byte	0xf0e
 6972 133a 25       		.uleb128 0x25
 6973 133b 2C000000 		.4byte	.LVL215
 6974 133f C0070000 		.4byte	0x7c0
 6975 1343 53130000 		.4byte	0x1353
 6976 1347 21       		.uleb128 0x21
 6977 1348 01       		.uleb128 0x1
 6978 1349 50       		.byte	0x50
 6979 134a 02       		.uleb128 0x2
 6980 134b 74       		.byte	0x74
 6981 134c 00       		.sleb128 0
 6982 134d 21       		.uleb128 0x21
 6983 134e 01       		.uleb128 0x1
 6984 134f 51       		.byte	0x51
 6985 1350 01       		.uleb128 0x1
 6986 1351 30       		.byte	0x30
 6987 1352 00       		.byte	0
 6988 1353 1F       		.uleb128 0x1f
 6989 1354 30000000 		.4byte	.LVL216
 6990 1358 E3100000 		.4byte	0x10e3
 6991 135c 00       		.byte	0
 6992 135d 29       		.uleb128 0x29
 6993 135e E3060000 		.4byte	.LASF133
 6994 1362 01       		.byte	0x1
 6995 1363 230B     		.2byte	0xb23
 6996 1365 00000000 		.4byte	.LFB158
 6997 1369 C8000000 		.4byte	.LFE158-.LFB158
 6998 136d 01       		.uleb128 0x1
 6999 136e 9C       		.byte	0x9c
 7000 136f 0C140000 		.4byte	0x140c
 7001 1373 28       		.uleb128 0x28
 7002 1374 1C000000 		.4byte	.LBB142
 7003 1378 36000000 		.4byte	.LBE142-.LBB142
 7004 137c AB130000 		.4byte	0x13ab
 7005 1380 1A       		.uleb128 0x1a
 7006 1381 F20E0000 		.4byte	.LASF134
 7007 1385 01       		.byte	0x1
 7008 1386 4D0B     		.2byte	0xb4d
 7009 1388 12140000 		.4byte	0x1412
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 226


 7010 138c 3A090000 		.4byte	.LLST64
 7011 1390 32       		.uleb128 0x32
 7012 1391 010A0000 		.4byte	.LASF135
 7013 1395 01       		.byte	0x1
 7014 1396 4E0B     		.2byte	0xb4e
 7015 1398 05060000 		.4byte	0x605
 7016 139c A5CB96AD 		.sleb128 -1515870811
 7016      7A
 7017 13a1 1F       		.uleb128 0x1f
 7018 13a2 52000000 		.4byte	.LVL221
 7019 13a6 A7220000 		.4byte	0x22a7
 7020 13aa 00       		.byte	0
 7021 13ab 1C       		.uleb128 0x1c
 7022 13ac 52000000 		.4byte	.LBB143
 7023 13b0 76000000 		.4byte	.LBE143-.LBB143
 7024 13b4 1A       		.uleb128 0x1a
 7025 13b5 25080000 		.4byte	.LASF136
 7026 13b9 01       		.byte	0x1
 7027 13ba 5B0B     		.2byte	0xb5b
 7028 13bc 40010000 		.4byte	0x140
 7029 13c0 4D090000 		.4byte	.LLST65
 7030 13c4 2A       		.uleb128 0x2a
 7031 13c5 B1030000 		.4byte	0x3b1
 7032 13c9 5C000000 		.4byte	.LBB144
 7033 13cd 12000000 		.4byte	.LBE144-.LBB144
 7034 13d1 01       		.byte	0x1
 7035 13d2 5B0B     		.2byte	0xb5b
 7036 13d4 E8130000 		.4byte	0x13e8
 7037 13d8 1C       		.uleb128 0x1c
 7038 13d9 5C000000 		.4byte	.LBB145
 7039 13dd 12000000 		.4byte	.LBE145-.LBB145
 7040 13e1 1D       		.uleb128 0x1d
 7041 13e2 BD030000 		.4byte	0x3bd
 7042 13e6 00       		.byte	0
 7043 13e7 00       		.byte	0
 7044 13e8 1C       		.uleb128 0x1c
 7045 13e9 80000000 		.4byte	.LBB146
 7046 13ed 3E000000 		.4byte	.LBE146-.LBB146
 7047 13f1 23       		.uleb128 0x23
 7048 13f2 C6050000 		.4byte	.LASF137
 7049 13f6 01       		.byte	0x1
 7050 13f7 5B0B     		.2byte	0xb5b
 7051 13f9 17140000 		.4byte	0x1417
 7052 13fd 0B       		.uleb128 0xb
 7053 13fe 73       		.byte	0x73
 7054 13ff 00       		.sleb128 0
 7055 1400 44       		.byte	0x44
 7056 1401 1E       		.byte	0x1e
 7057 1402 03       		.byte	0x3
 7058 1403 30000000 		.4byte	pxReadyTasksLists
 7059 1407 22       		.byte	0x22
 7060 1408 9F       		.byte	0x9f
 7061 1409 00       		.byte	0
 7062 140a 00       		.byte	0
 7063 140b 00       		.byte	0
 7064 140c 06       		.uleb128 0x6
 7065 140d 04       		.byte	0x4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 227


 7066 140e 05060000 		.4byte	0x605
 7067 1412 07       		.uleb128 0x7
 7068 1413 0C140000 		.4byte	0x140c
 7069 1417 07       		.uleb128 0x7
 7070 1418 DD100000 		.4byte	0x10dd
 7071 141c 29       		.uleb128 0x29
 7072 141d 34000000 		.4byte	.LASF138
 7073 1421 01       		.byte	0x1
 7074 1422 5E06     		.2byte	0x65e
 7075 1424 00000000 		.4byte	.LFB145
 7076 1428 B8000000 		.4byte	.LFE145-.LFB145
 7077 142c 01       		.uleb128 0x1
 7078 142d 9C       		.byte	0x9c
 7079 142e F2140000 		.4byte	0x14f2
 7080 1432 19       		.uleb128 0x19
 7081 1433 01070000 		.4byte	.LASF139
 7082 1437 01       		.byte	0x1
 7083 1438 5E06     		.2byte	0x65e
 7084 143a 43020000 		.4byte	0x243
 7085 143e 6B090000 		.4byte	.LLST66
 7086 1442 1A       		.uleb128 0x1a
 7087 1443 F1050000 		.4byte	.LASF75
 7088 1447 01       		.byte	0x1
 7089 1448 6006     		.2byte	0x660
 7090 144a AF040000 		.4byte	0x4af
 7091 144e 89090000 		.4byte	.LLST67
 7092 1452 2A       		.uleb128 0x2a
 7093 1453 B1030000 		.4byte	0x3b1
 7094 1457 6E000000 		.4byte	.LBB147
 7095 145b 12000000 		.4byte	.LBE147-.LBB147
 7096 145f 01       		.byte	0x1
 7097 1460 A206     		.2byte	0x6a2
 7098 1462 76140000 		.4byte	0x1476
 7099 1466 1C       		.uleb128 0x1c
 7100 1467 6E000000 		.4byte	.LBB148
 7101 146b 12000000 		.4byte	.LBE148-.LBB148
 7102 146f 1D       		.uleb128 0x1d
 7103 1470 BD030000 		.4byte	0x3bd
 7104 1474 00       		.byte	0
 7105 1475 00       		.byte	0
 7106 1476 1F       		.uleb128 0x1f
 7107 1477 08000000 		.4byte	.LVL228
 7108 147b 35220000 		.4byte	0x2235
 7109 147f 25       		.uleb128 0x25
 7110 1480 18000000 		.4byte	.LVL230
 7111 1484 57220000 		.4byte	0x2257
 7112 1488 93140000 		.4byte	0x1493
 7113 148c 21       		.uleb128 0x21
 7114 148d 01       		.uleb128 0x1
 7115 148e 50       		.byte	0x50
 7116 148f 02       		.uleb128 0x2
 7117 1490 75       		.byte	0x75
 7118 1491 00       		.sleb128 0
 7119 1492 00       		.byte	0
 7120 1493 25       		.uleb128 0x25
 7121 1494 24000000 		.4byte	.LVL231
 7122 1498 57220000 		.4byte	0x2257
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 228


 7123 149c A7140000 		.4byte	0x14a7
 7124 14a0 21       		.uleb128 0x21
 7125 14a1 01       		.uleb128 0x1
 7126 14a2 50       		.byte	0x50
 7127 14a3 02       		.uleb128 0x2
 7128 14a4 74       		.byte	0x74
 7129 14a5 18       		.sleb128 24
 7130 14a6 00       		.byte	0
 7131 14a7 25       		.uleb128 0x25
 7132 14a8 2C000000 		.4byte	.LVL232
 7133 14ac 40220000 		.4byte	0x2240
 7134 14b0 C4140000 		.4byte	0x14c4
 7135 14b4 21       		.uleb128 0x21
 7136 14b5 01       		.uleb128 0x1
 7137 14b6 50       		.byte	0x50
 7138 14b7 05       		.uleb128 0x5
 7139 14b8 03       		.byte	0x3
 7140 14b9 00000000 		.4byte	.LANCHOR0
 7141 14bd 21       		.uleb128 0x21
 7142 14be 01       		.uleb128 0x1
 7143 14bf 51       		.byte	0x51
 7144 14c0 02       		.uleb128 0x2
 7145 14c1 75       		.byte	0x75
 7146 14c2 00       		.sleb128 0
 7147 14c3 00       		.byte	0
 7148 14c4 1F       		.uleb128 0x1f
 7149 14c5 40000000 		.4byte	.LVL233
 7150 14c9 4C220000 		.4byte	0x224c
 7151 14cd 1F       		.uleb128 0x1f
 7152 14ce 4C000000 		.4byte	.LVL234
 7153 14d2 35220000 		.4byte	0x2235
 7154 14d6 1F       		.uleb128 0x1f
 7155 14d7 50000000 		.4byte	.LVL235
 7156 14db 88040000 		.4byte	0x488
 7157 14df 1F       		.uleb128 0x1f
 7158 14e0 54000000 		.4byte	.LVL236
 7159 14e4 4C220000 		.4byte	0x224c
 7160 14e8 1F       		.uleb128 0x1f
 7161 14e9 AC000000 		.4byte	.LVL240
 7162 14ed 5D130000 		.4byte	0x135d
 7163 14f1 00       		.byte	0
 7164 14f2 29       		.uleb128 0x29
 7165 14f3 59040000 		.4byte	.LASF140
 7166 14f7 01       		.byte	0x1
 7167 14f8 690B     		.2byte	0xb69
 7168 14fa 00000000 		.4byte	.LFB159
 7169 14fe 34000000 		.4byte	.LFE159-.LFB159
 7170 1502 01       		.uleb128 0x1
 7171 1503 9C       		.byte	0x9c
 7172 1504 6B150000 		.4byte	0x156b
 7173 1508 19       		.uleb128 0x19
 7174 1509 28000000 		.4byte	.LASF141
 7175 150d 01       		.byte	0x1
 7176 150e 690B     		.2byte	0xb69
 7177 1510 17140000 		.4byte	0x1417
 7178 1514 9C090000 		.4byte	.LLST68
 7179 1518 19       		.uleb128 0x19
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 229


 7180 1519 27020000 		.4byte	.LASF93
 7181 151d 01       		.byte	0x1
 7182 151e 690B     		.2byte	0xb69
 7183 1520 4E080000 		.4byte	0x84e
 7184 1524 BD090000 		.4byte	.LLST69
 7185 1528 2A       		.uleb128 0x2a
 7186 1529 B1030000 		.4byte	0x3b1
 7187 152d 02000000 		.4byte	.LBB149
 7188 1531 12000000 		.4byte	.LBE149-.LBB149
 7189 1535 01       		.byte	0x1
 7190 1536 6B0B     		.2byte	0xb6b
 7191 1538 4C150000 		.4byte	0x154c
 7192 153c 1C       		.uleb128 0x1c
 7193 153d 02000000 		.4byte	.LBB150
 7194 1541 12000000 		.4byte	.LBE150-.LBB150
 7195 1545 1D       		.uleb128 0x1d
 7196 1546 BD030000 		.4byte	0x3bd
 7197 154a 00       		.byte	0
 7198 154b 00       		.byte	0
 7199 154c 1F       		.uleb128 0x1f
 7200 154d 24000000 		.4byte	.LVL245
 7201 1551 63220000 		.4byte	0x2263
 7202 1555 20       		.uleb128 0x20
 7203 1556 2C000000 		.4byte	.LVL246
 7204 155a C0070000 		.4byte	0x7c0
 7205 155e 21       		.uleb128 0x21
 7206 155f 01       		.uleb128 0x1
 7207 1560 50       		.byte	0x50
 7208 1561 02       		.uleb128 0x2
 7209 1562 74       		.byte	0x74
 7210 1563 00       		.sleb128 0
 7211 1564 21       		.uleb128 0x21
 7212 1565 01       		.uleb128 0x1
 7213 1566 51       		.byte	0x51
 7214 1567 01       		.uleb128 0x1
 7215 1568 31       		.byte	0x31
 7216 1569 00       		.byte	0
 7217 156a 00       		.byte	0
 7218 156b 29       		.uleb128 0x29
 7219 156c E3040000 		.4byte	.LASF142
 7220 1570 01       		.byte	0x1
 7221 1571 7A0B     		.2byte	0xb7a
 7222 1573 00000000 		.4byte	.LFB160
 7223 1577 5C000000 		.4byte	.LFE160-.LFB160
 7224 157b 01       		.uleb128 0x1
 7225 157c 9C       		.byte	0x9c
 7226 157d 24160000 		.4byte	0x1624
 7227 1581 19       		.uleb128 0x19
 7228 1582 28000000 		.4byte	.LASF141
 7229 1586 01       		.byte	0x1
 7230 1587 7A0B     		.2byte	0xb7a
 7231 1589 DD100000 		.4byte	0x10dd
 7232 158d E9090000 		.4byte	.LLST70
 7233 1591 19       		.uleb128 0x19
 7234 1592 C70B0000 		.4byte	.LASF28
 7235 1596 01       		.byte	0x1
 7236 1597 7A0B     		.2byte	0xb7a
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 230


 7237 1599 4E080000 		.4byte	0x84e
 7238 159d 390A0000 		.4byte	.LLST71
 7239 15a1 19       		.uleb128 0x19
 7240 15a2 27020000 		.4byte	.LASF93
 7241 15a6 01       		.byte	0x1
 7242 15a7 7A0B     		.2byte	0xb7a
 7243 15a9 4E080000 		.4byte	0x84e
 7244 15ad 650A0000 		.4byte	.LLST72
 7245 15b1 2A       		.uleb128 0x2a
 7246 15b2 B1030000 		.4byte	0x3b1
 7247 15b6 02000000 		.4byte	.LBB151
 7248 15ba 14000000 		.4byte	.LBE151-.LBB151
 7249 15be 01       		.byte	0x1
 7250 15bf 7C0B     		.2byte	0xb7c
 7251 15c1 D5150000 		.4byte	0x15d5
 7252 15c5 1C       		.uleb128 0x1c
 7253 15c6 02000000 		.4byte	.LBB152
 7254 15ca 14000000 		.4byte	.LBE152-.LBB152
 7255 15ce 1D       		.uleb128 0x1d
 7256 15cf BD030000 		.4byte	0x3bd
 7257 15d3 00       		.byte	0
 7258 15d4 00       		.byte	0
 7259 15d5 2A       		.uleb128 0x2a
 7260 15d6 B1030000 		.4byte	0x3b1
 7261 15da 1E000000 		.4byte	.LBB153
 7262 15de 12000000 		.4byte	.LBE153-.LBB153
 7263 15e2 01       		.byte	0x1
 7264 15e3 800B     		.2byte	0xb80
 7265 15e5 F9150000 		.4byte	0x15f9
 7266 15e9 1C       		.uleb128 0x1c
 7267 15ea 1E000000 		.4byte	.LBB154
 7268 15ee 12000000 		.4byte	.LBE154-.LBB154
 7269 15f2 1D       		.uleb128 0x1d
 7270 15f3 BD030000 		.4byte	0x3bd
 7271 15f7 00       		.byte	0
 7272 15f8 00       		.byte	0
 7273 15f9 25       		.uleb128 0x25
 7274 15fa 4E000000 		.4byte	.LVL257
 7275 15fe 40220000 		.4byte	0x2240
 7276 1602 0E160000 		.4byte	0x160e
 7277 1606 21       		.uleb128 0x21
 7278 1607 01       		.uleb128 0x1
 7279 1608 50       		.byte	0x50
 7280 1609 03       		.uleb128 0x3
 7281 160a F3       		.byte	0xf3
 7282 160b 01       		.uleb128 0x1
 7283 160c 50       		.byte	0x50
 7284 160d 00       		.byte	0
 7285 160e 20       		.uleb128 0x20
 7286 160f 56000000 		.4byte	.LVL258
 7287 1613 C0070000 		.4byte	0x7c0
 7288 1617 21       		.uleb128 0x21
 7289 1618 01       		.uleb128 0x1
 7290 1619 50       		.byte	0x50
 7291 161a 02       		.uleb128 0x2
 7292 161b 74       		.byte	0x74
 7293 161c 00       		.sleb128 0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 231


 7294 161d 21       		.uleb128 0x21
 7295 161e 01       		.uleb128 0x1
 7296 161f 51       		.byte	0x51
 7297 1620 01       		.uleb128 0x1
 7298 1621 31       		.byte	0x31
 7299 1622 00       		.byte	0
 7300 1623 00       		.byte	0
 7301 1624 29       		.uleb128 0x29
 7302 1625 EE0D0000 		.4byte	.LASF143
 7303 1629 01       		.byte	0x1
 7304 162a 940B     		.2byte	0xb94
 7305 162c 00000000 		.4byte	.LFB161
 7306 1630 3C000000 		.4byte	.LFE161-.LFB161
 7307 1634 01       		.uleb128 0x1
 7308 1635 9C       		.byte	0x9c
 7309 1636 AE160000 		.4byte	0x16ae
 7310 163a 19       		.uleb128 0x19
 7311 163b 28000000 		.4byte	.LASF141
 7312 163f 01       		.byte	0x1
 7313 1640 940B     		.2byte	0xb94
 7314 1642 17140000 		.4byte	0x1417
 7315 1646 910A0000 		.4byte	.LLST73
 7316 164a 19       		.uleb128 0x19
 7317 164b 27020000 		.4byte	.LASF93
 7318 164f 01       		.byte	0x1
 7319 1650 940B     		.2byte	0xb94
 7320 1652 4B010000 		.4byte	0x14b
 7321 1656 B20A0000 		.4byte	.LLST74
 7322 165a 19       		.uleb128 0x19
 7323 165b A40C0000 		.4byte	.LASF144
 7324 165f 01       		.byte	0x1
 7325 1660 940B     		.2byte	0xb94
 7326 1662 49080000 		.4byte	0x849
 7327 1666 D00A0000 		.4byte	.LLST75
 7328 166a 2A       		.uleb128 0x2a
 7329 166b B1030000 		.4byte	0x3b1
 7330 166f 04000000 		.4byte	.LBB155
 7331 1673 16000000 		.4byte	.LBE155-.LBB155
 7332 1677 01       		.byte	0x1
 7333 1678 960B     		.2byte	0xb96
 7334 167a 8E160000 		.4byte	0x168e
 7335 167e 1C       		.uleb128 0x1c
 7336 167f 04000000 		.4byte	.LBB156
 7337 1683 16000000 		.4byte	.LBE156-.LBB156
 7338 1687 1D       		.uleb128 0x1d
 7339 1688 BD030000 		.4byte	0x3bd
 7340 168c 00       		.byte	0
 7341 168d 00       		.byte	0
 7342 168e 1F       		.uleb128 0x1f
 7343 168f 26000000 		.4byte	.LVL264
 7344 1693 40220000 		.4byte	0x2240
 7345 1697 20       		.uleb128 0x20
 7346 1698 34000000 		.4byte	.LVL266
 7347 169c C0070000 		.4byte	0x7c0
 7348 16a0 21       		.uleb128 0x21
 7349 16a1 01       		.uleb128 0x1
 7350 16a2 50       		.byte	0x50
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 232


 7351 16a3 02       		.uleb128 0x2
 7352 16a4 74       		.byte	0x74
 7353 16a5 00       		.sleb128 0
 7354 16a6 21       		.uleb128 0x21
 7355 16a7 01       		.uleb128 0x1
 7356 16a8 51       		.byte	0x51
 7357 16a9 02       		.uleb128 0x2
 7358 16aa 75       		.byte	0x75
 7359 16ab 00       		.sleb128 0
 7360 16ac 00       		.byte	0
 7361 16ad 00       		.byte	0
 7362 16ae 27       		.uleb128 0x27
 7363 16af AE0B0000 		.4byte	.LASF145
 7364 16b3 01       		.byte	0x1
 7365 16b4 B30B     		.2byte	0xbb3
 7366 16b6 35010000 		.4byte	0x135
 7367 16ba 00000000 		.4byte	.LFB162
 7368 16be 88000000 		.4byte	.LFE162-.LFB162
 7369 16c2 01       		.uleb128 0x1
 7370 16c3 9C       		.byte	0x9c
 7371 16c4 72170000 		.4byte	0x1772
 7372 16c8 19       		.uleb128 0x19
 7373 16c9 28000000 		.4byte	.LASF141
 7374 16cd 01       		.byte	0x1
 7375 16ce B30B     		.2byte	0xbb3
 7376 16d0 7D170000 		.4byte	0x177d
 7377 16d4 FC0A0000 		.4byte	.LLST76
 7378 16d8 1A       		.uleb128 0x1a
 7379 16d9 47090000 		.4byte	.LASF146
 7380 16dd 01       		.byte	0x1
 7381 16de B50B     		.2byte	0xbb5
 7382 16e0 AF040000 		.4byte	0x4af
 7383 16e4 1D0B0000 		.4byte	.LLST77
 7384 16e8 1A       		.uleb128 0x1a
 7385 16e9 B9040000 		.4byte	.LASF74
 7386 16ed 01       		.byte	0x1
 7387 16ee B60B     		.2byte	0xbb6
 7388 16f0 35010000 		.4byte	0x135
 7389 16f4 300B0000 		.4byte	.LLST78
 7390 16f8 2A       		.uleb128 0x2a
 7391 16f9 B1030000 		.4byte	0x3b1
 7392 16fd 08000000 		.4byte	.LBB157
 7393 1701 12000000 		.4byte	.LBE157-.LBB157
 7394 1705 01       		.byte	0x1
 7395 1706 C60B     		.2byte	0xbc6
 7396 1708 1C170000 		.4byte	0x171c
 7397 170c 1C       		.uleb128 0x1c
 7398 170d 08000000 		.4byte	.LBB158
 7399 1711 12000000 		.4byte	.LBE158-.LBB158
 7400 1715 1D       		.uleb128 0x1d
 7401 1716 BD030000 		.4byte	0x3bd
 7402 171a 00       		.byte	0
 7403 171b 00       		.byte	0
 7404 171c 25       		.uleb128 0x25
 7405 171d 24000000 		.4byte	.LVL272
 7406 1721 57220000 		.4byte	0x2257
 7407 1725 30170000 		.4byte	0x1730
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 233


 7408 1729 21       		.uleb128 0x21
 7409 172a 01       		.uleb128 0x1
 7410 172b 50       		.byte	0x50
 7411 172c 02       		.uleb128 0x2
 7412 172d 75       		.byte	0x75
 7413 172e 00       		.sleb128 0
 7414 172f 00       		.byte	0
 7415 1730 25       		.uleb128 0x25
 7416 1731 34000000 		.4byte	.LVL273
 7417 1735 57220000 		.4byte	0x2257
 7418 1739 44170000 		.4byte	0x1744
 7419 173d 21       		.uleb128 0x21
 7420 173e 01       		.uleb128 0x1
 7421 173f 50       		.byte	0x50
 7422 1740 02       		.uleb128 0x2
 7423 1741 75       		.byte	0x75
 7424 1742 00       		.sleb128 0
 7425 1743 00       		.byte	0
 7426 1744 25       		.uleb128 0x25
 7427 1745 56000000 		.4byte	.LVL274
 7428 1749 40220000 		.4byte	0x2240
 7429 174d 58170000 		.4byte	0x1758
 7430 1751 21       		.uleb128 0x21
 7431 1752 01       		.uleb128 0x1
 7432 1753 51       		.byte	0x51
 7433 1754 02       		.uleb128 0x2
 7434 1755 75       		.byte	0x75
 7435 1756 00       		.sleb128 0
 7436 1757 00       		.byte	0
 7437 1758 20       		.uleb128 0x20
 7438 1759 60000000 		.4byte	.LVL275
 7439 175d 40220000 		.4byte	0x2240
 7440 1761 21       		.uleb128 0x21
 7441 1762 01       		.uleb128 0x1
 7442 1763 50       		.byte	0x50
 7443 1764 05       		.uleb128 0x5
 7444 1765 03       		.byte	0x3
 7445 1766 14000000 		.4byte	.LANCHOR0+20
 7446 176a 21       		.uleb128 0x21
 7447 176b 01       		.uleb128 0x1
 7448 176c 51       		.byte	0x51
 7449 176d 02       		.uleb128 0x2
 7450 176e 75       		.byte	0x75
 7451 176f 00       		.sleb128 0
 7452 1770 00       		.byte	0
 7453 1771 00       		.byte	0
 7454 1772 06       		.uleb128 0x6
 7455 1773 04       		.byte	0x4
 7456 1774 78170000 		.4byte	0x1778
 7457 1778 07       		.uleb128 0x7
 7458 1779 38020000 		.4byte	0x238
 7459 177d 07       		.uleb128 0x7
 7460 177e 72170000 		.4byte	0x1772
 7461 1782 29       		.uleb128 0x29
 7462 1783 D00E0000 		.4byte	.LASF147
 7463 1787 01       		.byte	0x1
 7464 1788 F70B     		.2byte	0xbf7
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 234


 7465 178a 00000000 		.4byte	.LFB163
 7466 178e 84000000 		.4byte	.LFE163-.LFB163
 7467 1792 01       		.uleb128 0x1
 7468 1793 9C       		.byte	0x9c
 7469 1794 3E180000 		.4byte	0x183e
 7470 1798 19       		.uleb128 0x19
 7471 1799 5E0C0000 		.4byte	.LASF148
 7472 179d 01       		.byte	0x1
 7473 179e F70B     		.2byte	0xbf7
 7474 17a0 32020000 		.4byte	0x232
 7475 17a4 4F0B0000 		.4byte	.LLST79
 7476 17a8 19       		.uleb128 0x19
 7477 17a9 C70B0000 		.4byte	.LASF28
 7478 17ad 01       		.byte	0x1
 7479 17ae F70B     		.2byte	0xbf7
 7480 17b0 4E080000 		.4byte	0x84e
 7481 17b4 700B0000 		.4byte	.LLST80
 7482 17b8 1A       		.uleb128 0x1a
 7483 17b9 47090000 		.4byte	.LASF146
 7484 17bd 01       		.byte	0x1
 7485 17be F90B     		.2byte	0xbf9
 7486 17c0 AF040000 		.4byte	0x4af
 7487 17c4 910B0000 		.4byte	.LLST81
 7488 17c8 2A       		.uleb128 0x2a
 7489 17c9 B1030000 		.4byte	0x3b1
 7490 17cd 08000000 		.4byte	.LBB159
 7491 17d1 12000000 		.4byte	.LBE159-.LBB159
 7492 17d5 01       		.byte	0x1
 7493 17d6 FD0B     		.2byte	0xbfd
 7494 17d8 EC170000 		.4byte	0x17ec
 7495 17dc 1C       		.uleb128 0x1c
 7496 17dd 08000000 		.4byte	.LBB160
 7497 17e1 12000000 		.4byte	.LBE160-.LBB160
 7498 17e5 1D       		.uleb128 0x1d
 7499 17e6 BD030000 		.4byte	0x3bd
 7500 17ea 00       		.byte	0
 7501 17eb 00       		.byte	0
 7502 17ec 2A       		.uleb128 0x2a
 7503 17ed B1030000 		.4byte	0x3b1
 7504 17f1 26000000 		.4byte	.LBB161
 7505 17f5 12000000 		.4byte	.LBE161-.LBB161
 7506 17f9 01       		.byte	0x1
 7507 17fa 050C     		.2byte	0xc05
 7508 17fc 10180000 		.4byte	0x1810
 7509 1800 1C       		.uleb128 0x1c
 7510 1801 26000000 		.4byte	.LBB162
 7511 1805 12000000 		.4byte	.LBE162-.LBB162
 7512 1809 1D       		.uleb128 0x1d
 7513 180a BD030000 		.4byte	0x3bd
 7514 180e 00       		.byte	0
 7515 180f 00       		.byte	0
 7516 1810 1F       		.uleb128 0x1f
 7517 1811 3C000000 		.4byte	.LVL284
 7518 1815 57220000 		.4byte	0x2257
 7519 1819 25       		.uleb128 0x25
 7520 181a 44000000 		.4byte	.LVL285
 7521 181e 57220000 		.4byte	0x2257
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 235


 7522 1822 2D180000 		.4byte	0x182d
 7523 1826 21       		.uleb128 0x21
 7524 1827 01       		.uleb128 0x1
 7525 1828 50       		.byte	0x50
 7526 1829 02       		.uleb128 0x2
 7527 182a 76       		.byte	0x76
 7528 182b 00       		.sleb128 0
 7529 182c 00       		.byte	0
 7530 182d 20       		.uleb128 0x20
 7531 182e 6A000000 		.4byte	.LVL286
 7532 1832 40220000 		.4byte	0x2240
 7533 1836 21       		.uleb128 0x21
 7534 1837 01       		.uleb128 0x1
 7535 1838 51       		.byte	0x51
 7536 1839 02       		.uleb128 0x2
 7537 183a 76       		.byte	0x76
 7538 183b 00       		.sleb128 0
 7539 183c 00       		.byte	0
 7540 183d 00       		.byte	0
 7541 183e 29       		.uleb128 0x29
 7542 183f 9B0E0000 		.4byte	.LASF149
 7543 1843 01       		.byte	0x1
 7544 1844 190C     		.2byte	0xc19
 7545 1846 00000000 		.4byte	.LFB164
 7546 184a 34000000 		.4byte	.LFE164-.LFB164
 7547 184e 01       		.uleb128 0x1
 7548 184f 9C       		.byte	0x9c
 7549 1850 9B180000 		.4byte	0x189b
 7550 1854 19       		.uleb128 0x19
 7551 1855 7E010000 		.4byte	.LASF150
 7552 1859 01       		.byte	0x1
 7553 185a 190C     		.2byte	0xc19
 7554 185c A1180000 		.4byte	0x18a1
 7555 1860 A40B0000 		.4byte	.LLST82
 7556 1864 2A       		.uleb128 0x2a
 7557 1865 B1030000 		.4byte	0x3b1
 7558 1869 02000000 		.4byte	.LBB163
 7559 186d 12000000 		.4byte	.LBE163-.LBB163
 7560 1871 01       		.byte	0x1
 7561 1872 1B0C     		.2byte	0xc1b
 7562 1874 88180000 		.4byte	0x1888
 7563 1878 1C       		.uleb128 0x1c
 7564 1879 02000000 		.4byte	.LBB164
 7565 187d 12000000 		.4byte	.LBE164-.LBB164
 7566 1881 1D       		.uleb128 0x1d
 7567 1882 BD030000 		.4byte	0x3bd
 7568 1886 00       		.byte	0
 7569 1887 00       		.byte	0
 7570 1888 1F       		.uleb128 0x1f
 7571 1889 1C000000 		.4byte	.LVL290
 7572 188d 35220000 		.4byte	0x2235
 7573 1891 1F       		.uleb128 0x1f
 7574 1892 2E000000 		.4byte	.LVL291
 7575 1896 4C220000 		.4byte	0x224c
 7576 189a 00       		.byte	0
 7577 189b 06       		.uleb128 0x6
 7578 189c 04       		.byte	0x4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 236


 7579 189d A9020000 		.4byte	0x2a9
 7580 18a1 07       		.uleb128 0x7
 7581 18a2 9B180000 		.4byte	0x189b
 7582 18a6 29       		.uleb128 0x29
 7583 18a7 320D0000 		.4byte	.LASF151
 7584 18ab 01       		.byte	0x1
 7585 18ac 250C     		.2byte	0xc25
 7586 18ae 00000000 		.4byte	.LFB165
 7587 18b2 14000000 		.4byte	.LFE165-.LFB165
 7588 18b6 01       		.uleb128 0x1
 7589 18b7 9C       		.byte	0x9c
 7590 18b8 CB180000 		.4byte	0x18cb
 7591 18bc 22       		.uleb128 0x22
 7592 18bd 7E010000 		.4byte	.LASF150
 7593 18c1 01       		.byte	0x1
 7594 18c2 250C     		.2byte	0xc25
 7595 18c4 A1180000 		.4byte	0x18a1
 7596 18c8 01       		.uleb128 0x1
 7597 18c9 50       		.byte	0x50
 7598 18ca 00       		.byte	0
 7599 18cb 27       		.uleb128 0x27
 7600 18cc 3C0C0000 		.4byte	.LASF152
 7601 18d0 01       		.byte	0x1
 7602 18d1 2D0C     		.2byte	0xc2d
 7603 18d3 35010000 		.4byte	0x135
 7604 18d7 00000000 		.4byte	.LFB166
 7605 18db 80000000 		.4byte	.LFE166-.LFB166
 7606 18df 01       		.uleb128 0x1
 7607 18e0 9C       		.byte	0x9c
 7608 18e1 AE190000 		.4byte	0x19ae
 7609 18e5 19       		.uleb128 0x19
 7610 18e6 7E010000 		.4byte	.LASF150
 7611 18ea 01       		.byte	0x1
 7612 18eb 2D0C     		.2byte	0xc2d
 7613 18ed A1180000 		.4byte	0x18a1
 7614 18f1 D00B0000 		.4byte	.LLST83
 7615 18f5 19       		.uleb128 0x19
 7616 18f6 A2060000 		.4byte	.LASF153
 7617 18fa 01       		.byte	0x1
 7618 18fb 2D0C     		.2byte	0xc2d
 7619 18fd D2120000 		.4byte	0x12d2
 7620 1901 FC0B0000 		.4byte	.LLST84
 7621 1905 1A       		.uleb128 0x1a
 7622 1906 B9040000 		.4byte	.LASF74
 7623 190a 01       		.byte	0x1
 7624 190b 2F0C     		.2byte	0xc2f
 7625 190d 35010000 		.4byte	0x135
 7626 1911 730C0000 		.4byte	.LLST85
 7627 1915 2A       		.uleb128 0x2a
 7628 1916 B1030000 		.4byte	0x3b1
 7629 191a 04000000 		.4byte	.LBB165
 7630 191e 14000000 		.4byte	.LBE165-.LBB165
 7631 1922 01       		.byte	0x1
 7632 1923 310C     		.2byte	0xc31
 7633 1925 39190000 		.4byte	0x1939
 7634 1929 1C       		.uleb128 0x1c
 7635 192a 04000000 		.4byte	.LBB166
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 237


 7636 192e 14000000 		.4byte	.LBE166-.LBB166
 7637 1932 1D       		.uleb128 0x1d
 7638 1933 BD030000 		.4byte	0x3bd
 7639 1937 00       		.byte	0
 7640 1938 00       		.byte	0
 7641 1939 2A       		.uleb128 0x2a
 7642 193a B1030000 		.4byte	0x3b1
 7643 193e 1A000000 		.4byte	.LBB167
 7644 1942 14000000 		.4byte	.LBE167-.LBB167
 7645 1946 01       		.byte	0x1
 7646 1947 320C     		.2byte	0xc32
 7647 1949 5D190000 		.4byte	0x195d
 7648 194d 1C       		.uleb128 0x1c
 7649 194e 1A000000 		.4byte	.LBB168
 7650 1952 14000000 		.4byte	.LBE168-.LBB168
 7651 1956 1D       		.uleb128 0x1d
 7652 1957 BD030000 		.4byte	0x3bd
 7653 195b 00       		.byte	0
 7654 195c 00       		.byte	0
 7655 195d 28       		.uleb128 0x28
 7656 195e 32000000 		.4byte	.LBB169
 7657 1962 42000000 		.4byte	.LBE169-.LBB169
 7658 1966 9B190000 		.4byte	0x199b
 7659 196a 1A       		.uleb128 0x1a
 7660 196b 2B090000 		.4byte	.LASF96
 7661 196f 01       		.byte	0x1
 7662 1970 370C     		.2byte	0xc37
 7663 1972 4E080000 		.4byte	0x84e
 7664 1976 A90C0000 		.4byte	.LLST86
 7665 197a 1A       		.uleb128 0x1a
 7666 197b D6060000 		.4byte	.LASF154
 7667 197f 01       		.byte	0x1
 7668 1980 380C     		.2byte	0xc38
 7669 1982 4E080000 		.4byte	0x84e
 7670 1986 C70C0000 		.4byte	.LLST87
 7671 198a 20       		.uleb128 0x20
 7672 198b 62000000 		.4byte	.LVL301
 7673 198f A6180000 		.4byte	0x18a6
 7674 1993 21       		.uleb128 0x21
 7675 1994 01       		.uleb128 0x1
 7676 1995 50       		.byte	0x50
 7677 1996 02       		.uleb128 0x2
 7678 1997 75       		.byte	0x75
 7679 1998 00       		.sleb128 0
 7680 1999 00       		.byte	0
 7681 199a 00       		.byte	0
 7682 199b 1F       		.uleb128 0x1f
 7683 199c 32000000 		.4byte	.LVL297
 7684 19a0 35220000 		.4byte	0x2235
 7685 19a4 1F       		.uleb128 0x1f
 7686 19a5 78000000 		.4byte	.LVL310
 7687 19a9 4C220000 		.4byte	0x224c
 7688 19ad 00       		.byte	0
 7689 19ae 2D       		.uleb128 0x2d
 7690 19af 9A0A0000 		.4byte	.LASF156
 7691 19b3 01       		.byte	0x1
 7692 19b4 6C0C     		.2byte	0xc6c
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 238


 7693 19b6 00000000 		.4byte	.LFB167
 7694 19ba 10000000 		.4byte	.LFE167-.LFB167
 7695 19be 01       		.uleb128 0x1
 7696 19bf 9C       		.byte	0x9c
 7697 19c0 29       		.uleb128 0x29
 7698 19c1 34020000 		.4byte	.LASF157
 7699 19c5 01       		.byte	0x1
 7700 19c6 420D     		.2byte	0xd42
 7701 19c8 00000000 		.4byte	.LFB169
 7702 19cc 1C000000 		.4byte	.LFE169-.LFB169
 7703 19d0 01       		.uleb128 0x1
 7704 19d1 9C       		.byte	0x9c
 7705 19d2 151A0000 		.4byte	0x1a15
 7706 19d6 19       		.uleb128 0x19
 7707 19d7 56020000 		.4byte	.LASF158
 7708 19db 01       		.byte	0x1
 7709 19dc 420D     		.2byte	0xd42
 7710 19de 43020000 		.4byte	0x243
 7711 19e2 E50C0000 		.4byte	.LLST88
 7712 19e6 19       		.uleb128 0x19
 7713 19e7 59060000 		.4byte	.LASF159
 7714 19eb 01       		.byte	0x1
 7715 19ec 420D     		.2byte	0xd42
 7716 19ee 35010000 		.4byte	0x135
 7717 19f2 F80C0000 		.4byte	.LLST89
 7718 19f6 22       		.uleb128 0x22
 7719 19f7 14090000 		.4byte	.LASF160
 7720 19fb 01       		.byte	0x1
 7721 19fc 420D     		.2byte	0xd42
 7722 19fe B0000000 		.4byte	0xb0
 7723 1a02 01       		.uleb128 0x1
 7724 1a03 52       		.byte	0x52
 7725 1a04 1A       		.uleb128 0x1a
 7726 1a05 F1050000 		.4byte	.LASF75
 7727 1a09 01       		.byte	0x1
 7728 1a0a 440D     		.2byte	0xd44
 7729 1a0c AF040000 		.4byte	0x4af
 7730 1a10 260D0000 		.4byte	.LLST90
 7731 1a14 00       		.byte	0
 7732 1a15 27       		.uleb128 0x27
 7733 1a16 5F0E0000 		.4byte	.LASF161
 7734 1a1a 01       		.byte	0x1
 7735 1a1b 520D     		.2byte	0xd52
 7736 1a1d B0000000 		.4byte	0xb0
 7737 1a21 00000000 		.4byte	.LFB170
 7738 1a25 20000000 		.4byte	.LFE170-.LFB170
 7739 1a29 01       		.uleb128 0x1
 7740 1a2a 9C       		.byte	0x9c
 7741 1a2b 701A0000 		.4byte	0x1a70
 7742 1a2f 19       		.uleb128 0x19
 7743 1a30 08040000 		.4byte	.LASF120
 7744 1a34 01       		.byte	0x1
 7745 1a35 520D     		.2byte	0xd52
 7746 1a37 43020000 		.4byte	0x243
 7747 1a3b 390D0000 		.4byte	.LLST91
 7748 1a3f 19       		.uleb128 0x19
 7749 1a40 59060000 		.4byte	.LASF159
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 239


 7750 1a44 01       		.byte	0x1
 7751 1a45 520D     		.2byte	0xd52
 7752 1a47 35010000 		.4byte	0x135
 7753 1a4b 650D0000 		.4byte	.LLST92
 7754 1a4f 1A       		.uleb128 0x1a
 7755 1a50 22090000 		.4byte	.LASF162
 7756 1a54 01       		.byte	0x1
 7757 1a55 540D     		.2byte	0xd54
 7758 1a57 B0000000 		.4byte	0xb0
 7759 1a5b 900D0000 		.4byte	.LLST93
 7760 1a5f 1A       		.uleb128 0x1a
 7761 1a60 F1050000 		.4byte	.LASF75
 7762 1a64 01       		.byte	0x1
 7763 1a65 550D     		.2byte	0xd55
 7764 1a67 AF040000 		.4byte	0x4af
 7765 1a6b C60D0000 		.4byte	.LLST94
 7766 1a6f 00       		.byte	0
 7767 1a70 27       		.uleb128 0x27
 7768 1a71 B4000000 		.4byte	.LASF163
 7769 1a75 01       		.byte	0x1
 7770 1a76 B70E     		.2byte	0xeb7
 7771 1a78 43020000 		.4byte	0x243
 7772 1a7c 00000000 		.4byte	.LFB175
 7773 1a80 0C000000 		.4byte	.LFE175-.LFB175
 7774 1a84 01       		.uleb128 0x1
 7775 1a85 9C       		.byte	0x9c
 7776 1a86 991A0000 		.4byte	0x1a99
 7777 1a8a 23       		.uleb128 0x23
 7778 1a8b B9040000 		.4byte	.LASF74
 7779 1a8f 01       		.byte	0x1
 7780 1a90 B90E     		.2byte	0xeb9
 7781 1a92 43020000 		.4byte	0x243
 7782 1a96 01       		.uleb128 0x1
 7783 1a97 50       		.byte	0x50
 7784 1a98 00       		.byte	0
 7785 1a99 27       		.uleb128 0x27
 7786 1a9a DE0A0000 		.4byte	.LASF164
 7787 1a9e 01       		.byte	0x1
 7788 1a9f C80E     		.2byte	0xec8
 7789 1aa1 35010000 		.4byte	0x135
 7790 1aa5 00000000 		.4byte	.LFB176
 7791 1aa9 20000000 		.4byte	.LFE176-.LFB176
 7792 1aad 01       		.uleb128 0x1
 7793 1aae 9C       		.byte	0x9c
 7794 1aaf C21A0000 		.4byte	0x1ac2
 7795 1ab3 23       		.uleb128 0x23
 7796 1ab4 B9040000 		.4byte	.LASF74
 7797 1ab8 01       		.byte	0x1
 7798 1ab9 CA0E     		.2byte	0xeca
 7799 1abb 35010000 		.4byte	0x135
 7800 1abf 01       		.uleb128 0x1
 7801 1ac0 50       		.byte	0x50
 7802 1ac1 00       		.byte	0
 7803 1ac2 27       		.uleb128 0x27
 7804 1ac3 8C000000 		.4byte	.LASF165
 7805 1ac7 01       		.byte	0x1
 7806 1ac8 2911     		.2byte	0x1129
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 240


 7807 1aca 4B010000 		.4byte	0x14b
 7808 1ace 00000000 		.4byte	.LFB177
 7809 1ad2 20000000 		.4byte	.LFE177-.LFB177
 7810 1ad6 01       		.uleb128 0x1
 7811 1ad7 9C       		.byte	0x9c
 7812 1ad8 EB1A0000 		.4byte	0x1aeb
 7813 1adc 23       		.uleb128 0x23
 7814 1add 50060000 		.4byte	.LASF101
 7815 1ae1 01       		.byte	0x1
 7816 1ae2 2B11     		.2byte	0x112b
 7817 1ae4 4B010000 		.4byte	0x14b
 7818 1ae8 01       		.uleb128 0x1
 7819 1ae9 50       		.byte	0x50
 7820 1aea 00       		.byte	0
 7821 1aeb 27       		.uleb128 0x27
 7822 1aec 40070000 		.4byte	.LASF166
 7823 1af0 01       		.byte	0x1
 7824 1af1 4A11     		.2byte	0x114a
 7825 1af3 EB000000 		.4byte	0xeb
 7826 1af7 00000000 		.4byte	.LFB178
 7827 1afb 80000000 		.4byte	.LFE178-.LFB178
 7828 1aff 01       		.uleb128 0x1
 7829 1b00 9C       		.byte	0x9c
 7830 1b01 731B0000 		.4byte	0x1b73
 7831 1b05 19       		.uleb128 0x19
 7832 1b06 F20C0000 		.4byte	.LASF167
 7833 1b0a 01       		.byte	0x1
 7834 1b0b 4A11     		.2byte	0x114a
 7835 1b0d 35010000 		.4byte	0x135
 7836 1b11 D90D0000 		.4byte	.LLST95
 7837 1b15 19       		.uleb128 0x19
 7838 1b16 27020000 		.4byte	.LASF93
 7839 1b1a 01       		.byte	0x1
 7840 1b1b 4A11     		.2byte	0x114a
 7841 1b1d 4B010000 		.4byte	0x14b
 7842 1b21 050E0000 		.4byte	.LLST96
 7843 1b25 1A       		.uleb128 0x1a
 7844 1b26 2E0E0000 		.4byte	.LASF168
 7845 1b2a 01       		.byte	0x1
 7846 1b2b 4C11     		.2byte	0x114c
 7847 1b2d EB000000 		.4byte	0xeb
 7848 1b31 310E0000 		.4byte	.LLST97
 7849 1b35 1F       		.uleb128 0x1f
 7850 1b36 0A000000 		.4byte	.LVL328
 7851 1b3a 35220000 		.4byte	0x2235
 7852 1b3e 25       		.uleb128 0x25
 7853 1b3f 2A000000 		.4byte	.LVL329
 7854 1b43 C0070000 		.4byte	0x7c0
 7855 1b47 571B0000 		.4byte	0x1b57
 7856 1b4b 21       		.uleb128 0x21
 7857 1b4c 01       		.uleb128 0x1
 7858 1b4d 50       		.byte	0x50
 7859 1b4e 02       		.uleb128 0x2
 7860 1b4f 74       		.byte	0x74
 7861 1b50 00       		.sleb128 0
 7862 1b51 21       		.uleb128 0x21
 7863 1b52 01       		.uleb128 0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 241


 7864 1b53 51       		.byte	0x51
 7865 1b54 01       		.uleb128 0x1
 7866 1b55 31       		.byte	0x31
 7867 1b56 00       		.byte	0
 7868 1b57 1F       		.uleb128 0x1f
 7869 1b58 3E000000 		.4byte	.LVL330
 7870 1b5c 4C220000 		.4byte	0x224c
 7871 1b60 1F       		.uleb128 0x1f
 7872 1b61 42000000 		.4byte	.LVL331
 7873 1b65 35220000 		.4byte	0x2235
 7874 1b69 1F       		.uleb128 0x1f
 7875 1b6a 74000000 		.4byte	.LVL333
 7876 1b6e 4C220000 		.4byte	0x224c
 7877 1b72 00       		.byte	0
 7878 1b73 27       		.uleb128 0x27
 7879 1b74 1E0E0000 		.4byte	.LASF169
 7880 1b78 01       		.byte	0x1
 7881 1b79 8E11     		.2byte	0x118e
 7882 1b7b 35010000 		.4byte	0x135
 7883 1b7f 00000000 		.4byte	.LFB179
 7884 1b83 A4000000 		.4byte	.LFE179-.LFB179
 7885 1b87 01       		.uleb128 0x1
 7886 1b88 9C       		.byte	0x9c
 7887 1b89 1B1C0000 		.4byte	0x1c1b
 7888 1b8d 19       		.uleb128 0x19
 7889 1b8e 06060000 		.4byte	.LASF170
 7890 1b92 01       		.byte	0x1
 7891 1b93 8E11     		.2byte	0x118e
 7892 1b95 EB000000 		.4byte	0xeb
 7893 1b99 4F0E0000 		.4byte	.LLST98
 7894 1b9d 19       		.uleb128 0x19
 7895 1b9e B00E0000 		.4byte	.LASF171
 7896 1ba2 01       		.byte	0x1
 7897 1ba3 8E11     		.2byte	0x118e
 7898 1ba5 EB000000 		.4byte	0xeb
 7899 1ba9 7B0E0000 		.4byte	.LLST99
 7900 1bad 19       		.uleb128 0x19
 7901 1bae 33080000 		.4byte	.LASF172
 7902 1bb2 01       		.byte	0x1
 7903 1bb3 8E11     		.2byte	0x118e
 7904 1bb5 1B1C0000 		.4byte	0x1c1b
 7905 1bb9 C00E0000 		.4byte	.LLST100
 7906 1bbd 19       		.uleb128 0x19
 7907 1bbe 27020000 		.4byte	.LASF93
 7908 1bc2 01       		.byte	0x1
 7909 1bc3 8E11     		.2byte	0x118e
 7910 1bc5 4B010000 		.4byte	0x14b
 7911 1bc9 050F0000 		.4byte	.LLST101
 7912 1bcd 1A       		.uleb128 0x1a
 7913 1bce B9040000 		.4byte	.LASF74
 7914 1bd2 01       		.byte	0x1
 7915 1bd3 9011     		.2byte	0x1190
 7916 1bd5 35010000 		.4byte	0x135
 7917 1bd9 310F0000 		.4byte	.LLST102
 7918 1bdd 1F       		.uleb128 0x1f
 7919 1bde 0E000000 		.4byte	.LVL336
 7920 1be2 35220000 		.4byte	0x2235
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 242


 7921 1be6 25       		.uleb128 0x25
 7922 1be7 40000000 		.4byte	.LVL337
 7923 1beb C0070000 		.4byte	0x7c0
 7924 1bef FF1B0000 		.4byte	0x1bff
 7925 1bf3 21       		.uleb128 0x21
 7926 1bf4 01       		.uleb128 0x1
 7927 1bf5 50       		.byte	0x50
 7928 1bf6 02       		.uleb128 0x2
 7929 1bf7 76       		.byte	0x76
 7930 1bf8 00       		.sleb128 0
 7931 1bf9 21       		.uleb128 0x21
 7932 1bfa 01       		.uleb128 0x1
 7933 1bfb 51       		.byte	0x51
 7934 1bfc 01       		.uleb128 0x1
 7935 1bfd 31       		.byte	0x31
 7936 1bfe 00       		.byte	0
 7937 1bff 1F       		.uleb128 0x1f
 7938 1c00 54000000 		.4byte	.LVL338
 7939 1c04 4C220000 		.4byte	0x224c
 7940 1c08 1F       		.uleb128 0x1f
 7941 1c09 58000000 		.4byte	.LVL339
 7942 1c0d 35220000 		.4byte	0x2235
 7943 1c11 1F       		.uleb128 0x1f
 7944 1c12 98000000 		.4byte	.LVL345
 7945 1c16 4C220000 		.4byte	0x224c
 7946 1c1a 00       		.byte	0
 7947 1c1b 06       		.uleb128 0x6
 7948 1c1c 04       		.byte	0x4
 7949 1c1d EB000000 		.4byte	0xeb
 7950 1c21 27       		.uleb128 0x27
 7951 1c22 140D0000 		.4byte	.LASF173
 7952 1c26 01       		.byte	0x1
 7953 1c27 DE11     		.2byte	0x11de
 7954 1c29 35010000 		.4byte	0x135
 7955 1c2d 00000000 		.4byte	.LFB180
 7956 1c31 E4000000 		.4byte	.LFE180-.LFB180
 7957 1c35 01       		.uleb128 0x1
 7958 1c36 9C       		.byte	0x9c
 7959 1c37 2E1D0000 		.4byte	0x1d2e
 7960 1c3b 19       		.uleb128 0x19
 7961 1c3c 71050000 		.4byte	.LASF174
 7962 1c40 01       		.byte	0x1
 7963 1c41 DE11     		.2byte	0x11de
 7964 1c43 43020000 		.4byte	0x243
 7965 1c47 5B0F0000 		.4byte	.LLST103
 7966 1c4b 19       		.uleb128 0x19
 7967 1c4c 84000000 		.4byte	.LASF175
 7968 1c50 01       		.byte	0x1
 7969 1c51 DE11     		.2byte	0x11de
 7970 1c53 EB000000 		.4byte	0xeb
 7971 1c57 870F0000 		.4byte	.LLST104
 7972 1c5b 19       		.uleb128 0x19
 7973 1c5c 80020000 		.4byte	.LASF176
 7974 1c60 01       		.byte	0x1
 7975 1c61 DE11     		.2byte	0x11de
 7976 1c63 79020000 		.4byte	0x279
 7977 1c67 CC0F0000 		.4byte	.LLST105
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 243


 7978 1c6b 19       		.uleb128 0x19
 7979 1c6c C2030000 		.4byte	.LASF177
 7980 1c70 01       		.byte	0x1
 7981 1c71 DE11     		.2byte	0x11de
 7982 1c73 1B1C0000 		.4byte	0x1c1b
 7983 1c77 ED0F0000 		.4byte	.LLST106
 7984 1c7b 1A       		.uleb128 0x1a
 7985 1c7c F1050000 		.4byte	.LASF75
 7986 1c80 01       		.byte	0x1
 7987 1c81 E011     		.2byte	0x11e0
 7988 1c83 AF040000 		.4byte	0x4af
 7989 1c87 32100000 		.4byte	.LLST107
 7990 1c8b 1A       		.uleb128 0x1a
 7991 1c8c B9040000 		.4byte	.LASF74
 7992 1c90 01       		.byte	0x1
 7993 1c91 E111     		.2byte	0x11e1
 7994 1c93 35010000 		.4byte	0x135
 7995 1c97 53100000 		.4byte	.LLST108
 7996 1c9b 1A       		.uleb128 0x1a
 7997 1c9c FD020000 		.4byte	.LASF178
 7998 1ca0 01       		.byte	0x1
 7999 1ca1 E211     		.2byte	0x11e2
 8000 1ca3 CA000000 		.4byte	0xca
 8001 1ca7 7D100000 		.4byte	.LLST109
 8002 1cab 2A       		.uleb128 0x2a
 8003 1cac B1030000 		.4byte	0x3b1
 8004 1cb0 04000000 		.4byte	.LBB170
 8005 1cb4 1A000000 		.4byte	.LBE170-.LBB170
 8006 1cb8 01       		.byte	0x1
 8007 1cb9 E411     		.2byte	0x11e4
 8008 1cbb CF1C0000 		.4byte	0x1ccf
 8009 1cbf 1C       		.uleb128 0x1c
 8010 1cc0 04000000 		.4byte	.LBB171
 8011 1cc4 1A000000 		.4byte	.LBE171-.LBB171
 8012 1cc8 1D       		.uleb128 0x1d
 8013 1cc9 BD030000 		.4byte	0x3bd
 8014 1ccd 00       		.byte	0
 8015 1cce 00       		.byte	0
 8016 1ccf 2A       		.uleb128 0x2a
 8017 1cd0 B1030000 		.4byte	0x3b1
 8018 1cd4 9E000000 		.4byte	.LBB172
 8019 1cd8 12000000 		.4byte	.LBE172-.LBB172
 8020 1cdc 01       		.byte	0x1
 8021 1cdd 1C12     		.2byte	0x121c
 8022 1cdf F31C0000 		.4byte	0x1cf3
 8023 1ce3 1C       		.uleb128 0x1c
 8024 1ce4 9E000000 		.4byte	.LBB173
 8025 1ce8 12000000 		.4byte	.LBE173-.LBB173
 8026 1cec 1D       		.uleb128 0x1d
 8027 1ced BD030000 		.4byte	0x3bd
 8028 1cf1 00       		.byte	0
 8029 1cf2 00       		.byte	0
 8030 1cf3 1F       		.uleb128 0x1f
 8031 1cf4 22000000 		.4byte	.LVL352
 8032 1cf8 35220000 		.4byte	0x2235
 8033 1cfc 25       		.uleb128 0x25
 8034 1cfd 78000000 		.4byte	.LVL357
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 244


 8035 1d01 57220000 		.4byte	0x2257
 8036 1d05 101D0000 		.4byte	0x1d10
 8037 1d09 21       		.uleb128 0x21
 8038 1d0a 01       		.uleb128 0x1
 8039 1d0b 50       		.byte	0x50
 8040 1d0c 02       		.uleb128 0x2
 8041 1d0d 76       		.byte	0x76
 8042 1d0e 00       		.sleb128 0
 8043 1d0f 00       		.byte	0
 8044 1d10 25       		.uleb128 0x25
 8045 1d11 9A000000 		.4byte	.LVL358
 8046 1d15 40220000 		.4byte	0x2240
 8047 1d19 241D0000 		.4byte	0x1d24
 8048 1d1d 21       		.uleb128 0x21
 8049 1d1e 01       		.uleb128 0x1
 8050 1d1f 51       		.byte	0x51
 8051 1d20 02       		.uleb128 0x2
 8052 1d21 76       		.byte	0x76
 8053 1d22 00       		.sleb128 0
 8054 1d23 00       		.byte	0
 8055 1d24 1F       		.uleb128 0x1f
 8056 1d25 D2000000 		.4byte	.LVL360
 8057 1d29 4C220000 		.4byte	0x224c
 8058 1d2d 00       		.byte	0
 8059 1d2e 27       		.uleb128 0x27
 8060 1d2f E4000000 		.4byte	.LASF179
 8061 1d33 01       		.byte	0x1
 8062 1d34 4812     		.2byte	0x1248
 8063 1d36 35010000 		.4byte	0x135
 8064 1d3a 00000000 		.4byte	.LFB181
 8065 1d3e 20010000 		.4byte	.LFE181-.LFB181
 8066 1d42 01       		.uleb128 0x1
 8067 1d43 9C       		.byte	0x9c
 8068 1d44 AE1E0000 		.4byte	0x1eae
 8069 1d48 19       		.uleb128 0x19
 8070 1d49 71050000 		.4byte	.LASF174
 8071 1d4d 01       		.byte	0x1
 8072 1d4e 4812     		.2byte	0x1248
 8073 1d50 43020000 		.4byte	0x243
 8074 1d54 90100000 		.4byte	.LLST110
 8075 1d58 19       		.uleb128 0x19
 8076 1d59 84000000 		.4byte	.LASF175
 8077 1d5d 01       		.byte	0x1
 8078 1d5e 4812     		.2byte	0x1248
 8079 1d60 EB000000 		.4byte	0xeb
 8080 1d64 BC100000 		.4byte	.LLST111
 8081 1d68 19       		.uleb128 0x19
 8082 1d69 80020000 		.4byte	.LASF176
 8083 1d6d 01       		.byte	0x1
 8084 1d6e 4812     		.2byte	0x1248
 8085 1d70 79020000 		.4byte	0x279
 8086 1d74 01110000 		.4byte	.LLST112
 8087 1d78 19       		.uleb128 0x19
 8088 1d79 C2030000 		.4byte	.LASF177
 8089 1d7d 01       		.byte	0x1
 8090 1d7e 4812     		.2byte	0x1248
 8091 1d80 1B1C0000 		.4byte	0x1c1b
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 245


 8092 1d84 22110000 		.4byte	.LLST113
 8093 1d88 19       		.uleb128 0x19
 8094 1d89 E3020000 		.4byte	.LASF180
 8095 1d8d 01       		.byte	0x1
 8096 1d8e 4812     		.2byte	0x1248
 8097 1d90 AE1E0000 		.4byte	0x1eae
 8098 1d94 67110000 		.4byte	.LLST114
 8099 1d98 1A       		.uleb128 0x1a
 8100 1d99 F1050000 		.4byte	.LASF75
 8101 1d9d 01       		.byte	0x1
 8102 1d9e 4A12     		.2byte	0x124a
 8103 1da0 AF040000 		.4byte	0x4af
 8104 1da4 87110000 		.4byte	.LLST115
 8105 1da8 1A       		.uleb128 0x1a
 8106 1da9 FD020000 		.4byte	.LASF178
 8107 1dad 01       		.byte	0x1
 8108 1dae 4B12     		.2byte	0x124b
 8109 1db0 CA000000 		.4byte	0xca
 8110 1db4 A8110000 		.4byte	.LLST116
 8111 1db8 1A       		.uleb128 0x1a
 8112 1db9 B9040000 		.4byte	.LASF74
 8113 1dbd 01       		.byte	0x1
 8114 1dbe 4C12     		.2byte	0x124c
 8115 1dc0 35010000 		.4byte	0x135
 8116 1dc4 BB110000 		.4byte	.LLST117
 8117 1dc8 2B       		.uleb128 0x2b
 8118 1dc9 F50A0000 		.4byte	.LASF113
 8119 1dcd 01       		.byte	0x1
 8120 1dce 4D12     		.2byte	0x124d
 8121 1dd0 40010000 		.4byte	0x140
 8122 1dd4 2A       		.uleb128 0x2a
 8123 1dd5 B1030000 		.4byte	0x3b1
 8124 1dd9 08000000 		.4byte	.LBB174
 8125 1ddd 1A000000 		.4byte	.LBE174-.LBB174
 8126 1de1 01       		.byte	0x1
 8127 1de2 4F12     		.2byte	0x124f
 8128 1de4 F81D0000 		.4byte	0x1df8
 8129 1de8 1C       		.uleb128 0x1c
 8130 1de9 08000000 		.4byte	.LBB175
 8131 1ded 1A000000 		.4byte	.LBE175-.LBB175
 8132 1df1 1D       		.uleb128 0x1d
 8133 1df2 BD030000 		.4byte	0x3bd
 8134 1df6 00       		.byte	0
 8135 1df7 00       		.byte	0
 8136 1df8 2A       		.uleb128 0x2a
 8137 1df9 C9030000 		.4byte	0x3c9
 8138 1dfd 26000000 		.4byte	.LBB176
 8139 1e01 14000000 		.4byte	.LBE176-.LBB176
 8140 1e05 01       		.byte	0x1
 8141 1e06 6512     		.2byte	0x1265
 8142 1e08 211E0000 		.4byte	0x1e21
 8143 1e0c 1C       		.uleb128 0x1c
 8144 1e0d 26000000 		.4byte	.LBB177
 8145 1e11 14000000 		.4byte	.LBE177-.LBB177
 8146 1e15 1D       		.uleb128 0x1d
 8147 1e16 D9030000 		.4byte	0x3d9
 8148 1e1a 1D       		.uleb128 0x1d
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 246


 8149 1e1b E4030000 		.4byte	0x3e4
 8150 1e1f 00       		.byte	0
 8151 1e20 00       		.byte	0
 8152 1e21 2A       		.uleb128 0x2a
 8153 1e22 B1030000 		.4byte	0x3b1
 8154 1e26 98000000 		.4byte	.LBB178
 8155 1e2a 12000000 		.4byte	.LBE178-.LBB178
 8156 1e2e 01       		.byte	0x1
 8157 1e2f 9612     		.2byte	0x1296
 8158 1e31 451E0000 		.4byte	0x1e45
 8159 1e35 1C       		.uleb128 0x1c
 8160 1e36 98000000 		.4byte	.LBB179
 8161 1e3a 12000000 		.4byte	.LBE179-.LBB179
 8162 1e3e 1D       		.uleb128 0x1d
 8163 1e3f BD030000 		.4byte	0x3bd
 8164 1e43 00       		.byte	0
 8165 1e44 00       		.byte	0
 8166 1e45 2A       		.uleb128 0x2a
 8167 1e46 F0030000 		.4byte	0x3f0
 8168 1e4a 08010000 		.4byte	.LBB180
 8169 1e4e 04000000 		.4byte	.LBE180-.LBB180
 8170 1e52 01       		.byte	0x1
 8171 1e53 BA12     		.2byte	0x12ba
 8172 1e55 631E0000 		.4byte	0x1e63
 8173 1e59 2C       		.uleb128 0x2c
 8174 1e5a FC030000 		.4byte	0x3fc
 8175 1e5e E5110000 		.4byte	.LLST118
 8176 1e62 00       		.byte	0
 8177 1e63 1F       		.uleb128 0x1f
 8178 1e64 26000000 		.4byte	.LVL366
 8179 1e68 7A220000 		.4byte	0x227a
 8180 1e6c 25       		.uleb128 0x25
 8181 1e6d BC000000 		.4byte	.LVL372
 8182 1e71 57220000 		.4byte	0x2257
 8183 1e75 801E0000 		.4byte	0x1e80
 8184 1e79 21       		.uleb128 0x21
 8185 1e7a 01       		.uleb128 0x1
 8186 1e7b 50       		.byte	0x50
 8187 1e7c 02       		.uleb128 0x2
 8188 1e7d 78       		.byte	0x78
 8189 1e7e 00       		.sleb128 0
 8190 1e7f 00       		.byte	0
 8191 1e80 25       		.uleb128 0x25
 8192 1e81 DE000000 		.4byte	.LVL373
 8193 1e85 40220000 		.4byte	0x2240
 8194 1e89 941E0000 		.4byte	0x1e94
 8195 1e8d 21       		.uleb128 0x21
 8196 1e8e 01       		.uleb128 0x1
 8197 1e8f 51       		.byte	0x51
 8198 1e90 02       		.uleb128 0x2
 8199 1e91 78       		.byte	0x78
 8200 1e92 00       		.sleb128 0
 8201 1e93 00       		.byte	0
 8202 1e94 20       		.uleb128 0x20
 8203 1e95 EA000000 		.4byte	.LVL375
 8204 1e99 40220000 		.4byte	0x2240
 8205 1e9d 21       		.uleb128 0x21
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 247


 8206 1e9e 01       		.uleb128 0x1
 8207 1e9f 50       		.byte	0x50
 8208 1ea0 05       		.uleb128 0x5
 8209 1ea1 03       		.byte	0x3
 8210 1ea2 14000000 		.4byte	.LANCHOR0+20
 8211 1ea6 21       		.uleb128 0x21
 8212 1ea7 01       		.uleb128 0x1
 8213 1ea8 51       		.byte	0x51
 8214 1ea9 02       		.uleb128 0x2
 8215 1eaa 74       		.byte	0x74
 8216 1eab 18       		.sleb128 24
 8217 1eac 00       		.byte	0
 8218 1ead 00       		.byte	0
 8219 1eae 06       		.uleb128 0x6
 8220 1eaf 04       		.byte	0x4
 8221 1eb0 35010000 		.4byte	0x135
 8222 1eb4 29       		.uleb128 0x29
 8223 1eb5 AB0A0000 		.4byte	.LASF181
 8224 1eb9 01       		.byte	0x1
 8225 1eba C412     		.2byte	0x12c4
 8226 1ebc 00000000 		.4byte	.LFB182
 8227 1ec0 CC000000 		.4byte	.LFE182-.LFB182
 8228 1ec4 01       		.uleb128 0x1
 8229 1ec5 9C       		.byte	0x9c
 8230 1ec6 F01F0000 		.4byte	0x1ff0
 8231 1eca 19       		.uleb128 0x19
 8232 1ecb 71050000 		.4byte	.LASF174
 8233 1ecf 01       		.byte	0x1
 8234 1ed0 C412     		.2byte	0x12c4
 8235 1ed2 43020000 		.4byte	0x243
 8236 1ed6 F8110000 		.4byte	.LLST119
 8237 1eda 19       		.uleb128 0x19
 8238 1edb E3020000 		.4byte	.LASF180
 8239 1edf 01       		.byte	0x1
 8240 1ee0 C412     		.2byte	0x12c4
 8241 1ee2 AE1E0000 		.4byte	0x1eae
 8242 1ee6 24120000 		.4byte	.LLST120
 8243 1eea 1A       		.uleb128 0x1a
 8244 1eeb F1050000 		.4byte	.LASF75
 8245 1eef 01       		.byte	0x1
 8246 1ef0 C612     		.2byte	0x12c6
 8247 1ef2 AF040000 		.4byte	0x4af
 8248 1ef6 50120000 		.4byte	.LLST121
 8249 1efa 1A       		.uleb128 0x1a
 8250 1efb FD020000 		.4byte	.LASF178
 8251 1eff 01       		.byte	0x1
 8252 1f00 C712     		.2byte	0x12c7
 8253 1f02 CA000000 		.4byte	0xca
 8254 1f06 71120000 		.4byte	.LLST122
 8255 1f0a 2B       		.uleb128 0x2b
 8256 1f0b F50A0000 		.4byte	.LASF113
 8257 1f0f 01       		.byte	0x1
 8258 1f10 C812     		.2byte	0x12c8
 8259 1f12 40010000 		.4byte	0x140
 8260 1f16 2A       		.uleb128 0x2a
 8261 1f17 B1030000 		.4byte	0x3b1
 8262 1f1b 04000000 		.4byte	.LBB182
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 248


 8263 1f1f 16000000 		.4byte	.LBE182-.LBB182
 8264 1f23 01       		.byte	0x1
 8265 1f24 CA12     		.2byte	0x12ca
 8266 1f26 3A1F0000 		.4byte	0x1f3a
 8267 1f2a 1C       		.uleb128 0x1c
 8268 1f2b 04000000 		.4byte	.LBB183
 8269 1f2f 16000000 		.4byte	.LBE183-.LBB183
 8270 1f33 1D       		.uleb128 0x1d
 8271 1f34 BD030000 		.4byte	0x3bd
 8272 1f38 00       		.byte	0
 8273 1f39 00       		.byte	0
 8274 1f3a 2A       		.uleb128 0x2a
 8275 1f3b C9030000 		.4byte	0x3c9
 8276 1f3f 1E000000 		.4byte	.LBB184
 8277 1f43 14000000 		.4byte	.LBE184-.LBB184
 8278 1f47 01       		.byte	0x1
 8279 1f48 E012     		.2byte	0x12e0
 8280 1f4a 631F0000 		.4byte	0x1f63
 8281 1f4e 1C       		.uleb128 0x1c
 8282 1f4f 1E000000 		.4byte	.LBB185
 8283 1f53 14000000 		.4byte	.LBE185-.LBB185
 8284 1f57 1D       		.uleb128 0x1d
 8285 1f58 D9030000 		.4byte	0x3d9
 8286 1f5c 1D       		.uleb128 0x1d
 8287 1f5d E4030000 		.4byte	0x3e4
 8288 1f61 00       		.byte	0
 8289 1f62 00       		.byte	0
 8290 1f63 2A       		.uleb128 0x2a
 8291 1f64 B1030000 		.4byte	0x3b1
 8292 1f68 4C000000 		.4byte	.LBB186
 8293 1f6c 12000000 		.4byte	.LBE186-.LBB186
 8294 1f70 01       		.byte	0x1
 8295 1f71 F012     		.2byte	0x12f0
 8296 1f73 871F0000 		.4byte	0x1f87
 8297 1f77 1C       		.uleb128 0x1c
 8298 1f78 4C000000 		.4byte	.LBB187
 8299 1f7c 12000000 		.4byte	.LBE187-.LBB187
 8300 1f80 1D       		.uleb128 0x1d
 8301 1f81 BD030000 		.4byte	0x3bd
 8302 1f85 00       		.byte	0
 8303 1f86 00       		.byte	0
 8304 1f87 2A       		.uleb128 0x2a
 8305 1f88 F0030000 		.4byte	0x3f0
 8306 1f8c BA000000 		.4byte	.LBB188
 8307 1f90 12000000 		.4byte	.LBE188-.LBB188
 8308 1f94 01       		.byte	0x1
 8309 1f95 1413     		.2byte	0x1314
 8310 1f97 A51F0000 		.4byte	0x1fa5
 8311 1f9b 2C       		.uleb128 0x2c
 8312 1f9c FC030000 		.4byte	0x3fc
 8313 1fa0 84120000 		.4byte	.LLST123
 8314 1fa4 00       		.byte	0
 8315 1fa5 1F       		.uleb128 0x1f
 8316 1fa6 1E000000 		.4byte	.LVL381
 8317 1faa 7A220000 		.4byte	0x227a
 8318 1fae 25       		.uleb128 0x25
 8319 1faf 6E000000 		.4byte	.LVL385
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 249


 8320 1fb3 57220000 		.4byte	0x2257
 8321 1fb7 C21F0000 		.4byte	0x1fc2
 8322 1fbb 21       		.uleb128 0x21
 8323 1fbc 01       		.uleb128 0x1
 8324 1fbd 50       		.byte	0x50
 8325 1fbe 02       		.uleb128 0x2
 8326 1fbf 77       		.byte	0x77
 8327 1fc0 00       		.sleb128 0
 8328 1fc1 00       		.byte	0
 8329 1fc2 25       		.uleb128 0x25
 8330 1fc3 90000000 		.4byte	.LVL386
 8331 1fc7 40220000 		.4byte	0x2240
 8332 1fcb D61F0000 		.4byte	0x1fd6
 8333 1fcf 21       		.uleb128 0x21
 8334 1fd0 01       		.uleb128 0x1
 8335 1fd1 51       		.byte	0x51
 8336 1fd2 02       		.uleb128 0x2
 8337 1fd3 77       		.byte	0x77
 8338 1fd4 00       		.sleb128 0
 8339 1fd5 00       		.byte	0
 8340 1fd6 20       		.uleb128 0x20
 8341 1fd7 9C000000 		.4byte	.LVL387
 8342 1fdb 40220000 		.4byte	0x2240
 8343 1fdf 21       		.uleb128 0x21
 8344 1fe0 01       		.uleb128 0x1
 8345 1fe1 50       		.byte	0x50
 8346 1fe2 05       		.uleb128 0x5
 8347 1fe3 03       		.byte	0x3
 8348 1fe4 14000000 		.4byte	.LANCHOR0+20
 8349 1fe8 21       		.uleb128 0x21
 8350 1fe9 01       		.uleb128 0x1
 8351 1fea 51       		.byte	0x51
 8352 1feb 02       		.uleb128 0x2
 8353 1fec 74       		.byte	0x74
 8354 1fed 18       		.sleb128 24
 8355 1fee 00       		.byte	0
 8356 1fef 00       		.byte	0
 8357 1ff0 27       		.uleb128 0x27
 8358 1ff1 25010000 		.4byte	.LASF182
 8359 1ff5 01       		.byte	0x1
 8360 1ff6 1D13     		.2byte	0x131d
 8361 1ff8 35010000 		.4byte	0x135
 8362 1ffc 00000000 		.4byte	.LFB183
 8363 2000 34000000 		.4byte	.LFE183-.LFB183
 8364 2004 01       		.uleb128 0x1
 8365 2005 9C       		.byte	0x9c
 8366 2006 4D200000 		.4byte	0x204d
 8367 200a 19       		.uleb128 0x19
 8368 200b 51070000 		.4byte	.LASF78
 8369 200f 01       		.byte	0x1
 8370 2010 1D13     		.2byte	0x131d
 8371 2012 43020000 		.4byte	0x243
 8372 2016 97120000 		.4byte	.LLST124
 8373 201a 1A       		.uleb128 0x1a
 8374 201b F1050000 		.4byte	.LASF75
 8375 201f 01       		.byte	0x1
 8376 2020 1F13     		.2byte	0x131f
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 250


 8377 2022 AF040000 		.4byte	0x4af
 8378 2026 AA120000 		.4byte	.LLST125
 8379 202a 1A       		.uleb128 0x1a
 8380 202b B9040000 		.4byte	.LASF74
 8381 202f 01       		.byte	0x1
 8382 2030 2013     		.2byte	0x1320
 8383 2032 35010000 		.4byte	0x135
 8384 2036 C8120000 		.4byte	.LLST126
 8385 203a 1F       		.uleb128 0x1f
 8386 203b 10000000 		.4byte	.LVL393
 8387 203f 35220000 		.4byte	0x2235
 8388 2043 1F       		.uleb128 0x1f
 8389 2044 2A000000 		.4byte	.LVL398
 8390 2048 4C220000 		.4byte	0x224c
 8391 204c 00       		.byte	0
 8392 204d 0B       		.uleb128 0xb
 8393 204e 38020000 		.4byte	0x238
 8394 2052 5D200000 		.4byte	0x205d
 8395 2056 0C       		.uleb128 0xc
 8396 2057 A9000000 		.4byte	0xa9
 8397 205b 06       		.byte	0x6
 8398 205c 00       		.byte	0
 8399 205d 23       		.uleb128 0x23
 8400 205e 920C0000 		.4byte	.LASF183
 8401 2062 01       		.byte	0x1
 8402 2063 5F01     		.2byte	0x15f
 8403 2065 4D200000 		.4byte	0x204d
 8404 2069 05       		.uleb128 0x5
 8405 206a 03       		.byte	0x3
 8406 206b 30000000 		.4byte	pxReadyTasksLists
 8407 206f 23       		.uleb128 0x23
 8408 2070 E00C0000 		.4byte	.LASF184
 8409 2074 01       		.byte	0x1
 8410 2075 6001     		.2byte	0x160
 8411 2077 38020000 		.4byte	0x238
 8412 207b 05       		.uleb128 0x5
 8413 207c 03       		.byte	0x3
 8414 207d BC000000 		.4byte	xDelayedTaskList1
 8415 2081 23       		.uleb128 0x23
 8416 2082 C1040000 		.4byte	.LASF185
 8417 2086 01       		.byte	0x1
 8418 2087 6101     		.2byte	0x161
 8419 2089 38020000 		.4byte	0x238
 8420 208d 05       		.uleb128 0x5
 8421 208e 03       		.byte	0x3
 8422 208f D0000000 		.4byte	xDelayedTaskList2
 8423 2093 23       		.uleb128 0x23
 8424 2094 4D0E0000 		.4byte	.LASF186
 8425 2098 01       		.byte	0x1
 8426 2099 6201     		.2byte	0x162
 8427 209b A5200000 		.4byte	0x20a5
 8428 209f 05       		.uleb128 0x5
 8429 20a0 03       		.byte	0x3
 8430 20a1 28000000 		.4byte	pxDelayedTaskList
 8431 20a5 08       		.uleb128 0x8
 8432 20a6 DD100000 		.4byte	0x10dd
 8433 20aa 23       		.uleb128 0x23
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 251


 8434 20ab 10070000 		.4byte	.LASF187
 8435 20af 01       		.byte	0x1
 8436 20b0 6301     		.2byte	0x163
 8437 20b2 A5200000 		.4byte	0x20a5
 8438 20b6 05       		.uleb128 0x5
 8439 20b7 03       		.byte	0x3
 8440 20b8 F8000000 		.4byte	pxOverflowDelayedTaskList
 8441 20bc 23       		.uleb128 0x23
 8442 20bd D1010000 		.4byte	.LASF188
 8443 20c1 01       		.byte	0x1
 8444 20c2 6401     		.2byte	0x164
 8445 20c4 38020000 		.4byte	0x238
 8446 20c8 05       		.uleb128 0x5
 8447 20c9 03       		.byte	0x3
 8448 20ca 14000000 		.4byte	xPendingReadyList
 8449 20ce 23       		.uleb128 0x23
 8450 20cf 57070000 		.4byte	.LASF189
 8451 20d3 01       		.byte	0x1
 8452 20d4 6801     		.2byte	0x168
 8453 20d6 38020000 		.4byte	0x238
 8454 20da 05       		.uleb128 0x5
 8455 20db 03       		.byte	0x3
 8456 20dc E4000000 		.4byte	xTasksWaitingTermination
 8457 20e0 23       		.uleb128 0x23
 8458 20e1 FF0B0000 		.4byte	.LASF190
 8459 20e5 01       		.byte	0x1
 8460 20e6 6901     		.2byte	0x169
 8461 20e8 2D020000 		.4byte	0x22d
 8462 20ec 05       		.uleb128 0x5
 8463 20ed 03       		.byte	0x3
 8464 20ee 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 8465 20f2 23       		.uleb128 0x23
 8466 20f3 FE000000 		.4byte	.LASF191
 8467 20f7 01       		.byte	0x1
 8468 20f8 6F01     		.2byte	0x16f
 8469 20fa 38020000 		.4byte	0x238
 8470 20fe 05       		.uleb128 0x5
 8471 20ff 03       		.byte	0x3
 8472 2100 00000000 		.4byte	xSuspendedTaskList
 8473 2104 23       		.uleb128 0x23
 8474 2105 6D000000 		.4byte	.LASF192
 8475 2109 01       		.byte	0x1
 8476 210a 7401     		.2byte	0x174
 8477 210c 2D020000 		.4byte	0x22d
 8478 2110 05       		.uleb128 0x5
 8479 2111 03       		.byte	0x3
 8480 2112 FC000000 		.4byte	uxCurrentNumberOfTasks
 8481 2116 23       		.uleb128 0x23
 8482 2117 270D0000 		.4byte	.LASF193
 8483 211b 01       		.byte	0x1
 8484 211c 7501     		.2byte	0x175
 8485 211e 28210000 		.4byte	0x2128
 8486 2122 05       		.uleb128 0x5
 8487 2123 03       		.byte	0x3
 8488 2124 14010000 		.4byte	xTickCount
 8489 2128 08       		.uleb128 0x8
 8490 2129 4B010000 		.4byte	0x14b
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 252


 8491 212d 23       		.uleb128 0x23
 8492 212e E7070000 		.4byte	.LASF194
 8493 2132 01       		.byte	0x1
 8494 2133 7601     		.2byte	0x176
 8495 2135 2D020000 		.4byte	0x22d
 8496 2139 05       		.uleb128 0x5
 8497 213a 03       		.byte	0x3
 8498 213b 0C010000 		.4byte	uxTopReadyPriority
 8499 213f 23       		.uleb128 0x23
 8500 2140 0E0A0000 		.4byte	.LASF195
 8501 2144 01       		.byte	0x1
 8502 2145 7701     		.2byte	0x177
 8503 2147 51210000 		.4byte	0x2151
 8504 214b 05       		.uleb128 0x5
 8505 214c 03       		.byte	0x3
 8506 214d 04010000 		.4byte	xSchedulerRunning
 8507 2151 08       		.uleb128 0x8
 8508 2152 35010000 		.4byte	0x135
 8509 2156 23       		.uleb128 0x23
 8510 2157 5E0A0000 		.4byte	.LASF196
 8511 215b 01       		.byte	0x1
 8512 215c 7801     		.2byte	0x178
 8513 215e 2D020000 		.4byte	0x22d
 8514 2162 05       		.uleb128 0x5
 8515 2163 03       		.byte	0x3
 8516 2164 24010000 		.4byte	uxPendedTicks
 8517 2168 23       		.uleb128 0x23
 8518 2169 A6000000 		.4byte	.LASF197
 8519 216d 01       		.byte	0x1
 8520 216e 7901     		.2byte	0x179
 8521 2170 51210000 		.4byte	0x2151
 8522 2174 05       		.uleb128 0x5
 8523 2175 03       		.byte	0x3
 8524 2176 28010000 		.4byte	xYieldPending
 8525 217a 23       		.uleb128 0x23
 8526 217b 040D0000 		.4byte	.LASF198
 8527 217f 01       		.byte	0x1
 8528 2180 7A01     		.2byte	0x17a
 8529 2182 51210000 		.4byte	0x2151
 8530 2186 05       		.uleb128 0x5
 8531 2187 03       		.byte	0x3
 8532 2188 20010000 		.4byte	xNumOfOverflows
 8533 218c 23       		.uleb128 0x23
 8534 218d 6E0C0000 		.4byte	.LASF199
 8535 2191 01       		.byte	0x1
 8536 2192 7B01     		.2byte	0x17b
 8537 2194 40010000 		.4byte	0x140
 8538 2198 05       		.uleb128 0x5
 8539 2199 03       		.byte	0x3
 8540 219a 08010000 		.4byte	uxTaskNumber
 8541 219e 23       		.uleb128 0x23
 8542 219f A9070000 		.4byte	.LASF200
 8543 21a3 01       		.byte	0x1
 8544 21a4 7C01     		.2byte	0x17c
 8545 21a6 28210000 		.4byte	0x2128
 8546 21aa 05       		.uleb128 0x5
 8547 21ab 03       		.byte	0x3
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 253


 8548 21ac 2C000000 		.4byte	xNextTaskUnblockTime
 8549 21b0 23       		.uleb128 0x23
 8550 21b1 820C0000 		.4byte	.LASF201
 8551 21b5 01       		.byte	0x1
 8552 21b6 7D01     		.2byte	0x17d
 8553 21b8 43020000 		.4byte	0x243
 8554 21bc 05       		.uleb128 0x5
 8555 21bd 03       		.byte	0x3
 8556 21be 1C010000 		.4byte	xIdleTaskHandle
 8557 21c2 23       		.uleb128 0x23
 8558 21c3 7A040000 		.4byte	.LASF202
 8559 21c7 01       		.byte	0x1
 8560 21c8 8701     		.2byte	0x187
 8561 21ca 2D020000 		.4byte	0x22d
 8562 21ce 05       		.uleb128 0x5
 8563 21cf 03       		.byte	0x3
 8564 21d0 18010000 		.4byte	uxSchedulerSuspended
 8565 21d4 33       		.uleb128 0x33
 8566 21d5 99010000 		.4byte	.LASF203
 8567 21d9 09       		.byte	0x9
 8568 21da F907     		.2byte	0x7f9
 8569 21dc E0210000 		.4byte	0x21e0
 8570 21e0 08       		.uleb128 0x8
 8571 21e1 E0000000 		.4byte	0xe0
 8572 21e5 34       		.uleb128 0x34
 8573 21e6 BD060000 		.4byte	.LASF204
 8574 21ea 01       		.byte	0x1
 8575 21eb 5C01     		.2byte	0x15c
 8576 21ed F7210000 		.4byte	0x21f7
 8577 21f1 05       		.uleb128 0x5
 8578 21f2 03       		.byte	0x3
 8579 21f3 00000000 		.4byte	pxCurrentTCB
 8580 21f7 08       		.uleb128 0x8
 8581 21f8 AF040000 		.4byte	0x4af
 8582 21fc 35       		.uleb128 0x35
 8583 21fd 86060000 		.4byte	.LASF205
 8584 2201 86060000 		.4byte	.LASF205
 8585 2205 0A       		.byte	0xa
 8586 2206 82       		.byte	0x82
 8587 2207 35       		.uleb128 0x35
 8588 2208 4F0D0000 		.4byte	.LASF206
 8589 220c 4F0D0000 		.4byte	.LASF206
 8590 2210 0B       		.byte	0xb
 8591 2211 19       		.byte	0x19
 8592 2212 36       		.uleb128 0x36
 8593 2213 15040000 		.4byte	.LASF207
 8594 2217 15040000 		.4byte	.LASF207
 8595 221b 07       		.byte	0x7
 8596 221c 6301     		.2byte	0x163
 8597 221e 35       		.uleb128 0x35
 8598 221f 640D0000 		.4byte	.LASF208
 8599 2223 640D0000 		.4byte	.LASF208
 8600 2227 0A       		.byte	0xa
 8601 2228 66       		.byte	0x66
 8602 2229 36       		.uleb128 0x36
 8603 222a 0E0E0000 		.4byte	.LASF209
 8604 222e 0E0E0000 		.4byte	.LASF209
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 254


 8605 2232 07       		.byte	0x7
 8606 2233 5801     		.2byte	0x158
 8607 2235 35       		.uleb128 0x35
 8608 2236 CD0C0000 		.4byte	.LASF210
 8609 223a CD0C0000 		.4byte	.LASF210
 8610 223e 02       		.byte	0x2
 8611 223f 61       		.byte	0x61
 8612 2240 36       		.uleb128 0x36
 8613 2241 B3030000 		.4byte	.LASF211
 8614 2245 B3030000 		.4byte	.LASF211
 8615 2249 07       		.byte	0x7
 8616 224a 8501     		.2byte	0x185
 8617 224c 35       		.uleb128 0x35
 8618 224d 9C0B0000 		.4byte	.LASF212
 8619 2251 9C0B0000 		.4byte	.LASF212
 8620 2255 02       		.byte	0x2
 8621 2256 62       		.byte	0x62
 8622 2257 36       		.uleb128 0x36
 8623 2258 510C0000 		.4byte	.LASF213
 8624 225c 510C0000 		.4byte	.LASF213
 8625 2260 07       		.byte	0x7
 8626 2261 9401     		.2byte	0x194
 8627 2263 36       		.uleb128 0x36
 8628 2264 420B0000 		.4byte	.LASF214
 8629 2268 420B0000 		.4byte	.LASF214
 8630 226c 07       		.byte	0x7
 8631 226d 7001     		.2byte	0x170
 8632 226f 35       		.uleb128 0x35
 8633 2270 4C040000 		.4byte	.LASF215
 8634 2274 4C040000 		.4byte	.LASF215
 8635 2278 0A       		.byte	0xa
 8636 2279 81       		.byte	0x81
 8637 227a 35       		.uleb128 0x35
 8638 227b FB0E0000 		.4byte	.LASF216
 8639 227f FB0E0000 		.4byte	.LASF216
 8640 2283 02       		.byte	0x2
 8641 2284 75       		.byte	0x75
 8642 2285 36       		.uleb128 0x36
 8643 2286 92030000 		.4byte	.LASF217
 8644 228a 92030000 		.4byte	.LASF217
 8645 228e 0C       		.byte	0xc
 8646 228f EF04     		.2byte	0x4ef
 8647 2291 35       		.uleb128 0x35
 8648 2292 4C030000 		.4byte	.LASF218
 8649 2296 4C030000 		.4byte	.LASF218
 8650 229a 0A       		.byte	0xa
 8651 229b 8B       		.byte	0x8b
 8652 229c 35       		.uleb128 0x35
 8653 229d D5070000 		.4byte	.LASF219
 8654 22a1 D5070000 		.4byte	.LASF219
 8655 22a5 0A       		.byte	0xa
 8656 22a6 92       		.byte	0x92
 8657 22a7 36       		.uleb128 0x36
 8658 22a8 A8050000 		.4byte	.LASF220
 8659 22ac A8050000 		.4byte	.LASF220
 8660 22b0 01       		.byte	0x1
 8661 22b1 9701     		.2byte	0x197
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 255


 8662 22b3 00       		.byte	0
 8663              		.section	.debug_abbrev,"",%progbits
 8664              	.Ldebug_abbrev0:
 8665 0000 01       		.uleb128 0x1
 8666 0001 11       		.uleb128 0x11
 8667 0002 01       		.byte	0x1
 8668 0003 25       		.uleb128 0x25
 8669 0004 0E       		.uleb128 0xe
 8670 0005 13       		.uleb128 0x13
 8671 0006 0B       		.uleb128 0xb
 8672 0007 03       		.uleb128 0x3
 8673 0008 0E       		.uleb128 0xe
 8674 0009 1B       		.uleb128 0x1b
 8675 000a 0E       		.uleb128 0xe
 8676 000b 55       		.uleb128 0x55
 8677 000c 17       		.uleb128 0x17
 8678 000d 11       		.uleb128 0x11
 8679 000e 01       		.uleb128 0x1
 8680 000f 10       		.uleb128 0x10
 8681 0010 17       		.uleb128 0x17
 8682 0011 00       		.byte	0
 8683 0012 00       		.byte	0
 8684 0013 02       		.uleb128 0x2
 8685 0014 16       		.uleb128 0x16
 8686 0015 00       		.byte	0
 8687 0016 03       		.uleb128 0x3
 8688 0017 0E       		.uleb128 0xe
 8689 0018 3A       		.uleb128 0x3a
 8690 0019 0B       		.uleb128 0xb
 8691 001a 3B       		.uleb128 0x3b
 8692 001b 0B       		.uleb128 0xb
 8693 001c 49       		.uleb128 0x49
 8694 001d 13       		.uleb128 0x13
 8695 001e 00       		.byte	0
 8696 001f 00       		.byte	0
 8697 0020 03       		.uleb128 0x3
 8698 0021 24       		.uleb128 0x24
 8699 0022 00       		.byte	0
 8700 0023 0B       		.uleb128 0xb
 8701 0024 0B       		.uleb128 0xb
 8702 0025 3E       		.uleb128 0x3e
 8703 0026 0B       		.uleb128 0xb
 8704 0027 03       		.uleb128 0x3
 8705 0028 0E       		.uleb128 0xe
 8706 0029 00       		.byte	0
 8707 002a 00       		.byte	0
 8708 002b 04       		.uleb128 0x4
 8709 002c 24       		.uleb128 0x24
 8710 002d 00       		.byte	0
 8711 002e 0B       		.uleb128 0xb
 8712 002f 0B       		.uleb128 0xb
 8713 0030 3E       		.uleb128 0x3e
 8714 0031 0B       		.uleb128 0xb
 8715 0032 03       		.uleb128 0x3
 8716 0033 08       		.uleb128 0x8
 8717 0034 00       		.byte	0
 8718 0035 00       		.byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 256


 8719 0036 05       		.uleb128 0x5
 8720 0037 0F       		.uleb128 0xf
 8721 0038 00       		.byte	0
 8722 0039 0B       		.uleb128 0xb
 8723 003a 0B       		.uleb128 0xb
 8724 003b 00       		.byte	0
 8725 003c 00       		.byte	0
 8726 003d 06       		.uleb128 0x6
 8727 003e 0F       		.uleb128 0xf
 8728 003f 00       		.byte	0
 8729 0040 0B       		.uleb128 0xb
 8730 0041 0B       		.uleb128 0xb
 8731 0042 49       		.uleb128 0x49
 8732 0043 13       		.uleb128 0x13
 8733 0044 00       		.byte	0
 8734 0045 00       		.byte	0
 8735 0046 07       		.uleb128 0x7
 8736 0047 26       		.uleb128 0x26
 8737 0048 00       		.byte	0
 8738 0049 49       		.uleb128 0x49
 8739 004a 13       		.uleb128 0x13
 8740 004b 00       		.byte	0
 8741 004c 00       		.byte	0
 8742 004d 08       		.uleb128 0x8
 8743 004e 35       		.uleb128 0x35
 8744 004f 00       		.byte	0
 8745 0050 49       		.uleb128 0x49
 8746 0051 13       		.uleb128 0x13
 8747 0052 00       		.byte	0
 8748 0053 00       		.byte	0
 8749 0054 09       		.uleb128 0x9
 8750 0055 15       		.uleb128 0x15
 8751 0056 01       		.byte	0x1
 8752 0057 27       		.uleb128 0x27
 8753 0058 19       		.uleb128 0x19
 8754 0059 01       		.uleb128 0x1
 8755 005a 13       		.uleb128 0x13
 8756 005b 00       		.byte	0
 8757 005c 00       		.byte	0
 8758 005d 0A       		.uleb128 0xa
 8759 005e 05       		.uleb128 0x5
 8760 005f 00       		.byte	0
 8761 0060 49       		.uleb128 0x49
 8762 0061 13       		.uleb128 0x13
 8763 0062 00       		.byte	0
 8764 0063 00       		.byte	0
 8765 0064 0B       		.uleb128 0xb
 8766 0065 01       		.uleb128 0x1
 8767 0066 01       		.byte	0x1
 8768 0067 49       		.uleb128 0x49
 8769 0068 13       		.uleb128 0x13
 8770 0069 01       		.uleb128 0x1
 8771 006a 13       		.uleb128 0x13
 8772 006b 00       		.byte	0
 8773 006c 00       		.byte	0
 8774 006d 0C       		.uleb128 0xc
 8775 006e 21       		.uleb128 0x21
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 257


 8776 006f 00       		.byte	0
 8777 0070 49       		.uleb128 0x49
 8778 0071 13       		.uleb128 0x13
 8779 0072 2F       		.uleb128 0x2f
 8780 0073 0B       		.uleb128 0xb
 8781 0074 00       		.byte	0
 8782 0075 00       		.byte	0
 8783 0076 0D       		.uleb128 0xd
 8784 0077 13       		.uleb128 0x13
 8785 0078 01       		.byte	0x1
 8786 0079 03       		.uleb128 0x3
 8787 007a 0E       		.uleb128 0xe
 8788 007b 0B       		.uleb128 0xb
 8789 007c 0B       		.uleb128 0xb
 8790 007d 3A       		.uleb128 0x3a
 8791 007e 0B       		.uleb128 0xb
 8792 007f 3B       		.uleb128 0x3b
 8793 0080 0B       		.uleb128 0xb
 8794 0081 01       		.uleb128 0x1
 8795 0082 13       		.uleb128 0x13
 8796 0083 00       		.byte	0
 8797 0084 00       		.byte	0
 8798 0085 0E       		.uleb128 0xe
 8799 0086 0D       		.uleb128 0xd
 8800 0087 00       		.byte	0
 8801 0088 03       		.uleb128 0x3
 8802 0089 0E       		.uleb128 0xe
 8803 008a 3A       		.uleb128 0x3a
 8804 008b 0B       		.uleb128 0xb
 8805 008c 3B       		.uleb128 0x3b
 8806 008d 0B       		.uleb128 0xb
 8807 008e 49       		.uleb128 0x49
 8808 008f 13       		.uleb128 0x13
 8809 0090 38       		.uleb128 0x38
 8810 0091 0B       		.uleb128 0xb
 8811 0092 00       		.byte	0
 8812 0093 00       		.byte	0
 8813 0094 0F       		.uleb128 0xf
 8814 0095 04       		.uleb128 0x4
 8815 0096 01       		.byte	0x1
 8816 0097 0B       		.uleb128 0xb
 8817 0098 0B       		.uleb128 0xb
 8818 0099 49       		.uleb128 0x49
 8819 009a 13       		.uleb128 0x13
 8820 009b 3A       		.uleb128 0x3a
 8821 009c 0B       		.uleb128 0xb
 8822 009d 3B       		.uleb128 0x3b
 8823 009e 0B       		.uleb128 0xb
 8824 009f 01       		.uleb128 0x1
 8825 00a0 13       		.uleb128 0x13
 8826 00a1 00       		.byte	0
 8827 00a2 00       		.byte	0
 8828 00a3 10       		.uleb128 0x10
 8829 00a4 28       		.uleb128 0x28
 8830 00a5 00       		.byte	0
 8831 00a6 03       		.uleb128 0x3
 8832 00a7 0E       		.uleb128 0xe
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 258


 8833 00a8 1C       		.uleb128 0x1c
 8834 00a9 0B       		.uleb128 0xb
 8835 00aa 00       		.byte	0
 8836 00ab 00       		.byte	0
 8837 00ac 11       		.uleb128 0x11
 8838 00ad 13       		.uleb128 0x13
 8839 00ae 01       		.byte	0x1
 8840 00af 03       		.uleb128 0x3
 8841 00b0 0E       		.uleb128 0xe
 8842 00b1 0B       		.uleb128 0xb
 8843 00b2 0B       		.uleb128 0xb
 8844 00b3 3A       		.uleb128 0x3a
 8845 00b4 0B       		.uleb128 0xb
 8846 00b5 3B       		.uleb128 0x3b
 8847 00b6 05       		.uleb128 0x5
 8848 00b7 01       		.uleb128 0x1
 8849 00b8 13       		.uleb128 0x13
 8850 00b9 00       		.byte	0
 8851 00ba 00       		.byte	0
 8852 00bb 12       		.uleb128 0x12
 8853 00bc 0D       		.uleb128 0xd
 8854 00bd 00       		.byte	0
 8855 00be 03       		.uleb128 0x3
 8856 00bf 0E       		.uleb128 0xe
 8857 00c0 3A       		.uleb128 0x3a
 8858 00c1 0B       		.uleb128 0xb
 8859 00c2 3B       		.uleb128 0x3b
 8860 00c3 05       		.uleb128 0x5
 8861 00c4 49       		.uleb128 0x49
 8862 00c5 13       		.uleb128 0x13
 8863 00c6 38       		.uleb128 0x38
 8864 00c7 0B       		.uleb128 0xb
 8865 00c8 00       		.byte	0
 8866 00c9 00       		.byte	0
 8867 00ca 13       		.uleb128 0x13
 8868 00cb 16       		.uleb128 0x16
 8869 00cc 00       		.byte	0
 8870 00cd 03       		.uleb128 0x3
 8871 00ce 0E       		.uleb128 0xe
 8872 00cf 3A       		.uleb128 0x3a
 8873 00d0 0B       		.uleb128 0xb
 8874 00d1 3B       		.uleb128 0x3b
 8875 00d2 05       		.uleb128 0x5
 8876 00d3 49       		.uleb128 0x49
 8877 00d4 13       		.uleb128 0x13
 8878 00d5 00       		.byte	0
 8879 00d6 00       		.byte	0
 8880 00d7 14       		.uleb128 0x14
 8881 00d8 2E       		.uleb128 0x2e
 8882 00d9 01       		.byte	0x1
 8883 00da 03       		.uleb128 0x3
 8884 00db 0E       		.uleb128 0xe
 8885 00dc 3A       		.uleb128 0x3a
 8886 00dd 0B       		.uleb128 0xb
 8887 00de 3B       		.uleb128 0x3b
 8888 00df 0B       		.uleb128 0xb
 8889 00e0 27       		.uleb128 0x27
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 259


 8890 00e1 19       		.uleb128 0x19
 8891 00e2 20       		.uleb128 0x20
 8892 00e3 0B       		.uleb128 0xb
 8893 00e4 01       		.uleb128 0x1
 8894 00e5 13       		.uleb128 0x13
 8895 00e6 00       		.byte	0
 8896 00e7 00       		.byte	0
 8897 00e8 15       		.uleb128 0x15
 8898 00e9 34       		.uleb128 0x34
 8899 00ea 00       		.byte	0
 8900 00eb 03       		.uleb128 0x3
 8901 00ec 0E       		.uleb128 0xe
 8902 00ed 3A       		.uleb128 0x3a
 8903 00ee 0B       		.uleb128 0xb
 8904 00ef 3B       		.uleb128 0x3b
 8905 00f0 0B       		.uleb128 0xb
 8906 00f1 49       		.uleb128 0x49
 8907 00f2 13       		.uleb128 0x13
 8908 00f3 00       		.byte	0
 8909 00f4 00       		.byte	0
 8910 00f5 16       		.uleb128 0x16
 8911 00f6 2E       		.uleb128 0x2e
 8912 00f7 01       		.byte	0x1
 8913 00f8 03       		.uleb128 0x3
 8914 00f9 0E       		.uleb128 0xe
 8915 00fa 3A       		.uleb128 0x3a
 8916 00fb 0B       		.uleb128 0xb
 8917 00fc 3B       		.uleb128 0x3b
 8918 00fd 0B       		.uleb128 0xb
 8919 00fe 27       		.uleb128 0x27
 8920 00ff 19       		.uleb128 0x19
 8921 0100 49       		.uleb128 0x49
 8922 0101 13       		.uleb128 0x13
 8923 0102 20       		.uleb128 0x20
 8924 0103 0B       		.uleb128 0xb
 8925 0104 01       		.uleb128 0x1
 8926 0105 13       		.uleb128 0x13
 8927 0106 00       		.byte	0
 8928 0107 00       		.byte	0
 8929 0108 17       		.uleb128 0x17
 8930 0109 05       		.uleb128 0x5
 8931 010a 00       		.byte	0
 8932 010b 03       		.uleb128 0x3
 8933 010c 0E       		.uleb128 0xe
 8934 010d 3A       		.uleb128 0x3a
 8935 010e 0B       		.uleb128 0xb
 8936 010f 3B       		.uleb128 0x3b
 8937 0110 0B       		.uleb128 0xb
 8938 0111 49       		.uleb128 0x49
 8939 0112 13       		.uleb128 0x13
 8940 0113 00       		.byte	0
 8941 0114 00       		.byte	0
 8942 0115 18       		.uleb128 0x18
 8943 0116 2E       		.uleb128 0x2e
 8944 0117 01       		.byte	0x1
 8945 0118 03       		.uleb128 0x3
 8946 0119 0E       		.uleb128 0xe
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 260


 8947 011a 3A       		.uleb128 0x3a
 8948 011b 0B       		.uleb128 0xb
 8949 011c 3B       		.uleb128 0x3b
 8950 011d 05       		.uleb128 0x5
 8951 011e 27       		.uleb128 0x27
 8952 011f 19       		.uleb128 0x19
 8953 0120 49       		.uleb128 0x49
 8954 0121 13       		.uleb128 0x13
 8955 0122 11       		.uleb128 0x11
 8956 0123 01       		.uleb128 0x1
 8957 0124 12       		.uleb128 0x12
 8958 0125 06       		.uleb128 0x6
 8959 0126 40       		.uleb128 0x40
 8960 0127 18       		.uleb128 0x18
 8961 0128 9742     		.uleb128 0x2117
 8962 012a 19       		.uleb128 0x19
 8963 012b 01       		.uleb128 0x1
 8964 012c 13       		.uleb128 0x13
 8965 012d 00       		.byte	0
 8966 012e 00       		.byte	0
 8967 012f 19       		.uleb128 0x19
 8968 0130 05       		.uleb128 0x5
 8969 0131 00       		.byte	0
 8970 0132 03       		.uleb128 0x3
 8971 0133 0E       		.uleb128 0xe
 8972 0134 3A       		.uleb128 0x3a
 8973 0135 0B       		.uleb128 0xb
 8974 0136 3B       		.uleb128 0x3b
 8975 0137 05       		.uleb128 0x5
 8976 0138 49       		.uleb128 0x49
 8977 0139 13       		.uleb128 0x13
 8978 013a 02       		.uleb128 0x2
 8979 013b 17       		.uleb128 0x17
 8980 013c 00       		.byte	0
 8981 013d 00       		.byte	0
 8982 013e 1A       		.uleb128 0x1a
 8983 013f 34       		.uleb128 0x34
 8984 0140 00       		.byte	0
 8985 0141 03       		.uleb128 0x3
 8986 0142 0E       		.uleb128 0xe
 8987 0143 3A       		.uleb128 0x3a
 8988 0144 0B       		.uleb128 0xb
 8989 0145 3B       		.uleb128 0x3b
 8990 0146 05       		.uleb128 0x5
 8991 0147 49       		.uleb128 0x49
 8992 0148 13       		.uleb128 0x13
 8993 0149 02       		.uleb128 0x2
 8994 014a 17       		.uleb128 0x17
 8995 014b 00       		.byte	0
 8996 014c 00       		.byte	0
 8997 014d 1B       		.uleb128 0x1b
 8998 014e 1D       		.uleb128 0x1d
 8999 014f 01       		.byte	0x1
 9000 0150 31       		.uleb128 0x31
 9001 0151 13       		.uleb128 0x13
 9002 0152 11       		.uleb128 0x11
 9003 0153 01       		.uleb128 0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 261


 9004 0154 12       		.uleb128 0x12
 9005 0155 06       		.uleb128 0x6
 9006 0156 58       		.uleb128 0x58
 9007 0157 0B       		.uleb128 0xb
 9008 0158 59       		.uleb128 0x59
 9009 0159 05       		.uleb128 0x5
 9010 015a 00       		.byte	0
 9011 015b 00       		.byte	0
 9012 015c 1C       		.uleb128 0x1c
 9013 015d 0B       		.uleb128 0xb
 9014 015e 01       		.byte	0x1
 9015 015f 11       		.uleb128 0x11
 9016 0160 01       		.uleb128 0x1
 9017 0161 12       		.uleb128 0x12
 9018 0162 06       		.uleb128 0x6
 9019 0163 00       		.byte	0
 9020 0164 00       		.byte	0
 9021 0165 1D       		.uleb128 0x1d
 9022 0166 34       		.uleb128 0x34
 9023 0167 00       		.byte	0
 9024 0168 31       		.uleb128 0x31
 9025 0169 13       		.uleb128 0x13
 9026 016a 00       		.byte	0
 9027 016b 00       		.byte	0
 9028 016c 1E       		.uleb128 0x1e
 9029 016d 2E       		.uleb128 0x2e
 9030 016e 01       		.byte	0x1
 9031 016f 03       		.uleb128 0x3
 9032 0170 0E       		.uleb128 0xe
 9033 0171 3A       		.uleb128 0x3a
 9034 0172 0B       		.uleb128 0xb
 9035 0173 3B       		.uleb128 0x3b
 9036 0174 05       		.uleb128 0x5
 9037 0175 27       		.uleb128 0x27
 9038 0176 19       		.uleb128 0x19
 9039 0177 11       		.uleb128 0x11
 9040 0178 01       		.uleb128 0x1
 9041 0179 12       		.uleb128 0x12
 9042 017a 06       		.uleb128 0x6
 9043 017b 40       		.uleb128 0x40
 9044 017c 18       		.uleb128 0x18
 9045 017d 9742     		.uleb128 0x2117
 9046 017f 19       		.uleb128 0x19
 9047 0180 01       		.uleb128 0x1
 9048 0181 13       		.uleb128 0x13
 9049 0182 00       		.byte	0
 9050 0183 00       		.byte	0
 9051 0184 1F       		.uleb128 0x1f
 9052 0185 898201   		.uleb128 0x4109
 9053 0188 00       		.byte	0
 9054 0189 11       		.uleb128 0x11
 9055 018a 01       		.uleb128 0x1
 9056 018b 31       		.uleb128 0x31
 9057 018c 13       		.uleb128 0x13
 9058 018d 00       		.byte	0
 9059 018e 00       		.byte	0
 9060 018f 20       		.uleb128 0x20
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 262


 9061 0190 898201   		.uleb128 0x4109
 9062 0193 01       		.byte	0x1
 9063 0194 11       		.uleb128 0x11
 9064 0195 01       		.uleb128 0x1
 9065 0196 31       		.uleb128 0x31
 9066 0197 13       		.uleb128 0x13
 9067 0198 00       		.byte	0
 9068 0199 00       		.byte	0
 9069 019a 21       		.uleb128 0x21
 9070 019b 8A8201   		.uleb128 0x410a
 9071 019e 00       		.byte	0
 9072 019f 02       		.uleb128 0x2
 9073 01a0 18       		.uleb128 0x18
 9074 01a1 9142     		.uleb128 0x2111
 9075 01a3 18       		.uleb128 0x18
 9076 01a4 00       		.byte	0
 9077 01a5 00       		.byte	0
 9078 01a6 22       		.uleb128 0x22
 9079 01a7 05       		.uleb128 0x5
 9080 01a8 00       		.byte	0
 9081 01a9 03       		.uleb128 0x3
 9082 01aa 0E       		.uleb128 0xe
 9083 01ab 3A       		.uleb128 0x3a
 9084 01ac 0B       		.uleb128 0xb
 9085 01ad 3B       		.uleb128 0x3b
 9086 01ae 05       		.uleb128 0x5
 9087 01af 49       		.uleb128 0x49
 9088 01b0 13       		.uleb128 0x13
 9089 01b1 02       		.uleb128 0x2
 9090 01b2 18       		.uleb128 0x18
 9091 01b3 00       		.byte	0
 9092 01b4 00       		.byte	0
 9093 01b5 23       		.uleb128 0x23
 9094 01b6 34       		.uleb128 0x34
 9095 01b7 00       		.byte	0
 9096 01b8 03       		.uleb128 0x3
 9097 01b9 0E       		.uleb128 0xe
 9098 01ba 3A       		.uleb128 0x3a
 9099 01bb 0B       		.uleb128 0xb
 9100 01bc 3B       		.uleb128 0x3b
 9101 01bd 05       		.uleb128 0x5
 9102 01be 49       		.uleb128 0x49
 9103 01bf 13       		.uleb128 0x13
 9104 01c0 02       		.uleb128 0x2
 9105 01c1 18       		.uleb128 0x18
 9106 01c2 00       		.byte	0
 9107 01c3 00       		.byte	0
 9108 01c4 24       		.uleb128 0x24
 9109 01c5 34       		.uleb128 0x34
 9110 01c6 00       		.byte	0
 9111 01c7 03       		.uleb128 0x3
 9112 01c8 08       		.uleb128 0x8
 9113 01c9 3A       		.uleb128 0x3a
 9114 01ca 0B       		.uleb128 0xb
 9115 01cb 3B       		.uleb128 0x3b
 9116 01cc 05       		.uleb128 0x5
 9117 01cd 49       		.uleb128 0x49
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 263


 9118 01ce 13       		.uleb128 0x13
 9119 01cf 02       		.uleb128 0x2
 9120 01d0 17       		.uleb128 0x17
 9121 01d1 00       		.byte	0
 9122 01d2 00       		.byte	0
 9123 01d3 25       		.uleb128 0x25
 9124 01d4 898201   		.uleb128 0x4109
 9125 01d7 01       		.byte	0x1
 9126 01d8 11       		.uleb128 0x11
 9127 01d9 01       		.uleb128 0x1
 9128 01da 31       		.uleb128 0x31
 9129 01db 13       		.uleb128 0x13
 9130 01dc 01       		.uleb128 0x1
 9131 01dd 13       		.uleb128 0x13
 9132 01de 00       		.byte	0
 9133 01df 00       		.byte	0
 9134 01e0 26       		.uleb128 0x26
 9135 01e1 2E       		.uleb128 0x2e
 9136 01e2 01       		.byte	0x1
 9137 01e3 03       		.uleb128 0x3
 9138 01e4 0E       		.uleb128 0xe
 9139 01e5 3A       		.uleb128 0x3a
 9140 01e6 0B       		.uleb128 0xb
 9141 01e7 3B       		.uleb128 0x3b
 9142 01e8 05       		.uleb128 0x5
 9143 01e9 27       		.uleb128 0x27
 9144 01ea 19       		.uleb128 0x19
 9145 01eb 8701     		.uleb128 0x87
 9146 01ed 19       		.uleb128 0x19
 9147 01ee 11       		.uleb128 0x11
 9148 01ef 01       		.uleb128 0x1
 9149 01f0 12       		.uleb128 0x12
 9150 01f1 06       		.uleb128 0x6
 9151 01f2 40       		.uleb128 0x40
 9152 01f3 18       		.uleb128 0x18
 9153 01f4 9742     		.uleb128 0x2117
 9154 01f6 19       		.uleb128 0x19
 9155 01f7 01       		.uleb128 0x1
 9156 01f8 13       		.uleb128 0x13
 9157 01f9 00       		.byte	0
 9158 01fa 00       		.byte	0
 9159 01fb 27       		.uleb128 0x27
 9160 01fc 2E       		.uleb128 0x2e
 9161 01fd 01       		.byte	0x1
 9162 01fe 3F       		.uleb128 0x3f
 9163 01ff 19       		.uleb128 0x19
 9164 0200 03       		.uleb128 0x3
 9165 0201 0E       		.uleb128 0xe
 9166 0202 3A       		.uleb128 0x3a
 9167 0203 0B       		.uleb128 0xb
 9168 0204 3B       		.uleb128 0x3b
 9169 0205 05       		.uleb128 0x5
 9170 0206 27       		.uleb128 0x27
 9171 0207 19       		.uleb128 0x19
 9172 0208 49       		.uleb128 0x49
 9173 0209 13       		.uleb128 0x13
 9174 020a 11       		.uleb128 0x11
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 264


 9175 020b 01       		.uleb128 0x1
 9176 020c 12       		.uleb128 0x12
 9177 020d 06       		.uleb128 0x6
 9178 020e 40       		.uleb128 0x40
 9179 020f 18       		.uleb128 0x18
 9180 0210 9742     		.uleb128 0x2117
 9181 0212 19       		.uleb128 0x19
 9182 0213 01       		.uleb128 0x1
 9183 0214 13       		.uleb128 0x13
 9184 0215 00       		.byte	0
 9185 0216 00       		.byte	0
 9186 0217 28       		.uleb128 0x28
 9187 0218 0B       		.uleb128 0xb
 9188 0219 01       		.byte	0x1
 9189 021a 11       		.uleb128 0x11
 9190 021b 01       		.uleb128 0x1
 9191 021c 12       		.uleb128 0x12
 9192 021d 06       		.uleb128 0x6
 9193 021e 01       		.uleb128 0x1
 9194 021f 13       		.uleb128 0x13
 9195 0220 00       		.byte	0
 9196 0221 00       		.byte	0
 9197 0222 29       		.uleb128 0x29
 9198 0223 2E       		.uleb128 0x2e
 9199 0224 01       		.byte	0x1
 9200 0225 3F       		.uleb128 0x3f
 9201 0226 19       		.uleb128 0x19
 9202 0227 03       		.uleb128 0x3
 9203 0228 0E       		.uleb128 0xe
 9204 0229 3A       		.uleb128 0x3a
 9205 022a 0B       		.uleb128 0xb
 9206 022b 3B       		.uleb128 0x3b
 9207 022c 05       		.uleb128 0x5
 9208 022d 27       		.uleb128 0x27
 9209 022e 19       		.uleb128 0x19
 9210 022f 11       		.uleb128 0x11
 9211 0230 01       		.uleb128 0x1
 9212 0231 12       		.uleb128 0x12
 9213 0232 06       		.uleb128 0x6
 9214 0233 40       		.uleb128 0x40
 9215 0234 18       		.uleb128 0x18
 9216 0235 9742     		.uleb128 0x2117
 9217 0237 19       		.uleb128 0x19
 9218 0238 01       		.uleb128 0x1
 9219 0239 13       		.uleb128 0x13
 9220 023a 00       		.byte	0
 9221 023b 00       		.byte	0
 9222 023c 2A       		.uleb128 0x2a
 9223 023d 1D       		.uleb128 0x1d
 9224 023e 01       		.byte	0x1
 9225 023f 31       		.uleb128 0x31
 9226 0240 13       		.uleb128 0x13
 9227 0241 11       		.uleb128 0x11
 9228 0242 01       		.uleb128 0x1
 9229 0243 12       		.uleb128 0x12
 9230 0244 06       		.uleb128 0x6
 9231 0245 58       		.uleb128 0x58
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 265


 9232 0246 0B       		.uleb128 0xb
 9233 0247 59       		.uleb128 0x59
 9234 0248 05       		.uleb128 0x5
 9235 0249 01       		.uleb128 0x1
 9236 024a 13       		.uleb128 0x13
 9237 024b 00       		.byte	0
 9238 024c 00       		.byte	0
 9239 024d 2B       		.uleb128 0x2b
 9240 024e 34       		.uleb128 0x34
 9241 024f 00       		.byte	0
 9242 0250 03       		.uleb128 0x3
 9243 0251 0E       		.uleb128 0xe
 9244 0252 3A       		.uleb128 0x3a
 9245 0253 0B       		.uleb128 0xb
 9246 0254 3B       		.uleb128 0x3b
 9247 0255 05       		.uleb128 0x5
 9248 0256 49       		.uleb128 0x49
 9249 0257 13       		.uleb128 0x13
 9250 0258 00       		.byte	0
 9251 0259 00       		.byte	0
 9252 025a 2C       		.uleb128 0x2c
 9253 025b 05       		.uleb128 0x5
 9254 025c 00       		.byte	0
 9255 025d 31       		.uleb128 0x31
 9256 025e 13       		.uleb128 0x13
 9257 025f 02       		.uleb128 0x2
 9258 0260 17       		.uleb128 0x17
 9259 0261 00       		.byte	0
 9260 0262 00       		.byte	0
 9261 0263 2D       		.uleb128 0x2d
 9262 0264 2E       		.uleb128 0x2e
 9263 0265 00       		.byte	0
 9264 0266 3F       		.uleb128 0x3f
 9265 0267 19       		.uleb128 0x19
 9266 0268 03       		.uleb128 0x3
 9267 0269 0E       		.uleb128 0xe
 9268 026a 3A       		.uleb128 0x3a
 9269 026b 0B       		.uleb128 0xb
 9270 026c 3B       		.uleb128 0x3b
 9271 026d 05       		.uleb128 0x5
 9272 026e 27       		.uleb128 0x27
 9273 026f 19       		.uleb128 0x19
 9274 0270 11       		.uleb128 0x11
 9275 0271 01       		.uleb128 0x1
 9276 0272 12       		.uleb128 0x12
 9277 0273 06       		.uleb128 0x6
 9278 0274 40       		.uleb128 0x40
 9279 0275 18       		.uleb128 0x18
 9280 0276 9742     		.uleb128 0x2117
 9281 0278 19       		.uleb128 0x19
 9282 0279 00       		.byte	0
 9283 027a 00       		.byte	0
 9284 027b 2E       		.uleb128 0x2e
 9285 027c 34       		.uleb128 0x34
 9286 027d 00       		.byte	0
 9287 027e 03       		.uleb128 0x3
 9288 027f 0E       		.uleb128 0xe
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 266


 9289 0280 3A       		.uleb128 0x3a
 9290 0281 0B       		.uleb128 0xb
 9291 0282 3B       		.uleb128 0x3b
 9292 0283 05       		.uleb128 0x5
 9293 0284 49       		.uleb128 0x49
 9294 0285 13       		.uleb128 0x13
 9295 0286 1C       		.uleb128 0x1c
 9296 0287 0B       		.uleb128 0xb
 9297 0288 00       		.byte	0
 9298 0289 00       		.byte	0
 9299 028a 2F       		.uleb128 0x2f
 9300 028b 2E       		.uleb128 0x2e
 9301 028c 00       		.byte	0
 9302 028d 3F       		.uleb128 0x3f
 9303 028e 19       		.uleb128 0x19
 9304 028f 03       		.uleb128 0x3
 9305 0290 0E       		.uleb128 0xe
 9306 0291 3A       		.uleb128 0x3a
 9307 0292 0B       		.uleb128 0xb
 9308 0293 3B       		.uleb128 0x3b
 9309 0294 05       		.uleb128 0x5
 9310 0295 27       		.uleb128 0x27
 9311 0296 19       		.uleb128 0x19
 9312 0297 49       		.uleb128 0x49
 9313 0298 13       		.uleb128 0x13
 9314 0299 11       		.uleb128 0x11
 9315 029a 01       		.uleb128 0x1
 9316 029b 12       		.uleb128 0x12
 9317 029c 06       		.uleb128 0x6
 9318 029d 40       		.uleb128 0x40
 9319 029e 18       		.uleb128 0x18
 9320 029f 9742     		.uleb128 0x2117
 9321 02a1 19       		.uleb128 0x19
 9322 02a2 00       		.byte	0
 9323 02a3 00       		.byte	0
 9324 02a4 30       		.uleb128 0x30
 9325 02a5 0B       		.uleb128 0xb
 9326 02a6 01       		.byte	0x1
 9327 02a7 55       		.uleb128 0x55
 9328 02a8 17       		.uleb128 0x17
 9329 02a9 00       		.byte	0
 9330 02aa 00       		.byte	0
 9331 02ab 31       		.uleb128 0x31
 9332 02ac 0B       		.uleb128 0xb
 9333 02ad 01       		.byte	0x1
 9334 02ae 55       		.uleb128 0x55
 9335 02af 17       		.uleb128 0x17
 9336 02b0 01       		.uleb128 0x1
 9337 02b1 13       		.uleb128 0x13
 9338 02b2 00       		.byte	0
 9339 02b3 00       		.byte	0
 9340 02b4 32       		.uleb128 0x32
 9341 02b5 34       		.uleb128 0x34
 9342 02b6 00       		.byte	0
 9343 02b7 03       		.uleb128 0x3
 9344 02b8 0E       		.uleb128 0xe
 9345 02b9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 267


 9346 02ba 0B       		.uleb128 0xb
 9347 02bb 3B       		.uleb128 0x3b
 9348 02bc 05       		.uleb128 0x5
 9349 02bd 49       		.uleb128 0x49
 9350 02be 13       		.uleb128 0x13
 9351 02bf 1C       		.uleb128 0x1c
 9352 02c0 0D       		.uleb128 0xd
 9353 02c1 00       		.byte	0
 9354 02c2 00       		.byte	0
 9355 02c3 33       		.uleb128 0x33
 9356 02c4 34       		.uleb128 0x34
 9357 02c5 00       		.byte	0
 9358 02c6 03       		.uleb128 0x3
 9359 02c7 0E       		.uleb128 0xe
 9360 02c8 3A       		.uleb128 0x3a
 9361 02c9 0B       		.uleb128 0xb
 9362 02ca 3B       		.uleb128 0x3b
 9363 02cb 05       		.uleb128 0x5
 9364 02cc 49       		.uleb128 0x49
 9365 02cd 13       		.uleb128 0x13
 9366 02ce 3F       		.uleb128 0x3f
 9367 02cf 19       		.uleb128 0x19
 9368 02d0 3C       		.uleb128 0x3c
 9369 02d1 19       		.uleb128 0x19
 9370 02d2 00       		.byte	0
 9371 02d3 00       		.byte	0
 9372 02d4 34       		.uleb128 0x34
 9373 02d5 34       		.uleb128 0x34
 9374 02d6 00       		.byte	0
 9375 02d7 03       		.uleb128 0x3
 9376 02d8 0E       		.uleb128 0xe
 9377 02d9 3A       		.uleb128 0x3a
 9378 02da 0B       		.uleb128 0xb
 9379 02db 3B       		.uleb128 0x3b
 9380 02dc 05       		.uleb128 0x5
 9381 02dd 49       		.uleb128 0x49
 9382 02de 13       		.uleb128 0x13
 9383 02df 3F       		.uleb128 0x3f
 9384 02e0 19       		.uleb128 0x19
 9385 02e1 02       		.uleb128 0x2
 9386 02e2 18       		.uleb128 0x18
 9387 02e3 00       		.byte	0
 9388 02e4 00       		.byte	0
 9389 02e5 35       		.uleb128 0x35
 9390 02e6 2E       		.uleb128 0x2e
 9391 02e7 00       		.byte	0
 9392 02e8 3F       		.uleb128 0x3f
 9393 02e9 19       		.uleb128 0x19
 9394 02ea 3C       		.uleb128 0x3c
 9395 02eb 19       		.uleb128 0x19
 9396 02ec 6E       		.uleb128 0x6e
 9397 02ed 0E       		.uleb128 0xe
 9398 02ee 03       		.uleb128 0x3
 9399 02ef 0E       		.uleb128 0xe
 9400 02f0 3A       		.uleb128 0x3a
 9401 02f1 0B       		.uleb128 0xb
 9402 02f2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 268


 9403 02f3 0B       		.uleb128 0xb
 9404 02f4 00       		.byte	0
 9405 02f5 00       		.byte	0
 9406 02f6 36       		.uleb128 0x36
 9407 02f7 2E       		.uleb128 0x2e
 9408 02f8 00       		.byte	0
 9409 02f9 3F       		.uleb128 0x3f
 9410 02fa 19       		.uleb128 0x19
 9411 02fb 3C       		.uleb128 0x3c
 9412 02fc 19       		.uleb128 0x19
 9413 02fd 6E       		.uleb128 0x6e
 9414 02fe 0E       		.uleb128 0xe
 9415 02ff 03       		.uleb128 0x3
 9416 0300 0E       		.uleb128 0xe
 9417 0301 3A       		.uleb128 0x3a
 9418 0302 0B       		.uleb128 0xb
 9419 0303 3B       		.uleb128 0x3b
 9420 0304 05       		.uleb128 0x5
 9421 0305 00       		.byte	0
 9422 0306 00       		.byte	0
 9423 0307 00       		.byte	0
 9424              		.section	.debug_loc,"",%progbits
 9425              	.Ldebug_loc0:
 9426              	.LLST0:
 9427 0000 00000000 		.4byte	.LVL0
 9428 0004 36000000 		.4byte	.LVL2
 9429 0008 0100     		.2byte	0x1
 9430 000a 50       		.byte	0x50
 9431 000b 36000000 		.4byte	.LVL2
 9432 000f 38000000 		.4byte	.LVL3
 9433 0013 0400     		.2byte	0x4
 9434 0015 F3       		.byte	0xf3
 9435 0016 01       		.uleb128 0x1
 9436 0017 50       		.byte	0x50
 9437 0018 9F       		.byte	0x9f
 9438 0019 38000000 		.4byte	.LVL3
 9439 001d 3A000000 		.4byte	.LVL4
 9440 0021 0100     		.2byte	0x1
 9441 0023 50       		.byte	0x50
 9442 0024 3A000000 		.4byte	.LVL4
 9443 0028 3C000000 		.4byte	.LVL5
 9444 002c 0100     		.2byte	0x1
 9445 002e 52       		.byte	0x52
 9446 002f 3C000000 		.4byte	.LVL5
 9447 0033 3E000000 		.4byte	.LVL6
 9448 0037 0100     		.2byte	0x1
 9449 0039 50       		.byte	0x50
 9450 003a 3E000000 		.4byte	.LVL6
 9451 003e 40000000 		.4byte	.LVL7
 9452 0042 0400     		.2byte	0x4
 9453 0044 F3       		.byte	0xf3
 9454 0045 01       		.uleb128 0x1
 9455 0046 50       		.byte	0x50
 9456 0047 9F       		.byte	0x9f
 9457 0048 40000000 		.4byte	.LVL7
 9458 004c 42000000 		.4byte	.LVL8
 9459 0050 0100     		.2byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 269


 9460 0052 50       		.byte	0x50
 9461 0053 42000000 		.4byte	.LVL8
 9462 0057 4C000000 		.4byte	.LFE146
 9463 005b 0400     		.2byte	0x4
 9464 005d F3       		.byte	0xf3
 9465 005e 01       		.uleb128 0x1
 9466 005f 50       		.byte	0x50
 9467 0060 9F       		.byte	0x9f
 9468 0061 00000000 		.4byte	0
 9469 0065 00000000 		.4byte	0
 9470              	.LLST1:
 9471 0069 00000000 		.4byte	.LVL0
 9472 006d 42000000 		.4byte	.LVL8
 9473 0071 0200     		.2byte	0x2
 9474 0073 30       		.byte	0x30
 9475 0074 9F       		.byte	0x9f
 9476 0075 42000000 		.4byte	.LVL8
 9477 0079 4C000000 		.4byte	.LFE146
 9478 007d 0100     		.2byte	0x1
 9479 007f 50       		.byte	0x50
 9480 0080 00000000 		.4byte	0
 9481 0084 00000000 		.4byte	0
 9482              	.LLST2:
 9483 0088 00000000 		.4byte	.LVL0
 9484 008c 36000000 		.4byte	.LVL2
 9485 0090 0100     		.2byte	0x1
 9486 0092 50       		.byte	0x50
 9487 0093 36000000 		.4byte	.LVL2
 9488 0097 38000000 		.4byte	.LVL3
 9489 009b 0400     		.2byte	0x4
 9490 009d F3       		.byte	0xf3
 9491 009e 01       		.uleb128 0x1
 9492 009f 50       		.byte	0x50
 9493 00a0 9F       		.byte	0x9f
 9494 00a1 38000000 		.4byte	.LVL3
 9495 00a5 3A000000 		.4byte	.LVL4
 9496 00a9 0100     		.2byte	0x1
 9497 00ab 50       		.byte	0x50
 9498 00ac 3A000000 		.4byte	.LVL4
 9499 00b0 3C000000 		.4byte	.LVL5
 9500 00b4 0100     		.2byte	0x1
 9501 00b6 52       		.byte	0x52
 9502 00b7 3C000000 		.4byte	.LVL5
 9503 00bb 3E000000 		.4byte	.LVL6
 9504 00bf 0100     		.2byte	0x1
 9505 00c1 50       		.byte	0x50
 9506 00c2 3E000000 		.4byte	.LVL6
 9507 00c6 40000000 		.4byte	.LVL7
 9508 00ca 0400     		.2byte	0x4
 9509 00cc F3       		.byte	0xf3
 9510 00cd 01       		.uleb128 0x1
 9511 00ce 50       		.byte	0x50
 9512 00cf 9F       		.byte	0x9f
 9513 00d0 40000000 		.4byte	.LVL7
 9514 00d4 42000000 		.4byte	.LVL8
 9515 00d8 0100     		.2byte	0x1
 9516 00da 50       		.byte	0x50
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 270


 9517 00db 42000000 		.4byte	.LVL8
 9518 00df 4C000000 		.4byte	.LFE146
 9519 00e3 0400     		.2byte	0x4
 9520 00e5 F3       		.byte	0xf3
 9521 00e6 01       		.uleb128 0x1
 9522 00e7 50       		.byte	0x50
 9523 00e8 9F       		.byte	0x9f
 9524 00e9 00000000 		.4byte	0
 9525 00ed 00000000 		.4byte	0
 9526              	.LLST3:
 9527 00f1 22000000 		.4byte	.LVL9
 9528 00f5 24000000 		.4byte	.LVL10
 9529 00f9 0100     		.2byte	0x1
 9530 00fb 52       		.byte	0x52
 9531 00fc 00000000 		.4byte	0
 9532 0100 00000000 		.4byte	0
 9533              	.LLST4:
 9534 0104 00000000 		.4byte	.LVL11
 9535 0108 06000000 		.4byte	.LVL12
 9536 010c 0100     		.2byte	0x1
 9537 010e 50       		.byte	0x50
 9538 010f 06000000 		.4byte	.LVL12
 9539 0113 12000000 		.4byte	.LFE173
 9540 0117 0100     		.2byte	0x1
 9541 0119 54       		.byte	0x54
 9542 011a 00000000 		.4byte	0
 9543 011e 00000000 		.4byte	0
 9544              	.LLST5:
 9545 0122 00000000 		.4byte	.LVL15
 9546 0126 18000000 		.4byte	.LVL18
 9547 012a 0100     		.2byte	0x1
 9548 012c 50       		.byte	0x50
 9549 012d 18000000 		.4byte	.LVL18
 9550 0131 9E000000 		.4byte	.LFE137
 9551 0135 0100     		.2byte	0x1
 9552 0137 5A       		.byte	0x5a
 9553 0138 00000000 		.4byte	0
 9554 013c 00000000 		.4byte	0
 9555              	.LLST6:
 9556 0140 00000000 		.4byte	.LVL15
 9557 0144 16000000 		.4byte	.LVL17
 9558 0148 0100     		.2byte	0x1
 9559 014a 51       		.byte	0x51
 9560 014b 16000000 		.4byte	.LVL17
 9561 014f 9E000000 		.4byte	.LFE137
 9562 0153 0100     		.2byte	0x1
 9563 0155 59       		.byte	0x59
 9564 0156 00000000 		.4byte	0
 9565 015a 00000000 		.4byte	0
 9566              	.LLST7:
 9567 015e 00000000 		.4byte	.LVL15
 9568 0162 14000000 		.4byte	.LVL16
 9569 0166 0100     		.2byte	0x1
 9570 0168 52       		.byte	0x52
 9571 0169 14000000 		.4byte	.LVL16
 9572 016d 28000000 		.4byte	.LVL20
 9573 0171 0100     		.2byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 271


 9574 0173 55       		.byte	0x55
 9575 0174 28000000 		.4byte	.LVL20
 9576 0178 30000000 		.4byte	.LVL22
 9577 017c 0700     		.2byte	0x7
 9578 017e 72       		.byte	0x72
 9579 017f 81808080 		.sleb128 -1073741823
 9579      7C
 9580 0184 9F       		.byte	0x9f
 9581 0185 30000000 		.4byte	.LVL22
 9582 0189 9E000000 		.4byte	.LFE137
 9583 018d 0400     		.2byte	0x4
 9584 018f F3       		.byte	0xf3
 9585 0190 01       		.uleb128 0x1
 9586 0191 52       		.byte	0x52
 9587 0192 9F       		.byte	0x9f
 9588 0193 00000000 		.4byte	0
 9589 0197 00000000 		.4byte	0
 9590              	.LLST8:
 9591 019b 00000000 		.4byte	.LVL15
 9592 019f 1B000000 		.4byte	.LVL19-1
 9593 01a3 0100     		.2byte	0x1
 9594 01a5 53       		.byte	0x53
 9595 01a6 1B000000 		.4byte	.LVL19-1
 9596 01aa 9E000000 		.4byte	.LFE137
 9597 01ae 0100     		.2byte	0x1
 9598 01b0 58       		.byte	0x58
 9599 01b1 00000000 		.4byte	0
 9600 01b5 00000000 		.4byte	0
 9601              	.LLST9:
 9602 01b9 00000000 		.4byte	.LVL15
 9603 01bd 52000000 		.4byte	.LVL25
 9604 01c1 0200     		.2byte	0x2
 9605 01c3 91       		.byte	0x91
 9606 01c4 00       		.sleb128 0
 9607 01c5 52000000 		.4byte	.LVL25
 9608 01c9 9E000000 		.4byte	.LFE137
 9609 01cd 0100     		.2byte	0x1
 9610 01cf 57       		.byte	0x57
 9611 01d0 00000000 		.4byte	0
 9612 01d4 00000000 		.4byte	0
 9613              	.LLST10:
 9614 01d8 30000000 		.4byte	.LVL22
 9615 01dc 48000000 		.4byte	.LVL24
 9616 01e0 0100     		.2byte	0x1
 9617 01e2 53       		.byte	0x53
 9618 01e3 6C000000 		.4byte	.LVL28
 9619 01e7 70000000 		.4byte	.LVL29
 9620 01eb 0200     		.2byte	0x2
 9621 01ed 30       		.byte	0x30
 9622 01ee 9F       		.byte	0x9f
 9623 01ef 70000000 		.4byte	.LVL29
 9624 01f3 84000000 		.4byte	.LVL31
 9625 01f7 0100     		.2byte	0x1
 9626 01f9 53       		.byte	0x53
 9627 01fa 00000000 		.4byte	0
 9628 01fe 00000000 		.4byte	0
 9629              	.LLST11:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 272


 9630 0202 02000000 		.4byte	.LVL33
 9631 0206 06000000 		.4byte	.LVL34
 9632 020a 0200     		.2byte	0x2
 9633 020c 30       		.byte	0x30
 9634 020d 9F       		.byte	0x9f
 9635 020e 06000000 		.4byte	.LVL34
 9636 0212 1C000000 		.4byte	.LVL37
 9637 0216 0100     		.2byte	0x1
 9638 0218 54       		.byte	0x54
 9639 0219 00000000 		.4byte	0
 9640 021d 00000000 		.4byte	0
 9641              	.LLST12:
 9642 0221 00000000 		.4byte	.LVL43
 9643 0225 07000000 		.4byte	.LVL44-1
 9644 0229 0100     		.2byte	0x1
 9645 022b 50       		.byte	0x50
 9646 022c 07000000 		.4byte	.LVL44-1
 9647 0230 A2000000 		.4byte	.LVL48
 9648 0234 0100     		.2byte	0x1
 9649 0236 54       		.byte	0x54
 9650 0237 A2000000 		.4byte	.LVL48
 9651 023b AC000000 		.4byte	.LFE138
 9652 023f 0400     		.2byte	0x4
 9653 0241 F3       		.byte	0xf3
 9654 0242 01       		.uleb128 0x1
 9655 0243 50       		.byte	0x50
 9656 0244 9F       		.byte	0x9f
 9657 0245 00000000 		.4byte	0
 9658 0249 00000000 		.4byte	0
 9659              	.LLST13:
 9660 024d 10000000 		.4byte	.LVL50
 9661 0251 34000000 		.4byte	.LVL53
 9662 0255 0100     		.2byte	0x1
 9663 0257 55       		.byte	0x55
 9664 0258 00000000 		.4byte	0
 9665 025c 00000000 		.4byte	0
 9666              	.LLST14:
 9667 0260 00000000 		.4byte	.LVL54
 9668 0264 02000000 		.4byte	.LVL55
 9669 0268 0100     		.2byte	0x1
 9670 026a 50       		.byte	0x50
 9671 026b 02000000 		.4byte	.LVL55
 9672 026f 28000000 		.4byte	.LFE168
 9673 0273 0400     		.2byte	0x4
 9674 0275 F3       		.byte	0xf3
 9675 0276 01       		.uleb128 0x1
 9676 0277 50       		.byte	0x50
 9677 0278 9F       		.byte	0x9f
 9678 0279 00000000 		.4byte	0
 9679 027d 00000000 		.4byte	0
 9680              	.LLST15:
 9681 0281 00000000 		.4byte	.LVL57
 9682 0285 10000000 		.4byte	.LVL59
 9683 0289 0100     		.2byte	0x1
 9684 028b 50       		.byte	0x50
 9685 028c 10000000 		.4byte	.LVL59
 9686 0290 2E000000 		.4byte	.LVL63
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 273


 9687 0294 0100     		.2byte	0x1
 9688 0296 54       		.byte	0x54
 9689 0297 2E000000 		.4byte	.LVL63
 9690 029b 68000000 		.4byte	.LFE184
 9691 029f 0400     		.2byte	0x4
 9692 02a1 F3       		.byte	0xf3
 9693 02a2 01       		.uleb128 0x1
 9694 02a3 50       		.byte	0x50
 9695 02a4 9F       		.byte	0x9f
 9696 02a5 00000000 		.4byte	0
 9697 02a9 00000000 		.4byte	0
 9698              	.LLST16:
 9699 02ad 00000000 		.4byte	.LVL57
 9700 02b1 15000000 		.4byte	.LVL60-1
 9701 02b5 0100     		.2byte	0x1
 9702 02b7 51       		.byte	0x51
 9703 02b8 15000000 		.4byte	.LVL60-1
 9704 02bc 64000000 		.4byte	.LVL68
 9705 02c0 0100     		.2byte	0x1
 9706 02c2 56       		.byte	0x56
 9707 02c3 64000000 		.4byte	.LVL68
 9708 02c7 68000000 		.4byte	.LFE184
 9709 02cb 0400     		.2byte	0x4
 9710 02cd F3       		.byte	0xf3
 9711 02ce 01       		.uleb128 0x1
 9712 02cf 51       		.byte	0x51
 9713 02d0 9F       		.byte	0x9f
 9714 02d1 00000000 		.4byte	0
 9715 02d5 00000000 		.4byte	0
 9716              	.LLST17:
 9717 02d9 2E000000 		.4byte	.LVL63
 9718 02dd 64000000 		.4byte	.LVL68
 9719 02e1 0100     		.2byte	0x1
 9720 02e3 54       		.byte	0x54
 9721 02e4 00000000 		.4byte	0
 9722 02e8 00000000 		.4byte	0
 9723              	.LLST18:
 9724 02ec 0C000000 		.4byte	.LVL58
 9725 02f0 4E000000 		.4byte	.LVL66
 9726 02f4 0100     		.2byte	0x1
 9727 02f6 55       		.byte	0x55
 9728 02f7 00000000 		.4byte	0
 9729 02fb 00000000 		.4byte	0
 9730              	.LLST19:
 9731 02ff 00000000 		.4byte	.LVL69
 9732 0303 10000000 		.4byte	.LVL70
 9733 0307 0100     		.2byte	0x1
 9734 0309 50       		.byte	0x50
 9735 030a 10000000 		.4byte	.LVL70
 9736 030e 62000000 		.4byte	.LFE136
 9737 0312 0100     		.2byte	0x1
 9738 0314 56       		.byte	0x56
 9739 0315 00000000 		.4byte	0
 9740 0319 00000000 		.4byte	0
 9741              	.LLST20:
 9742 031d 00000000 		.4byte	.LVL69
 9743 0321 13000000 		.4byte	.LVL71-1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 274


 9744 0325 0100     		.2byte	0x1
 9745 0327 51       		.byte	0x51
 9746 0328 13000000 		.4byte	.LVL71-1
 9747 032c 62000000 		.4byte	.LFE136
 9748 0330 0100     		.2byte	0x1
 9749 0332 57       		.byte	0x57
 9750 0333 00000000 		.4byte	0
 9751 0337 00000000 		.4byte	0
 9752              	.LLST21:
 9753 033b 00000000 		.4byte	.LVL69
 9754 033f 13000000 		.4byte	.LVL71-1
 9755 0343 0100     		.2byte	0x1
 9756 0345 52       		.byte	0x52
 9757 0346 13000000 		.4byte	.LVL71-1
 9758 034a 62000000 		.4byte	.LFE136
 9759 034e 0400     		.2byte	0x4
 9760 0350 F3       		.byte	0xf3
 9761 0351 01       		.uleb128 0x1
 9762 0352 52       		.byte	0x52
 9763 0353 9F       		.byte	0x9f
 9764 0354 00000000 		.4byte	0
 9765 0358 00000000 		.4byte	0
 9766              	.LLST22:
 9767 035c 00000000 		.4byte	.LVL69
 9768 0360 13000000 		.4byte	.LVL71-1
 9769 0364 0100     		.2byte	0x1
 9770 0366 53       		.byte	0x53
 9771 0367 13000000 		.4byte	.LVL71-1
 9772 036b 62000000 		.4byte	.LFE136
 9773 036f 0100     		.2byte	0x1
 9774 0371 58       		.byte	0x58
 9775 0372 00000000 		.4byte	0
 9776 0376 00000000 		.4byte	0
 9777              	.LLST23:
 9778 037a 1E000000 		.4byte	.LVL73
 9779 037e 2A000000 		.4byte	.LVL74
 9780 0382 0100     		.2byte	0x1
 9781 0384 50       		.byte	0x50
 9782 0385 2A000000 		.4byte	.LVL74
 9783 0389 30000000 		.4byte	.LVL76
 9784 038d 0100     		.2byte	0x1
 9785 038f 54       		.byte	0x54
 9786 0390 32000000 		.4byte	.LVL77
 9787 0394 62000000 		.4byte	.LFE136
 9788 0398 0100     		.2byte	0x1
 9789 039a 54       		.byte	0x54
 9790 039b 00000000 		.4byte	0
 9791 039f 00000000 		.4byte	0
 9792              	.LLST24:
 9793 03a3 54000000 		.4byte	.LVL79
 9794 03a7 58000000 		.4byte	.LVL80
 9795 03ab 0200     		.2byte	0x2
 9796 03ad 31       		.byte	0x31
 9797 03ae 9F       		.byte	0x9f
 9798 03af 5C000000 		.4byte	.LVL81
 9799 03b3 62000000 		.4byte	.LFE136
 9800 03b7 0100     		.2byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 275


 9801 03b9 50       		.byte	0x50
 9802 03ba 00000000 		.4byte	0
 9803 03be 00000000 		.4byte	0
 9804              	.LLST25:
 9805 03c2 14000000 		.4byte	.LVL71
 9806 03c6 1A000000 		.4byte	.LVL72
 9807 03ca 0100     		.2byte	0x1
 9808 03cc 50       		.byte	0x50
 9809 03cd 1A000000 		.4byte	.LVL72
 9810 03d1 30000000 		.4byte	.LVL76
 9811 03d5 0100     		.2byte	0x1
 9812 03d7 59       		.byte	0x59
 9813 03d8 30000000 		.4byte	.LVL76
 9814 03dc 32000000 		.4byte	.LVL77
 9815 03e0 0100     		.2byte	0x1
 9816 03e2 50       		.byte	0x50
 9817 03e3 00000000 		.4byte	0
 9818 03e7 00000000 		.4byte	0
 9819              	.LLST26:
 9820 03eb 00000000 		.4byte	.LVL82
 9821 03ef 07000000 		.4byte	.LVL83-1
 9822 03f3 0100     		.2byte	0x1
 9823 03f5 50       		.byte	0x50
 9824 03f6 07000000 		.4byte	.LVL83-1
 9825 03fa 10000000 		.4byte	.LVL84
 9826 03fe 0100     		.2byte	0x1
 9827 0400 54       		.byte	0x54
 9828 0401 00000000 		.4byte	0
 9829 0405 00000000 		.4byte	0
 9830              	.LLST27:
 9831 0409 10000000 		.4byte	.LVL84
 9832 040d A8000000 		.4byte	.LVL92
 9833 0411 0100     		.2byte	0x1
 9834 0413 54       		.byte	0x54
 9835 0414 00000000 		.4byte	0
 9836 0418 00000000 		.4byte	0
 9837              	.LLST28:
 9838 041c 00000000 		.4byte	.LVL93
 9839 0420 07000000 		.4byte	.LVL94-1
 9840 0424 0100     		.2byte	0x1
 9841 0426 50       		.byte	0x50
 9842 0427 07000000 		.4byte	.LVL94-1
 9843 042b 10000000 		.4byte	.LVL95
 9844 042f 0100     		.2byte	0x1
 9845 0431 54       		.byte	0x54
 9846 0432 00000000 		.4byte	0
 9847 0436 00000000 		.4byte	0
 9848              	.LLST29:
 9849 043a 10000000 		.4byte	.LVL95
 9850 043e 12000000 		.4byte	.LVL96
 9851 0442 0100     		.2byte	0x1
 9852 0444 54       		.byte	0x54
 9853 0445 00000000 		.4byte	0
 9854 0449 00000000 		.4byte	0
 9855              	.LLST30:
 9856 044d 12000000 		.4byte	.LVL96
 9857 0451 1A000000 		.4byte	.LVL98
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 276


 9858 0455 0100     		.2byte	0x1
 9859 0457 54       		.byte	0x54
 9860 0458 1A000000 		.4byte	.LVL98
 9861 045c 20000000 		.4byte	.LFE142
 9862 0460 0100     		.2byte	0x1
 9863 0462 50       		.byte	0x50
 9864 0463 00000000 		.4byte	0
 9865 0467 00000000 		.4byte	0
 9866              	.LLST31:
 9867 046b 00000000 		.4byte	.LVL99
 9868 046f 07000000 		.4byte	.LVL100-1
 9869 0473 0100     		.2byte	0x1
 9870 0475 50       		.byte	0x50
 9871 0476 07000000 		.4byte	.LVL100-1
 9872 047a 24000000 		.4byte	.LVL101
 9873 047e 0100     		.2byte	0x1
 9874 0480 54       		.byte	0x54
 9875 0481 00000000 		.4byte	0
 9876 0485 00000000 		.4byte	0
 9877              	.LLST32:
 9878 0489 24000000 		.4byte	.LVL101
 9879 048d 2C000000 		.4byte	.LVL104
 9880 0491 0100     		.2byte	0x1
 9881 0493 54       		.byte	0x54
 9882 0494 00000000 		.4byte	0
 9883 0498 00000000 		.4byte	0
 9884              	.LLST33:
 9885 049c 26000000 		.4byte	.LVL102
 9886 04a0 2A000000 		.4byte	.LVL103
 9887 04a4 0100     		.2byte	0x1
 9888 04a6 53       		.byte	0x53
 9889 04a7 00000000 		.4byte	0
 9890 04ab 00000000 		.4byte	0
 9891              	.LLST34:
 9892 04af 00000000 		.4byte	.LVL105
 9893 04b3 25000000 		.4byte	.LVL108-1
 9894 04b7 0100     		.2byte	0x1
 9895 04b9 50       		.byte	0x50
 9896 04ba 25000000 		.4byte	.LVL108-1
 9897 04be 2E000000 		.4byte	.LVL109
 9898 04c2 0100     		.2byte	0x1
 9899 04c4 54       		.byte	0x54
 9900 04c5 00000000 		.4byte	0
 9901 04c9 00000000 		.4byte	0
 9902              	.LLST35:
 9903 04cd 00000000 		.4byte	.LVL105
 9904 04d1 22000000 		.4byte	.LVL107
 9905 04d5 0100     		.2byte	0x1
 9906 04d7 51       		.byte	0x51
 9907 04d8 22000000 		.4byte	.LVL107
 9908 04dc 74000000 		.4byte	.LVL112
 9909 04e0 0100     		.2byte	0x1
 9910 04e2 55       		.byte	0x55
 9911 04e3 74000000 		.4byte	.LVL112
 9912 04e7 95000000 		.4byte	.LVL114-1
 9913 04eb 0200     		.2byte	0x2
 9914 04ed 74       		.byte	0x74
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 277


 9915 04ee 2C       		.sleb128 44
 9916 04ef 00000000 		.4byte	0
 9917 04f3 00000000 		.4byte	0
 9918              	.LLST36:
 9919 04f7 2E000000 		.4byte	.LVL109
 9920 04fb D0000000 		.4byte	.LVL118
 9921 04ff 0100     		.2byte	0x1
 9922 0501 54       		.byte	0x54
 9923 0502 00000000 		.4byte	0
 9924 0506 00000000 		.4byte	0
 9925              	.LLST37:
 9926 050a 30000000 		.4byte	.LVL110
 9927 050e 7C000000 		.4byte	.LVL113
 9928 0512 0100     		.2byte	0x1
 9929 0514 53       		.byte	0x53
 9930 0515 00000000 		.4byte	0
 9931 0519 00000000 		.4byte	0
 9932              	.LLST38:
 9933 051d 68000000 		.4byte	.LVL111
 9934 0521 7C000000 		.4byte	.LVL113
 9935 0525 0100     		.2byte	0x1
 9936 0527 53       		.byte	0x53
 9937 0528 00000000 		.4byte	0
 9938 052c 00000000 		.4byte	0
 9939              	.LLST39:
 9940 0530 00000000 		.4byte	.LVL105
 9941 0534 68000000 		.4byte	.LVL111
 9942 0538 0200     		.2byte	0x2
 9943 053a 30       		.byte	0x30
 9944 053b 9F       		.byte	0x9f
 9945 053c 68000000 		.4byte	.LVL111
 9946 0540 CA000000 		.4byte	.LVL116
 9947 0544 0100     		.2byte	0x1
 9948 0546 56       		.byte	0x56
 9949 0547 00000000 		.4byte	0
 9950 054b 00000000 		.4byte	0
 9951              	.LLST40:
 9952 054f 00000000 		.4byte	.LVL119
 9953 0553 27000000 		.4byte	.LVL121-1
 9954 0557 0100     		.2byte	0x1
 9955 0559 50       		.byte	0x50
 9956 055a 27000000 		.4byte	.LVL121-1
 9957 055e 80000000 		.4byte	.LVL126
 9958 0562 0100     		.2byte	0x1
 9959 0564 54       		.byte	0x54
 9960 0565 80000000 		.4byte	.LVL126
 9961 0569 88000000 		.4byte	.LFE147
 9962 056d 0400     		.2byte	0x4
 9963 056f F3       		.byte	0xf3
 9964 0570 01       		.uleb128 0x1
 9965 0571 50       		.byte	0x50
 9966 0572 9F       		.byte	0x9f
 9967 0573 00000000 		.4byte	0
 9968 0577 00000000 		.4byte	0
 9969              	.LLST41:
 9970 057b 00000000 		.4byte	.LVL119
 9971 057f 27000000 		.4byte	.LVL121-1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 278


 9972 0583 0100     		.2byte	0x1
 9973 0585 50       		.byte	0x50
 9974 0586 27000000 		.4byte	.LVL121-1
 9975 058a 80000000 		.4byte	.LVL126
 9976 058e 0100     		.2byte	0x1
 9977 0590 54       		.byte	0x54
 9978 0591 80000000 		.4byte	.LVL126
 9979 0595 88000000 		.4byte	.LFE147
 9980 0599 0400     		.2byte	0x4
 9981 059b F3       		.byte	0xf3
 9982 059c 01       		.uleb128 0x1
 9983 059d 50       		.byte	0x50
 9984 059e 9F       		.byte	0x9f
 9985 059f 00000000 		.4byte	0
 9986 05a3 00000000 		.4byte	0
 9987              	.LLST42:
 9988 05a7 00000000 		.4byte	.LVL127
 9989 05ab 1B000000 		.4byte	.LVL130-1
 9990 05af 0100     		.2byte	0x1
 9991 05b1 50       		.byte	0x50
 9992 05b2 1B000000 		.4byte	.LVL130-1
 9993 05b6 98000000 		.4byte	.LVL139
 9994 05ba 0100     		.2byte	0x1
 9995 05bc 54       		.byte	0x54
 9996 05bd 98000000 		.4byte	.LVL139
 9997 05c1 A4000000 		.4byte	.LFE148
 9998 05c5 0400     		.2byte	0x4
 9999 05c7 F3       		.byte	0xf3
 10000 05c8 01       		.uleb128 0x1
 10001 05c9 50       		.byte	0x50
 10002 05ca 9F       		.byte	0x9f
 10003 05cb 00000000 		.4byte	0
 10004 05cf 00000000 		.4byte	0
 10005              	.LLST43:
 10006 05d3 02000000 		.4byte	.LVL128
 10007 05d7 54000000 		.4byte	.LVL132
 10008 05db 0200     		.2byte	0x2
 10009 05dd 30       		.byte	0x30
 10010 05de 9F       		.byte	0x9f
 10011 05df 54000000 		.4byte	.LVL132
 10012 05e3 80000000 		.4byte	.LVL135
 10013 05e7 0100     		.2byte	0x1
 10014 05e9 55       		.byte	0x55
 10015 05ea 80000000 		.4byte	.LVL135
 10016 05ee 90000000 		.4byte	.LVL137
 10017 05f2 0200     		.2byte	0x2
 10018 05f4 30       		.byte	0x30
 10019 05f5 9F       		.byte	0x9f
 10020 05f6 90000000 		.4byte	.LVL137
 10021 05fa 98000000 		.4byte	.LVL139
 10022 05fe 0100     		.2byte	0x1
 10023 0600 55       		.byte	0x55
 10024 0601 98000000 		.4byte	.LVL139
 10025 0605 A4000000 		.4byte	.LFE148
 10026 0609 0100     		.2byte	0x1
 10027 060b 50       		.byte	0x50
 10028 060c 00000000 		.4byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 279


 10029 0610 00000000 		.4byte	0
 10030              	.LLST44:
 10031 0614 02000000 		.4byte	.LVL128
 10032 0618 1B000000 		.4byte	.LVL130-1
 10033 061c 0100     		.2byte	0x1
 10034 061e 50       		.byte	0x50
 10035 061f 1B000000 		.4byte	.LVL130-1
 10036 0623 98000000 		.4byte	.LVL139
 10037 0627 0100     		.2byte	0x1
 10038 0629 54       		.byte	0x54
 10039 062a 98000000 		.4byte	.LVL139
 10040 062e A4000000 		.4byte	.LFE148
 10041 0632 0400     		.2byte	0x4
 10042 0634 F3       		.byte	0xf3
 10043 0635 01       		.uleb128 0x1
 10044 0636 50       		.byte	0x50
 10045 0637 9F       		.byte	0x9f
 10046 0638 00000000 		.4byte	0
 10047 063c 00000000 		.4byte	0
 10048              	.LLST45:
 10049 0640 90000000 		.4byte	.LVL137
 10050 0644 94000000 		.4byte	.LVL138
 10051 0648 0100     		.2byte	0x1
 10052 064a 57       		.byte	0x57
 10053 064b 00000000 		.4byte	0
 10054 064f 00000000 		.4byte	0
 10055              	.LLST46:
 10056 0653 16000000 		.4byte	.LVL140
 10057 0657 1D000000 		.4byte	.LVL141-1
 10058 065b 0100     		.2byte	0x1
 10059 065d 50       		.byte	0x50
 10060 065e 1E000000 		.4byte	.LVL141
 10061 0662 49000000 		.4byte	.LVL142-1
 10062 0666 0100     		.2byte	0x1
 10063 0668 50       		.byte	0x50
 10064 0669 4C000000 		.4byte	.LVL143
 10065 066d 64000000 		.4byte	.LVL145
 10066 0671 0100     		.2byte	0x1
 10067 0673 50       		.byte	0x50
 10068 0674 00000000 		.4byte	0
 10069 0678 00000000 		.4byte	0
 10070              	.LLST47:
 10071 067c 00000000 		.4byte	.LVL150
 10072 0680 0A000000 		.4byte	.LVL151
 10073 0684 0100     		.2byte	0x1
 10074 0686 50       		.byte	0x50
 10075 0687 00000000 		.4byte	0
 10076 068b 00000000 		.4byte	0
 10077              	.LLST48:
 10078 068f 0A000000 		.4byte	.LVL151
 10079 0693 1C000000 		.4byte	.LVL152
 10080 0697 0100     		.2byte	0x1
 10081 0699 53       		.byte	0x53
 10082 069a 1E000000 		.4byte	.LVL153
 10083 069e 28000000 		.4byte	.LFE156
 10084 06a2 0100     		.2byte	0x1
 10085 06a4 53       		.byte	0x53
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 280


 10086 06a5 00000000 		.4byte	0
 10087 06a9 00000000 		.4byte	0
 10088              	.LLST49:
 10089 06ad 5C000000 		.4byte	.LVL161
 10090 06b1 60000000 		.4byte	.LVL163
 10091 06b5 0100     		.2byte	0x1
 10092 06b7 56       		.byte	0x56
 10093 06b8 84000000 		.4byte	.LVL165
 10094 06bc DA000000 		.4byte	.LVL170
 10095 06c0 0100     		.2byte	0x1
 10096 06c2 56       		.byte	0x56
 10097 06c3 00000000 		.4byte	0
 10098 06c7 00000000 		.4byte	0
 10099              	.LLST50:
 10100 06cb 86000000 		.4byte	.LVL166
 10101 06cf 99000000 		.4byte	.LVL167-1
 10102 06d3 0100     		.2byte	0x1
 10103 06d5 53       		.byte	0x53
 10104 06d6 00000000 		.4byte	0
 10105 06da 00000000 		.4byte	0
 10106              	.LLST51:
 10107 06de 04000000 		.4byte	.LVL154
 10108 06e2 5C000000 		.4byte	.LVL161
 10109 06e6 0200     		.2byte	0x2
 10110 06e8 30       		.byte	0x30
 10111 06e9 9F       		.byte	0x9f
 10112 06ea 5C000000 		.4byte	.LVL161
 10113 06ee 5E000000 		.4byte	.LVL162
 10114 06f2 0100     		.2byte	0x1
 10115 06f4 54       		.byte	0x54
 10116 06f5 60000000 		.4byte	.LVL163
 10117 06f9 62000000 		.4byte	.LVL164
 10118 06fd 0200     		.2byte	0x2
 10119 06ff 30       		.byte	0x30
 10120 0700 9F       		.byte	0x9f
 10121 0701 62000000 		.4byte	.LVL164
 10122 0705 F2000000 		.4byte	.LVL171
 10123 0709 0100     		.2byte	0x1
 10124 070b 54       		.byte	0x54
 10125 070c F2000000 		.4byte	.LVL171
 10126 0710 02010000 		.4byte	.LVL172
 10127 0714 0200     		.2byte	0x2
 10128 0716 30       		.byte	0x30
 10129 0717 9F       		.byte	0x9f
 10130 0718 02010000 		.4byte	.LVL172
 10131 071c 14010000 		.4byte	.LVL175
 10132 0720 0100     		.2byte	0x1
 10133 0722 54       		.byte	0x54
 10134 0723 14010000 		.4byte	.LVL175
 10135 0727 18010000 		.4byte	.LFE157
 10136 072b 0100     		.2byte	0x1
 10137 072d 50       		.byte	0x50
 10138 072e 00000000 		.4byte	0
 10139 0732 00000000 		.4byte	0
 10140              	.LLST52:
 10141 0736 16000000 		.4byte	.LVL155
 10142 073a F2000000 		.4byte	.LVL171
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 281


 10143 073e 0100     		.2byte	0x1
 10144 0740 55       		.byte	0x55
 10145 0741 02010000 		.4byte	.LVL172
 10146 0745 04010000 		.4byte	.LVL173
 10147 0749 0100     		.2byte	0x1
 10148 074b 55       		.byte	0x55
 10149 074c 00000000 		.4byte	0
 10150 0750 00000000 		.4byte	0
 10151              	.LLST53:
 10152 0754 38000000 		.4byte	.LVL157
 10153 0758 46000000 		.4byte	.LVL158
 10154 075c 0100     		.2byte	0x1
 10155 075e 52       		.byte	0x52
 10156 075f 46000000 		.4byte	.LVL158
 10157 0763 4C000000 		.4byte	.LVL159
 10158 0767 0500     		.2byte	0x5
 10159 0769 03       		.byte	0x3
 10160 076a F8000000 		.4byte	pxOverflowDelayedTaskList
 10161 076e 00000000 		.4byte	0
 10162 0772 00000000 		.4byte	0
 10163              	.LLST54:
 10164 0776 00000000 		.4byte	.LVL176
 10165 077a 40000000 		.4byte	.LVL179
 10166 077e 0200     		.2byte	0x2
 10167 0780 30       		.byte	0x30
 10168 0781 9F       		.byte	0x9f
 10169 0782 40000000 		.4byte	.LVL179
 10170 0786 8C000000 		.4byte	.LVL184
 10171 078a 0100     		.2byte	0x1
 10172 078c 54       		.byte	0x54
 10173 078d 8C000000 		.4byte	.LVL184
 10174 0791 8E000000 		.4byte	.LVL185
 10175 0795 0200     		.2byte	0x2
 10176 0797 30       		.byte	0x30
 10177 0798 9F       		.byte	0x9f
 10178 0799 8E000000 		.4byte	.LVL185
 10179 079d A2000000 		.4byte	.LVL187
 10180 07a1 0100     		.2byte	0x1
 10181 07a3 54       		.byte	0x54
 10182 07a4 DA000000 		.4byte	.LVL193
 10183 07a8 DE000000 		.4byte	.LVL194
 10184 07ac 0200     		.2byte	0x2
 10185 07ae 30       		.byte	0x30
 10186 07af 9F       		.byte	0x9f
 10187 07b0 00000000 		.4byte	0
 10188 07b4 00000000 		.4byte	0
 10189              	.LLST55:
 10190 07b8 00000000 		.4byte	.LVL176
 10191 07bc C6000000 		.4byte	.LVL191
 10192 07c0 0200     		.2byte	0x2
 10193 07c2 30       		.byte	0x30
 10194 07c3 9F       		.byte	0x9f
 10195 07c4 C6000000 		.4byte	.LVL191
 10196 07c8 DA000000 		.4byte	.LVL193
 10197 07cc 0200     		.2byte	0x2
 10198 07ce 31       		.byte	0x31
 10199 07cf 9F       		.byte	0x9f
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 282


 10200 07d0 DA000000 		.4byte	.LVL193
 10201 07d4 E0000000 		.4byte	.LVL195
 10202 07d8 0200     		.2byte	0x2
 10203 07da 30       		.byte	0x30
 10204 07db 9F       		.byte	0x9f
 10205 07dc E0000000 		.4byte	.LVL195
 10206 07e0 E8000000 		.4byte	.LVL197
 10207 07e4 0100     		.2byte	0x1
 10208 07e6 54       		.byte	0x54
 10209 07e7 E8000000 		.4byte	.LVL197
 10210 07eb F0000000 		.4byte	.LFE152
 10211 07ef 0100     		.2byte	0x1
 10212 07f1 50       		.byte	0x50
 10213 07f2 00000000 		.4byte	0
 10214 07f6 00000000 		.4byte	0
 10215              	.LLST56:
 10216 07fa A2000000 		.4byte	.LVL187
 10217 07fe B2000000 		.4byte	.LVL189
 10218 0802 0100     		.2byte	0x1
 10219 0804 54       		.byte	0x54
 10220 0805 B2000000 		.4byte	.LVL189
 10221 0809 B4000000 		.4byte	.LVL190
 10222 080d 0300     		.2byte	0x3
 10223 080f 74       		.byte	0x74
 10224 0810 7F       		.sleb128 -1
 10225 0811 9F       		.byte	0x9f
 10226 0812 B4000000 		.4byte	.LVL190
 10227 0816 D8000000 		.4byte	.LVL192
 10228 081a 0100     		.2byte	0x1
 10229 081c 54       		.byte	0x54
 10230 081d DE000000 		.4byte	.LVL194
 10231 0821 E0000000 		.4byte	.LVL195
 10232 0825 0100     		.2byte	0x1
 10233 0827 54       		.byte	0x54
 10234 0828 00000000 		.4byte	0
 10235 082c 00000000 		.4byte	0
 10236              	.LLST57:
 10237 0830 00000000 		.4byte	.LVL198
 10238 0834 4B000000 		.4byte	.LVL203-1
 10239 0838 0100     		.2byte	0x1
 10240 083a 50       		.byte	0x50
 10241 083b 4B000000 		.4byte	.LVL203-1
 10242 083f A4000000 		.4byte	.LVL210
 10243 0843 0100     		.2byte	0x1
 10244 0845 55       		.byte	0x55
 10245 0846 A4000000 		.4byte	.LVL210
 10246 084a AC000000 		.4byte	.LFE140
 10247 084e 0400     		.2byte	0x4
 10248 0850 F3       		.byte	0xf3
 10249 0851 01       		.uleb128 0x1
 10250 0852 50       		.byte	0x50
 10251 0853 9F       		.byte	0x9f
 10252 0854 00000000 		.4byte	0
 10253 0858 00000000 		.4byte	0
 10254              	.LLST58:
 10255 085c 00000000 		.4byte	.LVL198
 10256 0860 4B000000 		.4byte	.LVL203-1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 283


 10257 0864 0100     		.2byte	0x1
 10258 0866 51       		.byte	0x51
 10259 0867 4B000000 		.4byte	.LVL203-1
 10260 086b A4000000 		.4byte	.LVL210
 10261 086f 0100     		.2byte	0x1
 10262 0871 54       		.byte	0x54
 10263 0872 A4000000 		.4byte	.LVL210
 10264 0876 AC000000 		.4byte	.LFE140
 10265 087a 0400     		.2byte	0x4
 10266 087c F3       		.byte	0xf3
 10267 087d 01       		.uleb128 0x1
 10268 087e 51       		.byte	0x51
 10269 087f 9F       		.byte	0x9f
 10270 0880 00000000 		.4byte	0
 10271 0884 00000000 		.4byte	0
 10272              	.LLST59:
 10273 0888 56000000 		.4byte	.LVL205
 10274 088c 8B000000 		.4byte	.LVL208-1
 10275 0890 0100     		.2byte	0x1
 10276 0892 53       		.byte	0x53
 10277 0893 00000000 		.4byte	0
 10278 0897 00000000 		.4byte	0
 10279              	.LLST60:
 10280 089b 02000000 		.4byte	.LVL199
 10281 089f 80000000 		.4byte	.LVL206
 10282 08a3 0200     		.2byte	0x2
 10283 08a5 30       		.byte	0x30
 10284 08a6 9F       		.byte	0x9f
 10285 08a7 80000000 		.4byte	.LVL206
 10286 08ab 8B000000 		.4byte	.LVL208-1
 10287 08af 0100     		.2byte	0x1
 10288 08b1 52       		.byte	0x52
 10289 08b2 00000000 		.4byte	0
 10290 08b6 00000000 		.4byte	0
 10291              	.LLST61:
 10292 08ba 52000000 		.4byte	.LVL204
 10293 08be 88000000 		.4byte	.LVL207
 10294 08c2 0100     		.2byte	0x1
 10295 08c4 50       		.byte	0x50
 10296 08c5 00000000 		.4byte	0
 10297 08c9 00000000 		.4byte	0
 10298              	.LLST62:
 10299 08cd 00000000 		.4byte	.LVL211
 10300 08d1 23000000 		.4byte	.LVL214-1
 10301 08d5 0100     		.2byte	0x1
 10302 08d7 50       		.byte	0x50
 10303 08d8 23000000 		.4byte	.LVL214-1
 10304 08dc 32000000 		.4byte	.LVL217
 10305 08e0 0100     		.2byte	0x1
 10306 08e2 54       		.byte	0x54
 10307 08e3 32000000 		.4byte	.LVL217
 10308 08e7 34000000 		.4byte	.LVL218
 10309 08eb 0100     		.2byte	0x1
 10310 08ed 50       		.byte	0x50
 10311 08ee 34000000 		.4byte	.LVL218
 10312 08f2 50000000 		.4byte	.LFE141
 10313 08f6 0400     		.2byte	0x4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 284


 10314 08f8 F3       		.byte	0xf3
 10315 08f9 01       		.uleb128 0x1
 10316 08fa 50       		.byte	0x50
 10317 08fb 9F       		.byte	0x9f
 10318 08fc 00000000 		.4byte	0
 10319 0900 00000000 		.4byte	0
 10320              	.LLST63:
 10321 0904 02000000 		.4byte	.LVL212
 10322 0908 30000000 		.4byte	.LVL216
 10323 090c 0200     		.2byte	0x2
 10324 090e 30       		.byte	0x30
 10325 090f 9F       		.byte	0x9f
 10326 0910 30000000 		.4byte	.LVL216
 10327 0914 32000000 		.4byte	.LVL217
 10328 0918 0100     		.2byte	0x1
 10329 091a 50       		.byte	0x50
 10330 091b 32000000 		.4byte	.LVL217
 10331 091f 34000000 		.4byte	.LVL218
 10332 0923 0200     		.2byte	0x2
 10333 0925 30       		.byte	0x30
 10334 0926 9F       		.byte	0x9f
 10335 0927 34000000 		.4byte	.LVL218
 10336 092b 50000000 		.4byte	.LFE141
 10337 092f 0100     		.2byte	0x1
 10338 0931 50       		.byte	0x50
 10339 0932 00000000 		.4byte	0
 10340 0936 00000000 		.4byte	0
 10341              	.LLST64:
 10342 093a 22000000 		.4byte	.LVL219
 10343 093e 3C000000 		.4byte	.LVL220
 10344 0942 0100     		.2byte	0x1
 10345 0944 53       		.byte	0x53
 10346 0945 00000000 		.4byte	0
 10347 0949 00000000 		.4byte	0
 10348              	.LLST65:
 10349 094d 58000000 		.4byte	.LVL222
 10350 0951 6C000000 		.4byte	.LVL223
 10351 0955 0100     		.2byte	0x1
 10352 0957 53       		.byte	0x53
 10353 0958 6E000000 		.4byte	.LVL224
 10354 095c C8000000 		.4byte	.LFE158
 10355 0960 0100     		.2byte	0x1
 10356 0962 53       		.byte	0x53
 10357 0963 00000000 		.4byte	0
 10358 0967 00000000 		.4byte	0
 10359              	.LLST66:
 10360 096b 00000000 		.4byte	.LVL227
 10361 096f 07000000 		.4byte	.LVL228-1
 10362 0973 0100     		.2byte	0x1
 10363 0975 50       		.byte	0x50
 10364 0976 07000000 		.4byte	.LVL228-1
 10365 097a 10000000 		.4byte	.LVL229
 10366 097e 0100     		.2byte	0x1
 10367 0980 54       		.byte	0x54
 10368 0981 00000000 		.4byte	0
 10369 0985 00000000 		.4byte	0
 10370              	.LLST67:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 285


 10371 0989 10000000 		.4byte	.LVL229
 10372 098d AE000000 		.4byte	.LVL241
 10373 0991 0100     		.2byte	0x1
 10374 0993 54       		.byte	0x54
 10375 0994 00000000 		.4byte	0
 10376 0998 00000000 		.4byte	0
 10377              	.LLST68:
 10378 099c 00000000 		.4byte	.LVL242
 10379 09a0 23000000 		.4byte	.LVL245-1
 10380 09a4 0100     		.2byte	0x1
 10381 09a6 50       		.byte	0x50
 10382 09a7 23000000 		.4byte	.LVL245-1
 10383 09ab 34000000 		.4byte	.LFE159
 10384 09af 0400     		.2byte	0x4
 10385 09b1 F3       		.byte	0xf3
 10386 09b2 01       		.uleb128 0x1
 10387 09b3 50       		.byte	0x50
 10388 09b4 9F       		.byte	0x9f
 10389 09b5 00000000 		.4byte	0
 10390 09b9 00000000 		.4byte	0
 10391              	.LLST69:
 10392 09bd 00000000 		.4byte	.LVL242
 10393 09c1 1E000000 		.4byte	.LVL244
 10394 09c5 0100     		.2byte	0x1
 10395 09c7 51       		.byte	0x51
 10396 09c8 1E000000 		.4byte	.LVL244
 10397 09cc 2E000000 		.4byte	.LVL247
 10398 09d0 0100     		.2byte	0x1
 10399 09d2 54       		.byte	0x54
 10400 09d3 2E000000 		.4byte	.LVL247
 10401 09d7 34000000 		.4byte	.LFE159
 10402 09db 0400     		.2byte	0x4
 10403 09dd F3       		.byte	0xf3
 10404 09de 01       		.uleb128 0x1
 10405 09df 51       		.byte	0x51
 10406 09e0 9F       		.byte	0x9f
 10407 09e1 00000000 		.4byte	0
 10408 09e5 00000000 		.4byte	0
 10409              	.LLST70:
 10410 09e9 00000000 		.4byte	.LVL248
 10411 09ed 18000000 		.4byte	.LVL250
 10412 09f1 0100     		.2byte	0x1
 10413 09f3 50       		.byte	0x50
 10414 09f4 18000000 		.4byte	.LVL250
 10415 09f8 2E000000 		.4byte	.LVL251
 10416 09fc 0100     		.2byte	0x1
 10417 09fe 53       		.byte	0x53
 10418 09ff 2E000000 		.4byte	.LVL251
 10419 0a03 30000000 		.4byte	.LVL252
 10420 0a07 0400     		.2byte	0x4
 10421 0a09 F3       		.byte	0xf3
 10422 0a0a 01       		.uleb128 0x1
 10423 0a0b 50       		.byte	0x50
 10424 0a0c 9F       		.byte	0x9f
 10425 0a0d 30000000 		.4byte	.LVL252
 10426 0a11 38000000 		.4byte	.LVL253
 10427 0a15 0100     		.2byte	0x1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 286


 10428 0a17 53       		.byte	0x53
 10429 0a18 38000000 		.4byte	.LVL253
 10430 0a1c 4D000000 		.4byte	.LVL257-1
 10431 0a20 0100     		.2byte	0x1
 10432 0a22 50       		.byte	0x50
 10433 0a23 4D000000 		.4byte	.LVL257-1
 10434 0a27 5C000000 		.4byte	.LFE160
 10435 0a2b 0400     		.2byte	0x4
 10436 0a2d F3       		.byte	0xf3
 10437 0a2e 01       		.uleb128 0x1
 10438 0a2f 50       		.byte	0x50
 10439 0a30 9F       		.byte	0x9f
 10440 0a31 00000000 		.4byte	0
 10441 0a35 00000000 		.4byte	0
 10442              	.LLST71:
 10443 0a39 00000000 		.4byte	.LVL248
 10444 0a3d 3E000000 		.4byte	.LVL255
 10445 0a41 0100     		.2byte	0x1
 10446 0a43 51       		.byte	0x51
 10447 0a44 3E000000 		.4byte	.LVL255
 10448 0a48 42000000 		.4byte	.LVL256
 10449 0a4c 0100     		.2byte	0x1
 10450 0a4e 53       		.byte	0x53
 10451 0a4f 42000000 		.4byte	.LVL256
 10452 0a53 5C000000 		.4byte	.LFE160
 10453 0a57 0400     		.2byte	0x4
 10454 0a59 F3       		.byte	0xf3
 10455 0a5a 01       		.uleb128 0x1
 10456 0a5b 51       		.byte	0x51
 10457 0a5c 9F       		.byte	0x9f
 10458 0a5d 00000000 		.4byte	0
 10459 0a61 00000000 		.4byte	0
 10460              	.LLST72:
 10461 0a65 00000000 		.4byte	.LVL248
 10462 0a69 3A000000 		.4byte	.LVL254
 10463 0a6d 0100     		.2byte	0x1
 10464 0a6f 52       		.byte	0x52
 10465 0a70 3A000000 		.4byte	.LVL254
 10466 0a74 58000000 		.4byte	.LVL259
 10467 0a78 0100     		.2byte	0x1
 10468 0a7a 54       		.byte	0x54
 10469 0a7b 58000000 		.4byte	.LVL259
 10470 0a7f 5C000000 		.4byte	.LFE160
 10471 0a83 0400     		.2byte	0x4
 10472 0a85 F3       		.byte	0xf3
 10473 0a86 01       		.uleb128 0x1
 10474 0a87 52       		.byte	0x52
 10475 0a88 9F       		.byte	0x9f
 10476 0a89 00000000 		.4byte	0
 10477 0a8d 00000000 		.4byte	0
 10478              	.LLST73:
 10479 0a91 00000000 		.4byte	.LVL260
 10480 0a95 25000000 		.4byte	.LVL264-1
 10481 0a99 0100     		.2byte	0x1
 10482 0a9b 50       		.byte	0x50
 10483 0a9c 25000000 		.4byte	.LVL264-1
 10484 0aa0 3C000000 		.4byte	.LFE161
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 287


 10485 0aa4 0400     		.2byte	0x4
 10486 0aa6 F3       		.byte	0xf3
 10487 0aa7 01       		.uleb128 0x1
 10488 0aa8 50       		.byte	0x50
 10489 0aa9 9F       		.byte	0x9f
 10490 0aaa 00000000 		.4byte	0
 10491 0aae 00000000 		.4byte	0
 10492              	.LLST74:
 10493 0ab2 00000000 		.4byte	.LVL260
 10494 0ab6 20000000 		.4byte	.LVL263
 10495 0aba 0100     		.2byte	0x1
 10496 0abc 51       		.byte	0x51
 10497 0abd 20000000 		.4byte	.LVL263
 10498 0ac1 36000000 		.4byte	.LVL267
 10499 0ac5 0100     		.2byte	0x1
 10500 0ac7 54       		.byte	0x54
 10501 0ac8 00000000 		.4byte	0
 10502 0acc 00000000 		.4byte	0
 10503              	.LLST75:
 10504 0ad0 00000000 		.4byte	.LVL260
 10505 0ad4 1C000000 		.4byte	.LVL262
 10506 0ad8 0100     		.2byte	0x1
 10507 0ada 52       		.byte	0x52
 10508 0adb 1C000000 		.4byte	.LVL262
 10509 0adf 36000000 		.4byte	.LVL267
 10510 0ae3 0100     		.2byte	0x1
 10511 0ae5 55       		.byte	0x55
 10512 0ae6 36000000 		.4byte	.LVL267
 10513 0aea 3C000000 		.4byte	.LFE161
 10514 0aee 0400     		.2byte	0x4
 10515 0af0 F3       		.byte	0xf3
 10516 0af1 01       		.uleb128 0x1
 10517 0af2 52       		.byte	0x52
 10518 0af3 9F       		.byte	0x9f
 10519 0af4 00000000 		.4byte	0
 10520 0af8 00000000 		.4byte	0
 10521              	.LLST76:
 10522 0afc 00000000 		.4byte	.LVL268
 10523 0b00 20000000 		.4byte	.LVL271
 10524 0b04 0100     		.2byte	0x1
 10525 0b06 50       		.byte	0x50
 10526 0b07 20000000 		.4byte	.LVL271
 10527 0b0b 88000000 		.4byte	.LFE162
 10528 0b0f 0400     		.2byte	0x4
 10529 0b11 F3       		.byte	0xf3
 10530 0b12 01       		.uleb128 0x1
 10531 0b13 50       		.byte	0x50
 10532 0b14 9F       		.byte	0x9f
 10533 0b15 00000000 		.4byte	0
 10534 0b19 00000000 		.4byte	0
 10535              	.LLST77:
 10536 0b1d 06000000 		.4byte	.LVL269
 10537 0b21 7C000000 		.4byte	.LVL279
 10538 0b25 0100     		.2byte	0x1
 10539 0b27 54       		.byte	0x54
 10540 0b28 00000000 		.4byte	0
 10541 0b2c 00000000 		.4byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 288


 10542              	.LLST78:
 10543 0b30 6E000000 		.4byte	.LVL276
 10544 0b34 78000000 		.4byte	.LVL277
 10545 0b38 0200     		.2byte	0x2
 10546 0b3a 31       		.byte	0x31
 10547 0b3b 9F       		.byte	0x9f
 10548 0b3c 7A000000 		.4byte	.LVL278
 10549 0b40 88000000 		.4byte	.LFE162
 10550 0b44 0100     		.2byte	0x1
 10551 0b46 50       		.byte	0x50
 10552 0b47 00000000 		.4byte	0
 10553 0b4b 00000000 		.4byte	0
 10554              	.LLST79:
 10555 0b4f 00000000 		.4byte	.LVL280
 10556 0b53 3B000000 		.4byte	.LVL284-1
 10557 0b57 0100     		.2byte	0x1
 10558 0b59 50       		.byte	0x50
 10559 0b5a 3B000000 		.4byte	.LVL284-1
 10560 0b5e 84000000 		.4byte	.LFE163
 10561 0b62 0400     		.2byte	0x4
 10562 0b64 F3       		.byte	0xf3
 10563 0b65 01       		.uleb128 0x1
 10564 0b66 50       		.byte	0x50
 10565 0b67 9F       		.byte	0x9f
 10566 0b68 00000000 		.4byte	0
 10567 0b6c 00000000 		.4byte	0
 10568              	.LLST80:
 10569 0b70 00000000 		.4byte	.LVL280
 10570 0b74 3B000000 		.4byte	.LVL284-1
 10571 0b78 0100     		.2byte	0x1
 10572 0b7a 51       		.byte	0x51
 10573 0b7b 3B000000 		.4byte	.LVL284-1
 10574 0b7f 84000000 		.4byte	.LFE163
 10575 0b83 0400     		.2byte	0x4
 10576 0b85 F3       		.byte	0xf3
 10577 0b86 01       		.uleb128 0x1
 10578 0b87 51       		.byte	0x51
 10579 0b88 9F       		.byte	0x9f
 10580 0b89 00000000 		.4byte	0
 10581 0b8d 00000000 		.4byte	0
 10582              	.LLST81:
 10583 0b91 24000000 		.4byte	.LVL282
 10584 0b95 7E000000 		.4byte	.LVL287
 10585 0b99 0100     		.2byte	0x1
 10586 0b9b 54       		.byte	0x54
 10587 0b9c 00000000 		.4byte	0
 10588 0ba0 00000000 		.4byte	0
 10589              	.LLST82:
 10590 0ba4 00000000 		.4byte	.LVL288
 10591 0ba8 1B000000 		.4byte	.LVL290-1
 10592 0bac 0100     		.2byte	0x1
 10593 0bae 50       		.byte	0x50
 10594 0baf 1B000000 		.4byte	.LVL290-1
 10595 0bb3 30000000 		.4byte	.LVL292
 10596 0bb7 0100     		.2byte	0x1
 10597 0bb9 54       		.byte	0x54
 10598 0bba 30000000 		.4byte	.LVL292
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 289


 10599 0bbe 34000000 		.4byte	.LFE164
 10600 0bc2 0400     		.2byte	0x4
 10601 0bc4 F3       		.byte	0xf3
 10602 0bc5 01       		.uleb128 0x1
 10603 0bc6 50       		.byte	0x50
 10604 0bc7 9F       		.byte	0x9f
 10605 0bc8 00000000 		.4byte	0
 10606 0bcc 00000000 		.4byte	0
 10607              	.LLST83:
 10608 0bd0 00000000 		.4byte	.LVL294
 10609 0bd4 31000000 		.4byte	.LVL297-1
 10610 0bd8 0100     		.2byte	0x1
 10611 0bda 50       		.byte	0x50
 10612 0bdb 31000000 		.4byte	.LVL297-1
 10613 0bdf 7C000000 		.4byte	.LVL311
 10614 0be3 0100     		.2byte	0x1
 10615 0be5 55       		.byte	0x55
 10616 0be6 7C000000 		.4byte	.LVL311
 10617 0bea 80000000 		.4byte	.LFE166
 10618 0bee 0400     		.2byte	0x4
 10619 0bf0 F3       		.byte	0xf3
 10620 0bf1 01       		.uleb128 0x1
 10621 0bf2 50       		.byte	0x50
 10622 0bf3 9F       		.byte	0x9f
 10623 0bf4 00000000 		.4byte	0
 10624 0bf8 00000000 		.4byte	0
 10625              	.LLST84:
 10626 0bfc 00000000 		.4byte	.LVL294
 10627 0c00 31000000 		.4byte	.LVL297-1
 10628 0c04 0100     		.2byte	0x1
 10629 0c06 51       		.byte	0x51
 10630 0c07 31000000 		.4byte	.LVL297-1
 10631 0c0b 64000000 		.4byte	.LVL302
 10632 0c0f 0100     		.2byte	0x1
 10633 0c11 54       		.byte	0x54
 10634 0c12 64000000 		.4byte	.LVL302
 10635 0c16 66000000 		.4byte	.LVL303
 10636 0c1a 0400     		.2byte	0x4
 10637 0c1c F3       		.byte	0xf3
 10638 0c1d 01       		.uleb128 0x1
 10639 0c1e 51       		.byte	0x51
 10640 0c1f 9F       		.byte	0x9f
 10641 0c20 66000000 		.4byte	.LVL303
 10642 0c24 6C000000 		.4byte	.LVL305
 10643 0c28 0100     		.2byte	0x1
 10644 0c2a 54       		.byte	0x54
 10645 0c2b 6C000000 		.4byte	.LVL305
 10646 0c2f 6E000000 		.4byte	.LVL306
 10647 0c33 0400     		.2byte	0x4
 10648 0c35 F3       		.byte	0xf3
 10649 0c36 01       		.uleb128 0x1
 10650 0c37 51       		.byte	0x51
 10651 0c38 9F       		.byte	0x9f
 10652 0c39 6E000000 		.4byte	.LVL306
 10653 0c3d 70000000 		.4byte	.LVL307
 10654 0c41 0100     		.2byte	0x1
 10655 0c43 54       		.byte	0x54
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 290


 10656 0c44 70000000 		.4byte	.LVL307
 10657 0c48 72000000 		.4byte	.LVL308
 10658 0c4c 0400     		.2byte	0x4
 10659 0c4e F3       		.byte	0xf3
 10660 0c4f 01       		.uleb128 0x1
 10661 0c50 51       		.byte	0x51
 10662 0c51 9F       		.byte	0x9f
 10663 0c52 72000000 		.4byte	.LVL308
 10664 0c56 74000000 		.4byte	.LVL309
 10665 0c5a 0100     		.2byte	0x1
 10666 0c5c 54       		.byte	0x54
 10667 0c5d 74000000 		.4byte	.LVL309
 10668 0c61 80000000 		.4byte	.LFE166
 10669 0c65 0400     		.2byte	0x4
 10670 0c67 F3       		.byte	0xf3
 10671 0c68 01       		.uleb128 0x1
 10672 0c69 51       		.byte	0x51
 10673 0c6a 9F       		.byte	0x9f
 10674 0c6b 00000000 		.4byte	0
 10675 0c6f 00000000 		.4byte	0
 10676              	.LLST85:
 10677 0c73 62000000 		.4byte	.LVL301
 10678 0c77 66000000 		.4byte	.LVL303
 10679 0c7b 0200     		.2byte	0x2
 10680 0c7d 30       		.byte	0x30
 10681 0c7e 9F       		.byte	0x9f
 10682 0c7f 6A000000 		.4byte	.LVL304
 10683 0c83 6E000000 		.4byte	.LVL306
 10684 0c87 0200     		.2byte	0x2
 10685 0c89 31       		.byte	0x31
 10686 0c8a 9F       		.byte	0x9f
 10687 0c8b 74000000 		.4byte	.LVL309
 10688 0c8f 7C000000 		.4byte	.LVL311
 10689 0c93 0100     		.2byte	0x1
 10690 0c95 54       		.byte	0x54
 10691 0c96 7C000000 		.4byte	.LVL311
 10692 0c9a 80000000 		.4byte	.LFE166
 10693 0c9e 0100     		.2byte	0x1
 10694 0ca0 50       		.byte	0x50
 10695 0ca1 00000000 		.4byte	0
 10696 0ca5 00000000 		.4byte	0
 10697              	.LLST86:
 10698 0ca9 38000000 		.4byte	.LVL298
 10699 0cad 5E000000 		.4byte	.LVL300
 10700 0cb1 0100     		.2byte	0x1
 10701 0cb3 50       		.byte	0x50
 10702 0cb4 66000000 		.4byte	.LVL303
 10703 0cb8 74000000 		.4byte	.LVL309
 10704 0cbc 0100     		.2byte	0x1
 10705 0cbe 50       		.byte	0x50
 10706 0cbf 00000000 		.4byte	0
 10707 0cc3 00000000 		.4byte	0
 10708              	.LLST87:
 10709 0cc7 3C000000 		.4byte	.LVL299
 10710 0ccb 61000000 		.4byte	.LVL301-1
 10711 0ccf 0100     		.2byte	0x1
 10712 0cd1 52       		.byte	0x52
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 291


 10713 0cd2 66000000 		.4byte	.LVL303
 10714 0cd6 74000000 		.4byte	.LVL309
 10715 0cda 0100     		.2byte	0x1
 10716 0cdc 52       		.byte	0x52
 10717 0cdd 00000000 		.4byte	0
 10718 0ce1 00000000 		.4byte	0
 10719              	.LLST88:
 10720 0ce5 00000000 		.4byte	.LVL312
 10721 0ce9 0C000000 		.4byte	.LVL313
 10722 0ced 0100     		.2byte	0x1
 10723 0cef 50       		.byte	0x50
 10724 0cf0 00000000 		.4byte	0
 10725 0cf4 00000000 		.4byte	0
 10726              	.LLST89:
 10727 0cf8 00000000 		.4byte	.LVL312
 10728 0cfc 0E000000 		.4byte	.LVL314
 10729 0d00 0100     		.2byte	0x1
 10730 0d02 51       		.byte	0x51
 10731 0d03 0E000000 		.4byte	.LVL314
 10732 0d07 12000000 		.4byte	.LVL315
 10733 0d0b 0300     		.2byte	0x3
 10734 0d0d 71       		.byte	0x71
 10735 0d0e 70       		.sleb128 -16
 10736 0d0f 9F       		.byte	0x9f
 10737 0d10 12000000 		.4byte	.LVL315
 10738 0d14 1C000000 		.4byte	.LFE169
 10739 0d18 0400     		.2byte	0x4
 10740 0d1a F3       		.byte	0xf3
 10741 0d1b 01       		.uleb128 0x1
 10742 0d1c 51       		.byte	0x51
 10743 0d1d 9F       		.byte	0x9f
 10744 0d1e 00000000 		.4byte	0
 10745 0d22 00000000 		.4byte	0
 10746              	.LLST90:
 10747 0d26 0C000000 		.4byte	.LVL313
 10748 0d2a 14000000 		.4byte	.LVL316
 10749 0d2e 0100     		.2byte	0x1
 10750 0d30 50       		.byte	0x50
 10751 0d31 00000000 		.4byte	0
 10752 0d35 00000000 		.4byte	0
 10753              	.LLST91:
 10754 0d39 00000000 		.4byte	.LVL317
 10755 0d3d 0C000000 		.4byte	.LVL318
 10756 0d41 0100     		.2byte	0x1
 10757 0d43 50       		.byte	0x50
 10758 0d44 16000000 		.4byte	.LVL322
 10759 0d48 18000000 		.4byte	.LVL323
 10760 0d4c 0100     		.2byte	0x1
 10761 0d4e 50       		.byte	0x50
 10762 0d4f 18000000 		.4byte	.LVL323
 10763 0d53 20000000 		.4byte	.LFE170
 10764 0d57 0400     		.2byte	0x4
 10765 0d59 F3       		.byte	0xf3
 10766 0d5a 01       		.uleb128 0x1
 10767 0d5b 50       		.byte	0x50
 10768 0d5c 9F       		.byte	0x9f
 10769 0d5d 00000000 		.4byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 292


 10770 0d61 00000000 		.4byte	0
 10771              	.LLST92:
 10772 0d65 00000000 		.4byte	.LVL317
 10773 0d69 0E000000 		.4byte	.LVL319
 10774 0d6d 0100     		.2byte	0x1
 10775 0d6f 51       		.byte	0x51
 10776 0d70 0E000000 		.4byte	.LVL319
 10777 0d74 16000000 		.4byte	.LVL322
 10778 0d78 0300     		.2byte	0x3
 10779 0d7a 71       		.byte	0x71
 10780 0d7b 70       		.sleb128 -16
 10781 0d7c 9F       		.byte	0x9f
 10782 0d7d 16000000 		.4byte	.LVL322
 10783 0d81 20000000 		.4byte	.LFE170
 10784 0d85 0100     		.2byte	0x1
 10785 0d87 51       		.byte	0x51
 10786 0d88 00000000 		.4byte	0
 10787 0d8c 00000000 		.4byte	0
 10788              	.LLST93:
 10789 0d90 00000000 		.4byte	.LVL317
 10790 0d94 14000000 		.4byte	.LVL321
 10791 0d98 0200     		.2byte	0x2
 10792 0d9a 30       		.byte	0x30
 10793 0d9b 9F       		.byte	0x9f
 10794 0d9c 14000000 		.4byte	.LVL321
 10795 0da0 16000000 		.4byte	.LVL322
 10796 0da4 0100     		.2byte	0x1
 10797 0da6 50       		.byte	0x50
 10798 0da7 16000000 		.4byte	.LVL322
 10799 0dab 18000000 		.4byte	.LVL323
 10800 0daf 0200     		.2byte	0x2
 10801 0db1 30       		.byte	0x30
 10802 0db2 9F       		.byte	0x9f
 10803 0db3 18000000 		.4byte	.LVL323
 10804 0db7 20000000 		.4byte	.LFE170
 10805 0dbb 0100     		.2byte	0x1
 10806 0dbd 50       		.byte	0x50
 10807 0dbe 00000000 		.4byte	0
 10808 0dc2 00000000 		.4byte	0
 10809              	.LLST94:
 10810 0dc6 0C000000 		.4byte	.LVL318
 10811 0dca 12000000 		.4byte	.LVL320
 10812 0dce 0100     		.2byte	0x1
 10813 0dd0 50       		.byte	0x50
 10814 0dd1 00000000 		.4byte	0
 10815 0dd5 00000000 		.4byte	0
 10816              	.LLST95:
 10817 0dd9 00000000 		.4byte	.LVL327
 10818 0ddd 09000000 		.4byte	.LVL328-1
 10819 0de1 0100     		.2byte	0x1
 10820 0de3 50       		.byte	0x50
 10821 0de4 09000000 		.4byte	.LVL328-1
 10822 0de8 78000000 		.4byte	.LVL334
 10823 0dec 0100     		.2byte	0x1
 10824 0dee 55       		.byte	0x55
 10825 0def 78000000 		.4byte	.LVL334
 10826 0df3 80000000 		.4byte	.LFE178
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 293


 10827 0df7 0400     		.2byte	0x4
 10828 0df9 F3       		.byte	0xf3
 10829 0dfa 01       		.uleb128 0x1
 10830 0dfb 50       		.byte	0x50
 10831 0dfc 9F       		.byte	0x9f
 10832 0dfd 00000000 		.4byte	0
 10833 0e01 00000000 		.4byte	0
 10834              	.LLST96:
 10835 0e05 00000000 		.4byte	.LVL327
 10836 0e09 09000000 		.4byte	.LVL328-1
 10837 0e0d 0100     		.2byte	0x1
 10838 0e0f 51       		.byte	0x51
 10839 0e10 09000000 		.4byte	.LVL328-1
 10840 0e14 4A000000 		.4byte	.LVL332
 10841 0e18 0100     		.2byte	0x1
 10842 0e1a 54       		.byte	0x54
 10843 0e1b 4A000000 		.4byte	.LVL332
 10844 0e1f 80000000 		.4byte	.LFE178
 10845 0e23 0400     		.2byte	0x4
 10846 0e25 F3       		.byte	0xf3
 10847 0e26 01       		.uleb128 0x1
 10848 0e27 51       		.byte	0x51
 10849 0e28 9F       		.byte	0x9f
 10850 0e29 00000000 		.4byte	0
 10851 0e2d 00000000 		.4byte	0
 10852              	.LLST97:
 10853 0e31 4A000000 		.4byte	.LVL332
 10854 0e35 78000000 		.4byte	.LVL334
 10855 0e39 0100     		.2byte	0x1
 10856 0e3b 54       		.byte	0x54
 10857 0e3c 78000000 		.4byte	.LVL334
 10858 0e40 80000000 		.4byte	.LFE178
 10859 0e44 0100     		.2byte	0x1
 10860 0e46 50       		.byte	0x50
 10861 0e47 00000000 		.4byte	0
 10862 0e4b 00000000 		.4byte	0
 10863              	.LLST98:
 10864 0e4f 00000000 		.4byte	.LVL335
 10865 0e53 0D000000 		.4byte	.LVL336-1
 10866 0e57 0100     		.2byte	0x1
 10867 0e59 50       		.byte	0x50
 10868 0e5a 0D000000 		.4byte	.LVL336-1
 10869 0e5e 9C000000 		.4byte	.LVL346
 10870 0e62 0100     		.2byte	0x1
 10871 0e64 57       		.byte	0x57
 10872 0e65 9C000000 		.4byte	.LVL346
 10873 0e69 A4000000 		.4byte	.LFE179
 10874 0e6d 0400     		.2byte	0x4
 10875 0e6f F3       		.byte	0xf3
 10876 0e70 01       		.uleb128 0x1
 10877 0e71 50       		.byte	0x50
 10878 0e72 9F       		.byte	0x9f
 10879 0e73 00000000 		.4byte	0
 10880 0e77 00000000 		.4byte	0
 10881              	.LLST99:
 10882 0e7b 00000000 		.4byte	.LVL335
 10883 0e7f 0D000000 		.4byte	.LVL336-1
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 294


 10884 0e83 0100     		.2byte	0x1
 10885 0e85 51       		.byte	0x51
 10886 0e86 0D000000 		.4byte	.LVL336-1
 10887 0e8a 80000000 		.4byte	.LVL340
 10888 0e8e 0100     		.2byte	0x1
 10889 0e90 55       		.byte	0x55
 10890 0e91 80000000 		.4byte	.LVL340
 10891 0e95 86000000 		.4byte	.LVL343
 10892 0e99 0400     		.2byte	0x4
 10893 0e9b F3       		.byte	0xf3
 10894 0e9c 01       		.uleb128 0x1
 10895 0e9d 51       		.byte	0x51
 10896 0e9e 9F       		.byte	0x9f
 10897 0e9f 86000000 		.4byte	.LVL343
 10898 0ea3 88000000 		.4byte	.LVL344
 10899 0ea7 0100     		.2byte	0x1
 10900 0ea9 55       		.byte	0x55
 10901 0eaa 88000000 		.4byte	.LVL344
 10902 0eae A4000000 		.4byte	.LFE179
 10903 0eb2 0400     		.2byte	0x4
 10904 0eb4 F3       		.byte	0xf3
 10905 0eb5 01       		.uleb128 0x1
 10906 0eb6 51       		.byte	0x51
 10907 0eb7 9F       		.byte	0x9f
 10908 0eb8 00000000 		.4byte	0
 10909 0ebc 00000000 		.4byte	0
 10910              	.LLST100:
 10911 0ec0 00000000 		.4byte	.LVL335
 10912 0ec4 0D000000 		.4byte	.LVL336-1
 10913 0ec8 0100     		.2byte	0x1
 10914 0eca 52       		.byte	0x52
 10915 0ecb 0D000000 		.4byte	.LVL336-1
 10916 0ecf 84000000 		.4byte	.LVL342
 10917 0ed3 0100     		.2byte	0x1
 10918 0ed5 54       		.byte	0x54
 10919 0ed6 84000000 		.4byte	.LVL342
 10920 0eda 86000000 		.4byte	.LVL343
 10921 0ede 0400     		.2byte	0x4
 10922 0ee0 F3       		.byte	0xf3
 10923 0ee1 01       		.uleb128 0x1
 10924 0ee2 52       		.byte	0x52
 10925 0ee3 9F       		.byte	0x9f
 10926 0ee4 86000000 		.4byte	.LVL343
 10927 0ee8 88000000 		.4byte	.LVL344
 10928 0eec 0100     		.2byte	0x1
 10929 0eee 54       		.byte	0x54
 10930 0eef 88000000 		.4byte	.LVL344
 10931 0ef3 A4000000 		.4byte	.LFE179
 10932 0ef7 0400     		.2byte	0x4
 10933 0ef9 F3       		.byte	0xf3
 10934 0efa 01       		.uleb128 0x1
 10935 0efb 52       		.byte	0x52
 10936 0efc 9F       		.byte	0x9f
 10937 0efd 00000000 		.4byte	0
 10938 0f01 00000000 		.4byte	0
 10939              	.LLST101:
 10940 0f05 00000000 		.4byte	.LVL335
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 295


 10941 0f09 0D000000 		.4byte	.LVL336-1
 10942 0f0d 0100     		.2byte	0x1
 10943 0f0f 53       		.byte	0x53
 10944 0f10 0D000000 		.4byte	.LVL336-1
 10945 0f14 9C000000 		.4byte	.LVL346
 10946 0f18 0100     		.2byte	0x1
 10947 0f1a 56       		.byte	0x56
 10948 0f1b 9C000000 		.4byte	.LVL346
 10949 0f1f A4000000 		.4byte	.LFE179
 10950 0f23 0400     		.2byte	0x4
 10951 0f25 F3       		.byte	0xf3
 10952 0f26 01       		.uleb128 0x1
 10953 0f27 53       		.byte	0x53
 10954 0f28 9F       		.byte	0x9f
 10955 0f29 00000000 		.4byte	0
 10956 0f2d 00000000 		.4byte	0
 10957              	.LLST102:
 10958 0f31 82000000 		.4byte	.LVL341
 10959 0f35 86000000 		.4byte	.LVL343
 10960 0f39 0200     		.2byte	0x2
 10961 0f3b 31       		.byte	0x31
 10962 0f3c 9F       		.byte	0x9f
 10963 0f3d 88000000 		.4byte	.LVL344
 10964 0f41 9C000000 		.4byte	.LVL346
 10965 0f45 0100     		.2byte	0x1
 10966 0f47 54       		.byte	0x54
 10967 0f48 9C000000 		.4byte	.LVL346
 10968 0f4c A4000000 		.4byte	.LFE179
 10969 0f50 0100     		.2byte	0x1
 10970 0f52 50       		.byte	0x50
 10971 0f53 00000000 		.4byte	0
 10972 0f57 00000000 		.4byte	0
 10973              	.LLST103:
 10974 0f5b 00000000 		.4byte	.LVL347
 10975 0f5f 21000000 		.4byte	.LVL352-1
 10976 0f63 0100     		.2byte	0x1
 10977 0f65 50       		.byte	0x50
 10978 0f66 21000000 		.4byte	.LVL352-1
 10979 0f6a D6000000 		.4byte	.LVL361
 10980 0f6e 0100     		.2byte	0x1
 10981 0f70 54       		.byte	0x54
 10982 0f71 D6000000 		.4byte	.LVL361
 10983 0f75 E4000000 		.4byte	.LFE180
 10984 0f79 0400     		.2byte	0x4
 10985 0f7b F3       		.byte	0xf3
 10986 0f7c 01       		.uleb128 0x1
 10987 0f7d 50       		.byte	0x50
 10988 0f7e 9F       		.byte	0x9f
 10989 0f7f 00000000 		.4byte	0
 10990 0f83 00000000 		.4byte	0
 10991              	.LLST104:
 10992 0f87 00000000 		.4byte	.LVL347
 10993 0f8b 21000000 		.4byte	.LVL352-1
 10994 0f8f 0100     		.2byte	0x1
 10995 0f91 51       		.byte	0x51
 10996 0f92 21000000 		.4byte	.LVL352-1
 10997 0f96 46000000 		.4byte	.LVL354
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 296


 10998 0f9a 0100     		.2byte	0x1
 10999 0f9c 56       		.byte	0x56
 11000 0f9d 46000000 		.4byte	.LVL354
 11001 0fa1 4C000000 		.4byte	.LVL355
 11002 0fa5 0400     		.2byte	0x4
 11003 0fa7 F3       		.byte	0xf3
 11004 0fa8 01       		.uleb128 0x1
 11005 0fa9 51       		.byte	0x51
 11006 0faa 9F       		.byte	0x9f
 11007 0fab 4C000000 		.4byte	.LVL355
 11008 0faf 6C000000 		.4byte	.LVL356
 11009 0fb3 0100     		.2byte	0x1
 11010 0fb5 56       		.byte	0x56
 11011 0fb6 6C000000 		.4byte	.LVL356
 11012 0fba E4000000 		.4byte	.LFE180
 11013 0fbe 0400     		.2byte	0x4
 11014 0fc0 F3       		.byte	0xf3
 11015 0fc1 01       		.uleb128 0x1
 11016 0fc2 51       		.byte	0x51
 11017 0fc3 9F       		.byte	0x9f
 11018 0fc4 00000000 		.4byte	0
 11019 0fc8 00000000 		.4byte	0
 11020              	.LLST105:
 11021 0fcc 00000000 		.4byte	.LVL347
 11022 0fd0 21000000 		.4byte	.LVL352-1
 11023 0fd4 0100     		.2byte	0x1
 11024 0fd6 52       		.byte	0x52
 11025 0fd7 21000000 		.4byte	.LVL352-1
 11026 0fdb E4000000 		.4byte	.LFE180
 11027 0fdf 0400     		.2byte	0x4
 11028 0fe1 F3       		.byte	0xf3
 11029 0fe2 01       		.uleb128 0x1
 11030 0fe3 52       		.byte	0x52
 11031 0fe4 9F       		.byte	0x9f
 11032 0fe5 00000000 		.4byte	0
 11033 0fe9 00000000 		.4byte	0
 11034              	.LLST106:
 11035 0fed 00000000 		.4byte	.LVL347
 11036 0ff1 14000000 		.4byte	.LVL349
 11037 0ff5 0100     		.2byte	0x1
 11038 0ff7 53       		.byte	0x53
 11039 0ff8 14000000 		.4byte	.LVL349
 11040 0ffc 16000000 		.4byte	.LVL350
 11041 1000 0400     		.2byte	0x4
 11042 1002 F3       		.byte	0xf3
 11043 1003 01       		.uleb128 0x1
 11044 1004 53       		.byte	0x53
 11045 1005 9F       		.byte	0x9f
 11046 1006 16000000 		.4byte	.LVL350
 11047 100a 21000000 		.4byte	.LVL352-1
 11048 100e 0100     		.2byte	0x1
 11049 1010 53       		.byte	0x53
 11050 1011 21000000 		.4byte	.LVL352-1
 11051 1015 D6000000 		.4byte	.LVL361
 11052 1019 0100     		.2byte	0x1
 11053 101b 57       		.byte	0x57
 11054 101c D6000000 		.4byte	.LVL361
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 297


 11055 1020 E4000000 		.4byte	.LFE180
 11056 1024 0400     		.2byte	0x4
 11057 1026 F3       		.byte	0xf3
 11058 1027 01       		.uleb128 0x1
 11059 1028 53       		.byte	0x53
 11060 1029 9F       		.byte	0x9f
 11061 102a 00000000 		.4byte	0
 11062 102e 00000000 		.4byte	0
 11063              	.LLST107:
 11064 1032 1E000000 		.4byte	.LVL351
 11065 1036 D6000000 		.4byte	.LVL361
 11066 103a 0100     		.2byte	0x1
 11067 103c 54       		.byte	0x54
 11068 103d D6000000 		.4byte	.LVL361
 11069 1041 E4000000 		.4byte	.LFE180
 11070 1045 0400     		.2byte	0x4
 11071 1047 F3       		.byte	0xf3
 11072 1048 01       		.uleb128 0x1
 11073 1049 50       		.byte	0x50
 11074 104a 9F       		.byte	0x9f
 11075 104b 00000000 		.4byte	0
 11076 104f 00000000 		.4byte	0
 11077              	.LLST108:
 11078 1053 02000000 		.4byte	.LVL348
 11079 1057 6C000000 		.4byte	.LVL356
 11080 105b 0200     		.2byte	0x2
 11081 105d 31       		.byte	0x31
 11082 105e 9F       		.byte	0x9f
 11083 105f 6C000000 		.4byte	.LVL356
 11084 1063 D6000000 		.4byte	.LVL361
 11085 1067 0100     		.2byte	0x1
 11086 1069 55       		.byte	0x55
 11087 106a D6000000 		.4byte	.LVL361
 11088 106e E4000000 		.4byte	.LFE180
 11089 1072 0100     		.2byte	0x1
 11090 1074 50       		.byte	0x50
 11091 1075 00000000 		.4byte	0
 11092 1079 00000000 		.4byte	0
 11093              	.LLST109:
 11094 107d 2E000000 		.4byte	.LVL353
 11095 1081 77000000 		.4byte	.LVL357-1
 11096 1085 0100     		.2byte	0x1
 11097 1087 53       		.byte	0x53
 11098 1088 00000000 		.4byte	0
 11099 108c 00000000 		.4byte	0
 11100              	.LLST110:
 11101 1090 00000000 		.4byte	.LVL362
 11102 1094 25000000 		.4byte	.LVL366-1
 11103 1098 0100     		.2byte	0x1
 11104 109a 50       		.byte	0x50
 11105 109b 25000000 		.4byte	.LVL366-1
 11106 109f 12010000 		.4byte	.LVL378
 11107 10a3 0100     		.2byte	0x1
 11108 10a5 54       		.byte	0x54
 11109 10a6 12010000 		.4byte	.LVL378
 11110 10aa 20010000 		.4byte	.LFE181
 11111 10ae 0400     		.2byte	0x4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 298


 11112 10b0 F3       		.byte	0xf3
 11113 10b1 01       		.uleb128 0x1
 11114 10b2 50       		.byte	0x50
 11115 10b3 9F       		.byte	0x9f
 11116 10b4 00000000 		.4byte	0
 11117 10b8 00000000 		.4byte	0
 11118              	.LLST111:
 11119 10bc 00000000 		.4byte	.LVL362
 11120 10c0 25000000 		.4byte	.LVL366-1
 11121 10c4 0100     		.2byte	0x1
 11122 10c6 51       		.byte	0x51
 11123 10c7 25000000 		.4byte	.LVL366-1
 11124 10cb B6000000 		.4byte	.LVL371
 11125 10cf 0100     		.2byte	0x1
 11126 10d1 58       		.byte	0x58
 11127 10d2 B6000000 		.4byte	.LVL371
 11128 10d6 E0000000 		.4byte	.LVL374
 11129 10da 0400     		.2byte	0x4
 11130 10dc F3       		.byte	0xf3
 11131 10dd 01       		.uleb128 0x1
 11132 10de 51       		.byte	0x51
 11133 10df 9F       		.byte	0x9f
 11134 10e0 E0000000 		.4byte	.LVL374
 11135 10e4 EA000000 		.4byte	.LVL375
 11136 10e8 0100     		.2byte	0x1
 11137 10ea 58       		.byte	0x58
 11138 10eb EA000000 		.4byte	.LVL375
 11139 10ef 20010000 		.4byte	.LFE181
 11140 10f3 0400     		.2byte	0x4
 11141 10f5 F3       		.byte	0xf3
 11142 10f6 01       		.uleb128 0x1
 11143 10f7 51       		.byte	0x51
 11144 10f8 9F       		.byte	0x9f
 11145 10f9 00000000 		.4byte	0
 11146 10fd 00000000 		.4byte	0
 11147              	.LLST112:
 11148 1101 00000000 		.4byte	.LVL362
 11149 1105 25000000 		.4byte	.LVL366-1
 11150 1109 0100     		.2byte	0x1
 11151 110b 52       		.byte	0x52
 11152 110c 25000000 		.4byte	.LVL366-1
 11153 1110 20010000 		.4byte	.LFE181
 11154 1114 0400     		.2byte	0x4
 11155 1116 F3       		.byte	0xf3
 11156 1117 01       		.uleb128 0x1
 11157 1118 52       		.byte	0x52
 11158 1119 9F       		.byte	0x9f
 11159 111a 00000000 		.4byte	0
 11160 111e 00000000 		.4byte	0
 11161              	.LLST113:
 11162 1122 00000000 		.4byte	.LVL362
 11163 1126 18000000 		.4byte	.LVL364
 11164 112a 0100     		.2byte	0x1
 11165 112c 53       		.byte	0x53
 11166 112d 18000000 		.4byte	.LVL364
 11167 1131 1A000000 		.4byte	.LVL365
 11168 1135 0400     		.2byte	0x4
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 299


 11169 1137 F3       		.byte	0xf3
 11170 1138 01       		.uleb128 0x1
 11171 1139 53       		.byte	0x53
 11172 113a 9F       		.byte	0x9f
 11173 113b 1A000000 		.4byte	.LVL365
 11174 113f 25000000 		.4byte	.LVL366-1
 11175 1143 0100     		.2byte	0x1
 11176 1145 53       		.byte	0x53
 11177 1146 25000000 		.4byte	.LVL366-1
 11178 114a 12010000 		.4byte	.LVL378
 11179 114e 0100     		.2byte	0x1
 11180 1150 59       		.byte	0x59
 11181 1151 12010000 		.4byte	.LVL378
 11182 1155 20010000 		.4byte	.LFE181
 11183 1159 0400     		.2byte	0x4
 11184 115b F3       		.byte	0xf3
 11185 115c 01       		.uleb128 0x1
 11186 115d 53       		.byte	0x53
 11187 115e 9F       		.byte	0x9f
 11188 115f 00000000 		.4byte	0
 11189 1163 00000000 		.4byte	0
 11190              	.LLST114:
 11191 1167 00000000 		.4byte	.LVL362
 11192 116b 12010000 		.4byte	.LVL378
 11193 116f 0200     		.2byte	0x2
 11194 1171 91       		.byte	0x91
 11195 1172 00       		.sleb128 0
 11196 1173 12010000 		.4byte	.LVL378
 11197 1177 20010000 		.4byte	.LFE181
 11198 117b 0200     		.2byte	0x2
 11199 117d 7D       		.byte	0x7d
 11200 117e 00       		.sleb128 0
 11201 117f 00000000 		.4byte	0
 11202 1183 00000000 		.4byte	0
 11203              	.LLST115:
 11204 1187 26000000 		.4byte	.LVL366
 11205 118b 12010000 		.4byte	.LVL378
 11206 118f 0100     		.2byte	0x1
 11207 1191 54       		.byte	0x54
 11208 1192 12010000 		.4byte	.LVL378
 11209 1196 20010000 		.4byte	.LFE181
 11210 119a 0400     		.2byte	0x4
 11211 119c F3       		.byte	0xf3
 11212 119d 01       		.uleb128 0x1
 11213 119e 50       		.byte	0x50
 11214 119f 9F       		.byte	0x9f
 11215 11a0 00000000 		.4byte	0
 11216 11a4 00000000 		.4byte	0
 11217              	.LLST116:
 11218 11a8 4C000000 		.4byte	.LVL367
 11219 11ac 96000000 		.4byte	.LVL369
 11220 11b0 0100     		.2byte	0x1
 11221 11b2 53       		.byte	0x53
 11222 11b3 00000000 		.4byte	0
 11223 11b7 00000000 		.4byte	0
 11224              	.LLST117:
 11225 11bb 06000000 		.4byte	.LVL363
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 300


 11226 11bf 90000000 		.4byte	.LVL368
 11227 11c3 0200     		.2byte	0x2
 11228 11c5 31       		.byte	0x31
 11229 11c6 9F       		.byte	0x9f
 11230 11c7 90000000 		.4byte	.LVL368
 11231 11cb 12010000 		.4byte	.LVL378
 11232 11cf 0100     		.2byte	0x1
 11233 11d1 55       		.byte	0x55
 11234 11d2 12010000 		.4byte	.LVL378
 11235 11d6 20010000 		.4byte	.LFE181
 11236 11da 0100     		.2byte	0x1
 11237 11dc 50       		.byte	0x50
 11238 11dd 00000000 		.4byte	0
 11239 11e1 00000000 		.4byte	0
 11240              	.LLST118:
 11241 11e5 08010000 		.4byte	.LVL376
 11242 11e9 0C010000 		.4byte	.LVL377
 11243 11ed 0100     		.2byte	0x1
 11244 11ef 57       		.byte	0x57
 11245 11f0 00000000 		.4byte	0
 11246 11f4 00000000 		.4byte	0
 11247              	.LLST119:
 11248 11f8 00000000 		.4byte	.LVL379
 11249 11fc 1D000000 		.4byte	.LVL381-1
 11250 1200 0100     		.2byte	0x1
 11251 1202 50       		.byte	0x50
 11252 1203 1D000000 		.4byte	.LVL381-1
 11253 1207 C0000000 		.4byte	.LVL390
 11254 120b 0100     		.2byte	0x1
 11255 120d 54       		.byte	0x54
 11256 120e C0000000 		.4byte	.LVL390
 11257 1212 CC000000 		.4byte	.LFE182
 11258 1216 0400     		.2byte	0x4
 11259 1218 F3       		.byte	0xf3
 11260 1219 01       		.uleb128 0x1
 11261 121a 50       		.byte	0x50
 11262 121b 9F       		.byte	0x9f
 11263 121c 00000000 		.4byte	0
 11264 1220 00000000 		.4byte	0
 11265              	.LLST120:
 11266 1224 00000000 		.4byte	.LVL379
 11267 1228 1D000000 		.4byte	.LVL381-1
 11268 122c 0100     		.2byte	0x1
 11269 122e 51       		.byte	0x51
 11270 122f 1D000000 		.4byte	.LVL381-1
 11271 1233 C0000000 		.4byte	.LVL390
 11272 1237 0100     		.2byte	0x1
 11273 1239 55       		.byte	0x55
 11274 123a C0000000 		.4byte	.LVL390
 11275 123e CC000000 		.4byte	.LFE182
 11276 1242 0400     		.2byte	0x4
 11277 1244 F3       		.byte	0xf3
 11278 1245 01       		.uleb128 0x1
 11279 1246 51       		.byte	0x51
 11280 1247 9F       		.byte	0x9f
 11281 1248 00000000 		.4byte	0
 11282 124c 00000000 		.4byte	0
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 301


 11283              	.LLST121:
 11284 1250 1E000000 		.4byte	.LVL381
 11285 1254 C0000000 		.4byte	.LVL390
 11286 1258 0100     		.2byte	0x1
 11287 125a 54       		.byte	0x54
 11288 125b C0000000 		.4byte	.LVL390
 11289 125f CC000000 		.4byte	.LFE182
 11290 1263 0400     		.2byte	0x4
 11291 1265 F3       		.byte	0xf3
 11292 1266 01       		.uleb128 0x1
 11293 1267 50       		.byte	0x50
 11294 1268 9F       		.byte	0x9f
 11295 1269 00000000 		.4byte	0
 11296 126d 00000000 		.4byte	0
 11297              	.LLST122:
 11298 1271 38000000 		.4byte	.LVL382
 11299 1275 4A000000 		.4byte	.LVL383
 11300 1279 0100     		.2byte	0x1
 11301 127b 53       		.byte	0x53
 11302 127c 00000000 		.4byte	0
 11303 1280 00000000 		.4byte	0
 11304              	.LLST123:
 11305 1284 BA000000 		.4byte	.LVL388
 11306 1288 BE000000 		.4byte	.LVL389
 11307 128c 0100     		.2byte	0x1
 11308 128e 56       		.byte	0x56
 11309 128f 00000000 		.4byte	0
 11310 1293 00000000 		.4byte	0
 11311              	.LLST124:
 11312 1297 00000000 		.4byte	.LVL391
 11313 129b 0C000000 		.4byte	.LVL392
 11314 129f 0100     		.2byte	0x1
 11315 12a1 50       		.byte	0x50
 11316 12a2 00000000 		.4byte	0
 11317 12a6 00000000 		.4byte	0
 11318              	.LLST125:
 11319 12aa 0C000000 		.4byte	.LVL392
 11320 12ae 22000000 		.4byte	.LVL395
 11321 12b2 0100     		.2byte	0x1
 11322 12b4 54       		.byte	0x54
 11323 12b5 24000000 		.4byte	.LVL396
 11324 12b9 26000000 		.4byte	.LVL397
 11325 12bd 0100     		.2byte	0x1
 11326 12bf 54       		.byte	0x54
 11327 12c0 00000000 		.4byte	0
 11328 12c4 00000000 		.4byte	0
 11329              	.LLST126:
 11330 12c8 20000000 		.4byte	.LVL394
 11331 12cc 24000000 		.4byte	.LVL396
 11332 12d0 0200     		.2byte	0x2
 11333 12d2 31       		.byte	0x31
 11334 12d3 9F       		.byte	0x9f
 11335 12d4 26000000 		.4byte	.LVL397
 11336 12d8 2E000000 		.4byte	.LVL399
 11337 12dc 0100     		.2byte	0x1
 11338 12de 54       		.byte	0x54
 11339 12df 2E000000 		.4byte	.LVL399
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 302


 11340 12e3 34000000 		.4byte	.LFE183
 11341 12e7 0100     		.2byte	0x1
 11342 12e9 50       		.byte	0x50
 11343 12ea 00000000 		.4byte	0
 11344 12ee 00000000 		.4byte	0
 11345              		.section	.debug_aranges,"",%progbits
 11346 0000 9C010000 		.4byte	0x19c
 11347 0004 0200     		.2byte	0x2
 11348 0006 00000000 		.4byte	.Ldebug_info0
 11349 000a 04       		.byte	0x4
 11350 000b 00       		.byte	0
 11351 000c 0000     		.2byte	0
 11352 000e 0000     		.2byte	0
 11353 0010 00000000 		.4byte	.LFB146
 11354 0014 4C000000 		.4byte	.LFE146-.LFB146
 11355 0018 00000000 		.4byte	.LFB174
 11356 001c 2C000000 		.4byte	.LFE174-.LFB174
 11357 0020 00000000 		.4byte	.LFB173
 11358 0024 12000000 		.4byte	.LFE173-.LFB173
 11359 0028 00000000 		.4byte	.LFB137
 11360 002c 9E000000 		.4byte	.LFE137-.LFB137
 11361 0030 00000000 		.4byte	.LFB171
 11362 0034 58000000 		.4byte	.LFE171-.LFB171
 11363 0038 00000000 		.4byte	.LFB138
 11364 003c AC000000 		.4byte	.LFE138-.LFB138
 11365 0040 00000000 		.4byte	.LFB172
 11366 0044 44000000 		.4byte	.LFE172-.LFB172
 11367 0048 00000000 		.4byte	.LFB168
 11368 004c 28000000 		.4byte	.LFE168-.LFB168
 11369 0050 00000000 		.4byte	.LFB184
 11370 0054 68000000 		.4byte	.LFE184-.LFB184
 11371 0058 00000000 		.4byte	.LFB136
 11372 005c 62000000 		.4byte	.LFE136-.LFB136
 11373 0060 00000000 		.4byte	.LFB139
 11374 0064 B0000000 		.4byte	.LFE139-.LFB139
 11375 0068 00000000 		.4byte	.LFB142
 11376 006c 20000000 		.4byte	.LFE142-.LFB142
 11377 0070 00000000 		.4byte	.LFB143
 11378 0074 30000000 		.4byte	.LFE143-.LFB143
 11379 0078 00000000 		.4byte	.LFB144
 11380 007c DC000000 		.4byte	.LFE144-.LFB144
 11381 0080 00000000 		.4byte	.LFB147
 11382 0084 88000000 		.4byte	.LFE147-.LFB147
 11383 0088 00000000 		.4byte	.LFB148
 11384 008c A4000000 		.4byte	.LFE148-.LFB148
 11385 0090 00000000 		.4byte	.LFB149
 11386 0094 7C000000 		.4byte	.LFE149-.LFB149
 11387 0098 00000000 		.4byte	.LFB150
 11388 009c 24000000 		.4byte	.LFE150-.LFB150
 11389 00a0 00000000 		.4byte	.LFB151
 11390 00a4 14000000 		.4byte	.LFE151-.LFB151
 11391 00a8 00000000 		.4byte	.LFB153
 11392 00ac 0C000000 		.4byte	.LFE153-.LFB153
 11393 00b0 00000000 		.4byte	.LFB154
 11394 00b4 14000000 		.4byte	.LFE154-.LFB154
 11395 00b8 00000000 		.4byte	.LFB155
 11396 00bc 0C000000 		.4byte	.LFE155-.LFB155
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 303


 11397 00c0 00000000 		.4byte	.LFB156
 11398 00c4 28000000 		.4byte	.LFE156-.LFB156
 11399 00c8 00000000 		.4byte	.LFB157
 11400 00cc 18010000 		.4byte	.LFE157-.LFB157
 11401 00d0 00000000 		.4byte	.LFB152
 11402 00d4 F0000000 		.4byte	.LFE152-.LFB152
 11403 00d8 00000000 		.4byte	.LFB140
 11404 00dc AC000000 		.4byte	.LFE140-.LFB140
 11405 00e0 00000000 		.4byte	.LFB141
 11406 00e4 50000000 		.4byte	.LFE141-.LFB141
 11407 00e8 00000000 		.4byte	.LFB158
 11408 00ec C8000000 		.4byte	.LFE158-.LFB158
 11409 00f0 00000000 		.4byte	.LFB145
 11410 00f4 B8000000 		.4byte	.LFE145-.LFB145
 11411 00f8 00000000 		.4byte	.LFB159
 11412 00fc 34000000 		.4byte	.LFE159-.LFB159
 11413 0100 00000000 		.4byte	.LFB160
 11414 0104 5C000000 		.4byte	.LFE160-.LFB160
 11415 0108 00000000 		.4byte	.LFB161
 11416 010c 3C000000 		.4byte	.LFE161-.LFB161
 11417 0110 00000000 		.4byte	.LFB162
 11418 0114 88000000 		.4byte	.LFE162-.LFB162
 11419 0118 00000000 		.4byte	.LFB163
 11420 011c 84000000 		.4byte	.LFE163-.LFB163
 11421 0120 00000000 		.4byte	.LFB164
 11422 0124 34000000 		.4byte	.LFE164-.LFB164
 11423 0128 00000000 		.4byte	.LFB165
 11424 012c 14000000 		.4byte	.LFE165-.LFB165
 11425 0130 00000000 		.4byte	.LFB166
 11426 0134 80000000 		.4byte	.LFE166-.LFB166
 11427 0138 00000000 		.4byte	.LFB167
 11428 013c 10000000 		.4byte	.LFE167-.LFB167
 11429 0140 00000000 		.4byte	.LFB169
 11430 0144 1C000000 		.4byte	.LFE169-.LFB169
 11431 0148 00000000 		.4byte	.LFB170
 11432 014c 20000000 		.4byte	.LFE170-.LFB170
 11433 0150 00000000 		.4byte	.LFB175
 11434 0154 0C000000 		.4byte	.LFE175-.LFB175
 11435 0158 00000000 		.4byte	.LFB176
 11436 015c 20000000 		.4byte	.LFE176-.LFB176
 11437 0160 00000000 		.4byte	.LFB177
 11438 0164 20000000 		.4byte	.LFE177-.LFB177
 11439 0168 00000000 		.4byte	.LFB178
 11440 016c 80000000 		.4byte	.LFE178-.LFB178
 11441 0170 00000000 		.4byte	.LFB179
 11442 0174 A4000000 		.4byte	.LFE179-.LFB179
 11443 0178 00000000 		.4byte	.LFB180
 11444 017c E4000000 		.4byte	.LFE180-.LFB180
 11445 0180 00000000 		.4byte	.LFB181
 11446 0184 20010000 		.4byte	.LFE181-.LFB181
 11447 0188 00000000 		.4byte	.LFB182
 11448 018c CC000000 		.4byte	.LFE182-.LFB182
 11449 0190 00000000 		.4byte	.LFB183
 11450 0194 34000000 		.4byte	.LFE183-.LFB183
 11451 0198 00000000 		.4byte	0
 11452 019c 00000000 		.4byte	0
 11453              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 304


 11454              	.Ldebug_ranges0:
 11455 0000 0E000000 		.4byte	.LBB122
 11456 0004 58000000 		.4byte	.LBE122
 11457 0008 5C000000 		.4byte	.LBB126
 11458 000c F2000000 		.4byte	.LBE126
 11459 0010 02010000 		.4byte	.LBB127
 11460 0014 04010000 		.4byte	.LBE127
 11461 0018 00000000 		.4byte	0
 11462 001c 00000000 		.4byte	0
 11463 0020 4C000000 		.4byte	.LBB137
 11464 0024 62000000 		.4byte	.LBE137
 11465 0028 66000000 		.4byte	.LBB138
 11466 002c 6E000000 		.4byte	.LBE138
 11467 0030 76000000 		.4byte	.LBB139
 11468 0034 8C000000 		.4byte	.LBE139
 11469 0038 00000000 		.4byte	0
 11470 003c 00000000 		.4byte	0
 11471 0040 00000000 		.4byte	.LFB146
 11472 0044 4C000000 		.4byte	.LFE146
 11473 0048 00000000 		.4byte	.LFB174
 11474 004c 2C000000 		.4byte	.LFE174
 11475 0050 00000000 		.4byte	.LFB173
 11476 0054 12000000 		.4byte	.LFE173
 11477 0058 00000000 		.4byte	.LFB137
 11478 005c 9E000000 		.4byte	.LFE137
 11479 0060 00000000 		.4byte	.LFB171
 11480 0064 58000000 		.4byte	.LFE171
 11481 0068 00000000 		.4byte	.LFB138
 11482 006c AC000000 		.4byte	.LFE138
 11483 0070 00000000 		.4byte	.LFB172
 11484 0074 44000000 		.4byte	.LFE172
 11485 0078 00000000 		.4byte	.LFB168
 11486 007c 28000000 		.4byte	.LFE168
 11487 0080 00000000 		.4byte	.LFB184
 11488 0084 68000000 		.4byte	.LFE184
 11489 0088 00000000 		.4byte	.LFB136
 11490 008c 62000000 		.4byte	.LFE136
 11491 0090 00000000 		.4byte	.LFB139
 11492 0094 B0000000 		.4byte	.LFE139
 11493 0098 00000000 		.4byte	.LFB142
 11494 009c 20000000 		.4byte	.LFE142
 11495 00a0 00000000 		.4byte	.LFB143
 11496 00a4 30000000 		.4byte	.LFE143
 11497 00a8 00000000 		.4byte	.LFB144
 11498 00ac DC000000 		.4byte	.LFE144
 11499 00b0 00000000 		.4byte	.LFB147
 11500 00b4 88000000 		.4byte	.LFE147
 11501 00b8 00000000 		.4byte	.LFB148
 11502 00bc A4000000 		.4byte	.LFE148
 11503 00c0 00000000 		.4byte	.LFB149
 11504 00c4 7C000000 		.4byte	.LFE149
 11505 00c8 00000000 		.4byte	.LFB150
 11506 00cc 24000000 		.4byte	.LFE150
 11507 00d0 00000000 		.4byte	.LFB151
 11508 00d4 14000000 		.4byte	.LFE151
 11509 00d8 00000000 		.4byte	.LFB153
 11510 00dc 0C000000 		.4byte	.LFE153
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 305


 11511 00e0 00000000 		.4byte	.LFB154
 11512 00e4 14000000 		.4byte	.LFE154
 11513 00e8 00000000 		.4byte	.LFB155
 11514 00ec 0C000000 		.4byte	.LFE155
 11515 00f0 00000000 		.4byte	.LFB156
 11516 00f4 28000000 		.4byte	.LFE156
 11517 00f8 00000000 		.4byte	.LFB157
 11518 00fc 18010000 		.4byte	.LFE157
 11519 0100 00000000 		.4byte	.LFB152
 11520 0104 F0000000 		.4byte	.LFE152
 11521 0108 00000000 		.4byte	.LFB140
 11522 010c AC000000 		.4byte	.LFE140
 11523 0110 00000000 		.4byte	.LFB141
 11524 0114 50000000 		.4byte	.LFE141
 11525 0118 00000000 		.4byte	.LFB158
 11526 011c C8000000 		.4byte	.LFE158
 11527 0120 00000000 		.4byte	.LFB145
 11528 0124 B8000000 		.4byte	.LFE145
 11529 0128 00000000 		.4byte	.LFB159
 11530 012c 34000000 		.4byte	.LFE159
 11531 0130 00000000 		.4byte	.LFB160
 11532 0134 5C000000 		.4byte	.LFE160
 11533 0138 00000000 		.4byte	.LFB161
 11534 013c 3C000000 		.4byte	.LFE161
 11535 0140 00000000 		.4byte	.LFB162
 11536 0144 88000000 		.4byte	.LFE162
 11537 0148 00000000 		.4byte	.LFB163
 11538 014c 84000000 		.4byte	.LFE163
 11539 0150 00000000 		.4byte	.LFB164
 11540 0154 34000000 		.4byte	.LFE164
 11541 0158 00000000 		.4byte	.LFB165
 11542 015c 14000000 		.4byte	.LFE165
 11543 0160 00000000 		.4byte	.LFB166
 11544 0164 80000000 		.4byte	.LFE166
 11545 0168 00000000 		.4byte	.LFB167
 11546 016c 10000000 		.4byte	.LFE167
 11547 0170 00000000 		.4byte	.LFB169
 11548 0174 1C000000 		.4byte	.LFE169
 11549 0178 00000000 		.4byte	.LFB170
 11550 017c 20000000 		.4byte	.LFE170
 11551 0180 00000000 		.4byte	.LFB175
 11552 0184 0C000000 		.4byte	.LFE175
 11553 0188 00000000 		.4byte	.LFB176
 11554 018c 20000000 		.4byte	.LFE176
 11555 0190 00000000 		.4byte	.LFB177
 11556 0194 20000000 		.4byte	.LFE177
 11557 0198 00000000 		.4byte	.LFB178
 11558 019c 80000000 		.4byte	.LFE178
 11559 01a0 00000000 		.4byte	.LFB179
 11560 01a4 A4000000 		.4byte	.LFE179
 11561 01a8 00000000 		.4byte	.LFB180
 11562 01ac E4000000 		.4byte	.LFE180
 11563 01b0 00000000 		.4byte	.LFB181
 11564 01b4 20010000 		.4byte	.LFE181
 11565 01b8 00000000 		.4byte	.LFB182
 11566 01bc CC000000 		.4byte	.LFE182
 11567 01c0 00000000 		.4byte	.LFB183
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 306


 11568 01c4 34000000 		.4byte	.LFE183
 11569 01c8 00000000 		.4byte	0
 11570 01cc 00000000 		.4byte	0
 11571              		.section	.debug_line,"",%progbits
 11572              	.Ldebug_line0:
 11573 0000 D20C0000 		.section	.debug_str,"MS",%progbits,1
 11573      02005203 
 11573      00000201 
 11573      FB0E0D00 
 11573      01010101 
 11574              	.LASF94:
 11575 0000 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 11575      426C6F63 
 11575      6B496E64 
 11575      6566696E 
 11575      6974656C 
 11576              	.LASF71:
 11577 0016 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 11577      6967696E 
 11577      616C4241 
 11577      53455052 
 11577      4900
 11578              	.LASF141:
 11579 0028 70784576 		.ascii	"pxEventList\000"
 11579      656E744C 
 11579      69737400 
 11580              	.LASF138:
 11581 0034 76546173 		.ascii	"vTaskSuspend\000"
 11581      6B537573 
 11581      70656E64 
 11581      00
 11582              	.LASF99:
 11583 0041 78546173 		.ascii	"xTaskCreate\000"
 11583      6B437265 
 11583      61746500 
 11584              	.LASF4:
 11585 004d 73697A65 		.ascii	"size_t\000"
 11585      5F7400
 11586              	.LASF36:
 11587 0054 4D696E69 		.ascii	"MiniListItem_t\000"
 11587      4C697374 
 11587      4974656D 
 11587      5F7400
 11588              	.LASF52:
 11589 0063 54696D65 		.ascii	"TimeOut_t\000"
 11589      4F75745F 
 11589      7400
 11590              	.LASF192:
 11591 006d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 11591      7272656E 
 11591      744E756D 
 11591      6265724F 
 11591      66546173 
 11592              	.LASF175:
 11593 0084 756C5661 		.ascii	"ulValue\000"
 11593      6C756500 
 11594              	.LASF165:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 307


 11595 008c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 11595      736B5265 
 11595      73657445 
 11595      76656E74 
 11595      4974656D 
 11596              	.LASF197:
 11597 00a6 78596965 		.ascii	"xYieldPending\000"
 11597      6C645065 
 11597      6E64696E 
 11597      6700
 11598              	.LASF163:
 11599 00b4 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 11599      6B476574 
 11599      43757272 
 11599      656E7454 
 11599      61736B48 
 11600              	.LASF3:
 11601 00ce 7369676E 		.ascii	"signed char\000"
 11601      65642063 
 11601      68617200 
 11602              	.LASF5:
 11603 00da 5F5F7569 		.ascii	"__uint8_t\000"
 11603      6E74385F 
 11603      7400
 11604              	.LASF179:
 11605 00e4 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 11605      6B47656E 
 11605      65726963 
 11605      4E6F7469 
 11605      66794672 
 11606              	.LASF191:
 11607 00fe 78537573 		.ascii	"xSuspendedTaskList\000"
 11607      70656E64 
 11607      65645461 
 11607      736B4C69 
 11607      737400
 11608              	.LASF131:
 11609 0111 76546173 		.ascii	"vTaskDelay\000"
 11609      6B44656C 
 11609      617900
 11610              	.LASF11:
 11611 011c 6C6F6E67 		.ascii	"long int\000"
 11611      20696E74 
 11611      00
 11612              	.LASF182:
 11613 0125 78546173 		.ascii	"xTaskNotifyStateClear\000"
 11613      6B4E6F74 
 11613      69667953 
 11613      74617465 
 11613      436C6561 
 11614              	.LASF70:
 11615 013b 756C4E65 		.ascii	"ulNewBASEPRI\000"
 11615      77424153 
 11615      45505249 
 11615      00
 11616              	.LASF14:
 11617 0148 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 308


 11617      206C6F6E 
 11617      6720756E 
 11617      7369676E 
 11617      65642069 
 11618              	.LASF61:
 11619 015f 78457665 		.ascii	"xEventListItem\000"
 11619      6E744C69 
 11619      73744974 
 11619      656D00
 11620              	.LASF125:
 11621 016e 78416C72 		.ascii	"xAlreadyYielded\000"
 11621      65616479 
 11621      5969656C 
 11621      64656400 
 11622              	.LASF150:
 11623 017e 70785469 		.ascii	"pxTimeOut\000"
 11623      6D654F75 
 11623      7400
 11624              	.LASF39:
 11625 0188 7078496E 		.ascii	"pxIndex\000"
 11625      64657800 
 11626              	.LASF40:
 11627 0190 784C6973 		.ascii	"xListEnd\000"
 11627      74456E64 
 11627      00
 11628              	.LASF203:
 11629 0199 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11629      52784275 
 11629      66666572 
 11629      00
 11630              	.LASF105:
 11631 01a6 76546173 		.ascii	"vTaskPrioritySet\000"
 11631      6B507269 
 11631      6F726974 
 11631      79536574 
 11631      00
 11632              	.LASF49:
 11633 01b7 7854494D 		.ascii	"xTIME_OUT\000"
 11633      455F4F55 
 11633      5400
 11634              	.LASF35:
 11635 01c1 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 11635      495F4C49 
 11635      53545F49 
 11635      54454D00 
 11636              	.LASF188:
 11637 01d1 7850656E 		.ascii	"xPendingReadyList\000"
 11637      64696E67 
 11637      52656164 
 11637      794C6973 
 11637      7400
 11638              	.LASF116:
 11639 01e3 78546173 		.ascii	"xTaskGetTickCount\000"
 11639      6B476574 
 11639      5469636B 
 11639      436F756E 
 11639      7400
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 309


 11640              	.LASF1:
 11641 01f5 6C6F6E67 		.ascii	"long long int\000"
 11641      206C6F6E 
 11641      6720696E 
 11641      7400
 11642              	.LASF48:
 11643 0203 654E6F74 		.ascii	"eNotifyAction\000"
 11643      69667941 
 11643      6374696F 
 11643      6E00
 11644              	.LASF108:
 11645 0211 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 11645      696F7269 
 11645      74795573 
 11645      65644F6E 
 11645      456E7472 
 11646              	.LASF93:
 11647 0227 78546963 		.ascii	"xTicksToWait\000"
 11647      6B73546F 
 11647      57616974 
 11647      00
 11648              	.LASF157:
 11649 0234 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11649      6B536574 
 11649      54687265 
 11649      61644C6F 
 11649      63616C53 
 11650              	.LASF158:
 11651 0256 78546173 		.ascii	"xTaskToSet\000"
 11651      6B546F53 
 11651      657400
 11652              	.LASF60:
 11653 0261 78537461 		.ascii	"xStateListItem\000"
 11653      74654C69 
 11653      73744974 
 11653      656D00
 11654              	.LASF127:
 11655 0270 76546173 		.ascii	"vTaskDelayUntil\000"
 11655      6B44656C 
 11655      6179556E 
 11655      74696C00 
 11656              	.LASF176:
 11657 0280 65416374 		.ascii	"eAction\000"
 11657      696F6E00 
 11658              	.LASF54:
 11659 0288 70764261 		.ascii	"pvBaseAddress\000"
 11659      73654164 
 11659      64726573 
 11659      7300
 11660              	.LASF65:
 11661 0296 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11661      72656164 
 11661      4C6F6361 
 11661      6C53746F 
 11661      72616765 
 11662              	.LASF224:
 11663 02b3 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 310


 11663      72745261 
 11663      69736542 
 11663      41534550 
 11663      524900
 11664              	.LASF58:
 11665 02c6 74736B54 		.ascii	"tskTaskControlBlock\000"
 11665      61736B43 
 11665      6F6E7472 
 11665      6F6C426C 
 11665      6F636B00 
 11666              	.LASF85:
 11667 02da 70784E65 		.ascii	"pxNewTCB\000"
 11667      77544342 
 11667      00
 11668              	.LASF180:
 11669 02e3 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11669      67686572 
 11669      5072696F 
 11669      72697479 
 11669      5461736B 
 11670              	.LASF178:
 11671 02fd 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11671      6967696E 
 11671      616C4E6F 
 11671      74696679 
 11671      53746174 
 11672              	.LASF118:
 11673 0313 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11673      6B476574 
 11673      5469636B 
 11673      436F756E 
 11673      7446726F 
 11674              	.LASF42:
 11675 032c 5461736B 		.ascii	"TaskHandle_t\000"
 11675      48616E64 
 11675      6C655F74 
 11675      00
 11676              	.LASF63:
 11677 0339 70785374 		.ascii	"pxStack\000"
 11677      61636B00 
 11678              	.LASF27:
 11679 0341 5469636B 		.ascii	"TickType_t\000"
 11679      54797065 
 11679      5F7400
 11680              	.LASF218:
 11681 034c 78506F72 		.ascii	"xPortStartScheduler\000"
 11681      74537461 
 11681      72745363 
 11681      68656475 
 11681      6C657200 
 11682              	.LASF57:
 11683 0360 4D656D6F 		.ascii	"MemoryRegion_t\000"
 11683      72795265 
 11683      67696F6E 
 11683      5F7400
 11684              	.LASF121:
 11685 036f 78546173 		.ascii	"xTaskIncrementTick\000"
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 311


 11685      6B496E63 
 11685      72656D65 
 11685      6E745469 
 11685      636B00
 11686              	.LASF18:
 11687 0382 75696E74 		.ascii	"uint16_t\000"
 11687      31365F74 
 11687      00
 11688              	.LASF22:
 11689 038b 646F7562 		.ascii	"double\000"
 11689      6C6500
 11690              	.LASF217:
 11691 0392 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11691      65724372 
 11691      65617465 
 11691      54696D65 
 11691      72546173 
 11692              	.LASF25:
 11693 03a8 42617365 		.ascii	"BaseType_t\000"
 11693      54797065 
 11693      5F7400
 11694              	.LASF211:
 11695 03b3 764C6973 		.ascii	"vListInsertEnd\000"
 11695      74496E73 
 11695      65727445 
 11695      6E6400
 11696              	.LASF177:
 11697 03c2 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 11697      72657669 
 11697      6F75734E 
 11697      6F746966 
 11697      69636174 
 11698              	.LASF76:
 11699 03df 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 11699      65736574 
 11699      4E657874 
 11699      5461736B 
 11699      556E626C 
 11700              	.LASF97:
 11701 03fb 75735374 		.ascii	"usStackDepth\000"
 11701      61636B44 
 11701      65707468 
 11701      00
 11702              	.LASF120:
 11703 0408 78546173 		.ascii	"xTaskToQuery\000"
 11703      6B546F51 
 11703      75657279 
 11703      00
 11704              	.LASF207:
 11705 0415 764C6973 		.ascii	"vListInitialiseItem\000"
 11705      74496E69 
 11705      7469616C 
 11705      69736549 
 11705      74656D00 
 11706              	.LASF50:
 11707 0429 784F7665 		.ascii	"xOverflowCount\000"
 11707      72666C6F 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 312


 11707      77436F75 
 11707      6E7400
 11708              	.LASF114:
 11709 0438 76546173 		.ascii	"vTaskStartScheduler\000"
 11709      6B537461 
 11709      72745363 
 11709      68656475 
 11709      6C657200 
 11710              	.LASF215:
 11711 044c 7076506F 		.ascii	"pvPortMalloc\000"
 11711      72744D61 
 11711      6C6C6F63 
 11711      00
 11712              	.LASF140:
 11713 0459 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11713      6B506C61 
 11713      63654F6E 
 11713      4576656E 
 11713      744C6973 
 11714              	.LASF12:
 11715 046f 5F5F7569 		.ascii	"__uint32_t\000"
 11715      6E743332 
 11715      5F7400
 11716              	.LASF202:
 11717 047a 75785363 		.ascii	"uxSchedulerSuspended\000"
 11717      68656475 
 11717      6C657253 
 11717      75737065 
 11717      6E646564 
 11718              	.LASF225:
 11719 048f 756C4E65 		.ascii	"ulNewMaskValue\000"
 11719      774D6173 
 11719      6B56616C 
 11719      756500
 11720              	.LASF112:
 11721 049e 78546173 		.ascii	"xTaskResumeFromISR\000"
 11721      6B526573 
 11721      756D6546 
 11721      726F6D49 
 11721      535200
 11722              	.LASF31:
 11723 04b1 70764F77 		.ascii	"pvOwner\000"
 11723      6E657200 
 11724              	.LASF74:
 11725 04b9 78526574 		.ascii	"xReturn\000"
 11725      75726E00 
 11726              	.LASF185:
 11727 04c1 7844656C 		.ascii	"xDelayedTaskList2\000"
 11727      61796564 
 11727      5461736B 
 11727      4C697374 
 11727      3200
 11728              	.LASF51:
 11729 04d3 7854696D 		.ascii	"xTimeOnEntering\000"
 11729      654F6E45 
 11729      6E746572 
 11729      696E6700 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 313


 11730              	.LASF142:
 11731 04e3 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 11731      6B506C61 
 11731      63654F6E 
 11731      556E6F72 
 11731      64657265 
 11732              	.LASF84:
 11733 0502 70784372 		.ascii	"pxCreatedTask\000"
 11733      65617465 
 11733      64546173 
 11733      6B00
 11734              	.LASF38:
 11735 0510 75784E75 		.ascii	"uxNumberOfItems\000"
 11735      6D626572 
 11735      4F664974 
 11735      656D7300 
 11736              	.LASF13:
 11737 0520 6C6F6E67 		.ascii	"long unsigned int\000"
 11737      20756E73 
 11737      69676E65 
 11737      6420696E 
 11737      7400
 11738              	.LASF222:
 11739 0532 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 11739      72617465 
 11739      645F536F 
 11739      75726365 
 11739      5C50536F 
 11740 0560 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 11740      75726365 
 11740      5C746173 
 11740      6B732E63 
 11740      00
 11741              	.LASF174:
 11742 0571 78546173 		.ascii	"xTaskToNotify\000"
 11742      6B546F4E 
 11742      6F746966 
 11742      7900
 11743              	.LASF19:
 11744 057f 696E7433 		.ascii	"int32_t\000"
 11744      325F7400 
 11745              	.LASF59:
 11746 0587 7078546F 		.ascii	"pxTopOfStack\000"
 11746      704F6653 
 11746      7461636B 
 11746      00
 11747              	.LASF83:
 11748 0594 70765061 		.ascii	"pvParameters\000"
 11748      72616D65 
 11748      74657273 
 11748      00
 11749              	.LASF68:
 11750 05a1 74736B54 		.ascii	"tskTCB\000"
 11750      434200
 11751              	.LASF220:
 11752 05a8 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 11752      6C696361 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 314


 11752      74696F6E 
 11752      53746163 
 11752      6B4F7665 
 11753              	.LASF137:
 11754 05c6 7078436F 		.ascii	"pxConstList\000"
 11754      6E73744C 
 11754      69737400 
 11755              	.LASF9:
 11756 05d2 73686F72 		.ascii	"short unsigned int\000"
 11756      7420756E 
 11756      7369676E 
 11756      65642069 
 11756      6E7400
 11757              	.LASF24:
 11758 05e5 53746163 		.ascii	"StackType_t\000"
 11758      6B547970 
 11758      655F7400 
 11759              	.LASF75:
 11760 05f1 70785443 		.ascii	"pxTCB\000"
 11760      4200
 11761              	.LASF109:
 11762 05f7 78596965 		.ascii	"xYieldRequired\000"
 11762      6C645265 
 11762      71756972 
 11762      656400
 11763              	.LASF170:
 11764 0606 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11764      7473546F 
 11764      436C6561 
 11764      724F6E45 
 11764      6E747279 
 11765              	.LASF88:
 11766 061b 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 11766      64644E65 
 11766      77546173 
 11766      6B546F52 
 11766      65616479 
 11767              	.LASF110:
 11768 0634 76546173 		.ascii	"vTaskResume\000"
 11768      6B526573 
 11768      756D6500 
 11769              	.LASF122:
 11770 0640 78537769 		.ascii	"xSwitchRequired\000"
 11770      74636852 
 11770      65717569 
 11770      72656400 
 11771              	.LASF101:
 11772 0650 75785265 		.ascii	"uxReturn\000"
 11772      7475726E 
 11772      00
 11773              	.LASF159:
 11774 0659 78496E64 		.ascii	"xIndex\000"
 11774      657800
 11775              	.LASF87:
 11776 0660 70727649 		.ascii	"prvInitialiseTaskLists\000"
 11776      6E697469 
 11776      616C6973 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 315


 11776      65546173 
 11776      6B4C6973 
 11777              	.LASF53:
 11778 0677 784D454D 		.ascii	"xMEMORY_REGION\000"
 11778      4F52595F 
 11778      52454749 
 11778      4F4E00
 11779              	.LASF205:
 11780 0686 76506F72 		.ascii	"vPortFree\000"
 11780      74467265 
 11780      6500
 11781              	.LASF72:
 11782 0690 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 11782      74526169 
 11782      73654241 
 11782      53455052 
 11782      4900
 11783              	.LASF153:
 11784 06a2 70785469 		.ascii	"pxTicksToWait\000"
 11784      636B7354 
 11784      6F576169 
 11784      7400
 11785              	.LASF77:
 11786 06b0 70727644 		.ascii	"prvDeleteTCB\000"
 11786      656C6574 
 11786      65544342 
 11786      00
 11787              	.LASF204:
 11788 06bd 70784375 		.ascii	"pxCurrentTCB\000"
 11788      7272656E 
 11788      74544342 
 11788      00
 11789              	.LASF91:
 11790 06ca 70727649 		.ascii	"prvIdleTask\000"
 11790      646C6554 
 11790      61736B00 
 11791              	.LASF154:
 11792 06d6 78456C61 		.ascii	"xElapsedTime\000"
 11792      70736564 
 11792      54696D65 
 11792      00
 11793              	.LASF133:
 11794 06e3 76546173 		.ascii	"vTaskSwitchContext\000"
 11794      6B537769 
 11794      74636843 
 11794      6F6E7465 
 11794      787400
 11795              	.LASF45:
 11796 06f6 65496E63 		.ascii	"eIncrement\000"
 11796      72656D65 
 11796      6E7400
 11797              	.LASF139:
 11798 0701 78546173 		.ascii	"xTaskToSuspend\000"
 11798      6B546F53 
 11798      75737065 
 11798      6E6400
 11799              	.LASF187:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 316


 11800 0710 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11800      6572666C 
 11800      6F774465 
 11800      6C617965 
 11800      64546173 
 11801              	.LASF56:
 11802 072a 756C5061 		.ascii	"ulParameters\000"
 11802      72616D65 
 11802      74657273 
 11802      00
 11803              	.LASF86:
 11804 0737 78526567 		.ascii	"xRegions\000"
 11804      696F6E73 
 11804      00
 11805              	.LASF166:
 11806 0740 756C5461 		.ascii	"ulTaskNotifyTake\000"
 11806      736B4E6F 
 11806      74696679 
 11806      54616B65 
 11806      00
 11807              	.LASF78:
 11808 0751 78546173 		.ascii	"xTask\000"
 11808      6B00
 11809              	.LASF189:
 11810 0757 78546173 		.ascii	"xTasksWaitingTermination\000"
 11810      6B735761 
 11810      6974696E 
 11810      67546572 
 11810      6D696E61 
 11811              	.LASF106:
 11812 0770 75784E65 		.ascii	"uxNewPriority\000"
 11812      77507269 
 11812      6F726974 
 11812      7900
 11813              	.LASF80:
 11814 077e 70785461 		.ascii	"pxTaskCode\000"
 11814      736B436F 
 11814      646500
 11815              	.LASF82:
 11816 0789 756C5374 		.ascii	"ulStackDepth\000"
 11816      61636B44 
 11816      65707468 
 11816      00
 11817              	.LASF128:
 11818 0796 70785072 		.ascii	"pxPreviousWakeTime\000"
 11818      6576696F 
 11818      75735761 
 11818      6B655469 
 11818      6D6500
 11819              	.LASF200:
 11820 07a9 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 11820      74546173 
 11820      6B556E62 
 11820      6C6F636B 
 11820      54696D65 
 11821              	.LASF46:
 11822 07be 65536574 		.ascii	"eSetValueWithOverwrite\000"
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 317


 11822      56616C75 
 11822      65576974 
 11822      684F7665 
 11822      72777269 
 11823              	.LASF219:
 11824 07d5 76506F72 		.ascii	"vPortEndScheduler\000"
 11824      74456E64 
 11824      53636865 
 11824      64756C65 
 11824      7200
 11825              	.LASF194:
 11826 07e7 7578546F 		.ascii	"uxTopReadyPriority\000"
 11826      70526561 
 11826      64795072 
 11826      696F7269 
 11826      747900
 11827              	.LASF55:
 11828 07fa 756C4C65 		.ascii	"ulLengthInBytes\000"
 11828      6E677468 
 11828      496E4279 
 11828      74657300 
 11829              	.LASF73:
 11830 080a 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11830      74536574 
 11830      42415345 
 11830      50524900 
 11831              	.LASF33:
 11832 081a 4C697374 		.ascii	"ListItem_t\000"
 11832      4974656D 
 11832      5F7400
 11833              	.LASF136:
 11834 0825 7578546F 		.ascii	"uxTopPriority\000"
 11834      70507269 
 11834      6F726974 
 11834      7900
 11835              	.LASF172:
 11836 0833 70756C4E 		.ascii	"pulNotificationValue\000"
 11836      6F746966 
 11836      69636174 
 11836      696F6E56 
 11836      616C7565 
 11837              	.LASF30:
 11838 0848 70785072 		.ascii	"pxPrevious\000"
 11838      6576696F 
 11838      757300
 11839              	.LASF98:
 11840 0853 78546173 		.ascii	"xTaskToDelete\000"
 11840      6B546F44 
 11840      656C6574 
 11840      6500
 11841              	.LASF221:
 11842 0861 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11842      43313120 
 11842      352E342E 
 11842      31203230 
 11842      31363036 
 11843 0894 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 318


 11843      20726576 
 11843      6973696F 
 11843      6E203233 
 11843      37373135 
 11844 08c7 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 11844      70202D6D 
 11844      6670753D 
 11844      66707634 
 11844      2D73702D 
 11845 08fa 65637469 		.ascii	"ections -ffat-lto-objects\000"
 11845      6F6E7320 
 11845      2D666661 
 11845      742D6C74 
 11845      6F2D6F62 
 11846              	.LASF160:
 11847 0914 70765661 		.ascii	"pvValue\000"
 11847      6C756500 
 11848              	.LASF21:
 11849 091c 666C6F61 		.ascii	"float\000"
 11849      7400
 11850              	.LASF162:
 11851 0922 70765265 		.ascii	"pvReturn\000"
 11851      7475726E 
 11851      00
 11852              	.LASF96:
 11853 092b 78436F6E 		.ascii	"xConstTickCount\000"
 11853      73745469 
 11853      636B436F 
 11853      756E7400 
 11854              	.LASF32:
 11855 093b 7076436F 		.ascii	"pvContainer\000"
 11855      6E746169 
 11855      6E657200 
 11856              	.LASF146:
 11857 0947 7078556E 		.ascii	"pxUnblockedTCB\000"
 11857      626C6F63 
 11857      6B656454 
 11857      434200
 11858              	.LASF67:
 11859 0956 75634E6F 		.ascii	"ucNotifyState\000"
 11859      74696679 
 11859      53746174 
 11859      6500
 11860              	.LASF95:
 11861 0964 7854696D 		.ascii	"xTimeToWake\000"
 11861      65546F57 
 11861      616B6500 
 11862              	.LASF6:
 11863 0970 756E7369 		.ascii	"unsigned char\000"
 11863      676E6564 
 11863      20636861 
 11863      7200
 11864              	.LASF66:
 11865 097e 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11865      74696669 
 11865      65645661 
 11865      6C756500 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 319


 11866              	.LASF223:
 11867 098e 433A5C55 		.ascii	"C:\\Users\\malek boudiaf\\Documents\\PSoC Creator\\"
 11867      73657273 
 11867      5C6D616C 
 11867      656B2062 
 11867      6F756469 
 11868 09bc 576F726B 		.ascii	"Workspace03\\smart_diaper.cydsn\000"
 11868      73706163 
 11868      6530335C 
 11868      736D6172 
 11868      745F6469 
 11869              	.LASF107:
 11870 09db 75784375 		.ascii	"uxCurrentBasePriority\000"
 11870      7272656E 
 11870      74426173 
 11870      65507269 
 11870      6F726974 
 11871              	.LASF69:
 11872 09f1 5443425F 		.ascii	"TCB_t\000"
 11872      7400
 11873              	.LASF7:
 11874 09f7 73686F72 		.ascii	"short int\000"
 11874      7420696E 
 11874      7400
 11875              	.LASF135:
 11876 0a01 756C4368 		.ascii	"ulCheckValue\000"
 11876      65636B56 
 11876      616C7565 
 11876      00
 11877              	.LASF195:
 11878 0a0e 78536368 		.ascii	"xSchedulerRunning\000"
 11878      6564756C 
 11878      65725275 
 11878      6E6E696E 
 11878      6700
 11879              	.LASF115:
 11880 0a20 76546173 		.ascii	"vTaskEndScheduler\000"
 11880      6B456E64 
 11880      53636865 
 11880      64756C65 
 11880      7200
 11881              	.LASF126:
 11882 0a32 75785065 		.ascii	"uxPendedCounts\000"
 11882      6E646564 
 11882      436F756E 
 11882      747300
 11883              	.LASF111:
 11884 0a41 78546173 		.ascii	"xTaskToResume\000"
 11884      6B546F52 
 11884      6573756D 
 11884      6500
 11885              	.LASF124:
 11886 0a4f 78546173 		.ascii	"xTaskResumeAll\000"
 11886      6B526573 
 11886      756D6541 
 11886      6C6C00
 11887              	.LASF196:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 320


 11888 0a5e 75785065 		.ascii	"uxPendedTicks\000"
 11888      6E646564 
 11888      5469636B 
 11888      7300
 11889              	.LASF23:
 11890 0a6c 5461736B 		.ascii	"TaskFunction_t\000"
 11890      46756E63 
 11890      74696F6E 
 11890      5F7400
 11891              	.LASF37:
 11892 0a7b 784C4953 		.ascii	"xLIST\000"
 11892      5400
 11893              	.LASF102:
 11894 0a81 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 11894      736B5072 
 11894      696F7269 
 11894      74794765 
 11894      7446726F 
 11895              	.LASF156:
 11896 0a9a 76546173 		.ascii	"vTaskMissedYield\000"
 11896      6B4D6973 
 11896      73656459 
 11896      69656C64 
 11896      00
 11897              	.LASF181:
 11898 0aab 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 11898      6B4E6F74 
 11898      69667947 
 11898      69766546 
 11898      726F6D49 
 11899              	.LASF41:
 11900 0ac2 4C697374 		.ascii	"List_t\000"
 11900      5F7400
 11901              	.LASF79:
 11902 0ac9 70727649 		.ascii	"prvInitialiseNewTask\000"
 11902      6E697469 
 11902      616C6973 
 11902      654E6577 
 11902      5461736B 
 11903              	.LASF164:
 11904 0ade 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11904      6B476574 
 11904      53636865 
 11904      64756C65 
 11904      72537461 
 11905              	.LASF113:
 11906 0af5 75785361 		.ascii	"uxSavedInterruptStatus\000"
 11906      76656449 
 11906      6E746572 
 11906      72757074 
 11906      53746174 
 11907              	.LASF130:
 11908 0b0c 7853686F 		.ascii	"xShouldDelay\000"
 11908      756C6444 
 11908      656C6179 
 11908      00
 11909              	.LASF89:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 321


 11910 0b19 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 11910      6865636B 
 11910      5461736B 
 11910      73576169 
 11910      74696E67 
 11911              	.LASF20:
 11912 0b39 75696E74 		.ascii	"uint32_t\000"
 11912      33325F74 
 11912      00
 11913              	.LASF214:
 11914 0b42 764C6973 		.ascii	"vListInsert\000"
 11914      74496E73 
 11914      65727400 
 11915              	.LASF155:
 11916 0b4e 76546173 		.ascii	"vTaskSuspendAll\000"
 11916      6B537573 
 11916      70656E64 
 11916      416C6C00 
 11917              	.LASF2:
 11918 0b5e 6C6F6E67 		.ascii	"long double\000"
 11918      20646F75 
 11918      626C6500 
 11919              	.LASF92:
 11920 0b6a 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 11920      64644375 
 11920      7272656E 
 11920      74546173 
 11920      6B546F44 
 11921              	.LASF16:
 11922 0b89 63686172 		.ascii	"char\000"
 11922      00
 11923              	.LASF119:
 11924 0b8e 70635461 		.ascii	"pcTaskGetName\000"
 11924      736B4765 
 11924      744E616D 
 11924      6500
 11925              	.LASF212:
 11926 0b9c 76506F72 		.ascii	"vPortExitCritical\000"
 11926      74457869 
 11926      74437269 
 11926      74696361 
 11926      6C00
 11927              	.LASF145:
 11928 0bae 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11928      6B52656D 
 11928      6F766546 
 11928      726F6D45 
 11928      76656E74 
 11929              	.LASF28:
 11930 0bc7 78497465 		.ascii	"xItemValue\000"
 11930      6D56616C 
 11930      756500
 11931              	.LASF0:
 11932 0bd2 756E7369 		.ascii	"unsigned int\000"
 11932      676E6564 
 11932      20696E74 
 11932      00
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 322


 11933              	.LASF8:
 11934 0bdf 5F5F7569 		.ascii	"__uint16_t\000"
 11934      6E743136 
 11934      5F7400
 11935              	.LASF104:
 11936 0bea 76546173 		.ascii	"vTaskDelete\000"
 11936      6B44656C 
 11936      65746500 
 11937              	.LASF44:
 11938 0bf6 65536574 		.ascii	"eSetBits\000"
 11938      42697473 
 11938      00
 11939              	.LASF190:
 11940 0bff 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11940      6C657465 
 11940      64546173 
 11940      6B735761 
 11940      6974696E 
 11941              	.LASF103:
 11942 0c1c 75785361 		.ascii	"uxSavedInterruptState\000"
 11942      76656449 
 11942      6E746572 
 11942      72757074 
 11942      53746174 
 11943              	.LASF10:
 11944 0c32 5F5F696E 		.ascii	"__int32_t\000"
 11944      7433325F 
 11944      7400
 11945              	.LASF152:
 11946 0c3c 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 11946      6B436865 
 11946      636B466F 
 11946      7254696D 
 11946      654F7574 
 11947              	.LASF213:
 11948 0c51 75784C69 		.ascii	"uxListRemove\000"
 11948      73745265 
 11948      6D6F7665 
 11948      00
 11949              	.LASF148:
 11950 0c5e 70784576 		.ascii	"pxEventListItem\000"
 11950      656E744C 
 11950      69737449 
 11950      74656D00 
 11951              	.LASF199:
 11952 0c6e 75785461 		.ascii	"uxTaskNumber\000"
 11952      736B4E75 
 11952      6D626572 
 11952      00
 11953              	.LASF123:
 11954 0c7b 70785465 		.ascii	"pxTemp\000"
 11954      6D7000
 11955              	.LASF201:
 11956 0c82 7849646C 		.ascii	"xIdleTaskHandle\000"
 11956      65546173 
 11956      6B48616E 
 11956      646C6500 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 323


 11957              	.LASF183:
 11958 0c92 70785265 		.ascii	"pxReadyTasksLists\000"
 11958      61647954 
 11958      61736B73 
 11958      4C697374 
 11958      7300
 11959              	.LASF144:
 11960 0ca4 78576169 		.ascii	"xWaitIndefinitely\000"
 11960      74496E64 
 11960      6566696E 
 11960      6974656C 
 11960      7900
 11961              	.LASF226:
 11962 0cb6 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11962      736B4765 
 11962      744E756D 
 11962      6265724F 
 11962      66546173 
 11963              	.LASF210:
 11964 0ccd 76506F72 		.ascii	"vPortEnterCritical\000"
 11964      74456E74 
 11964      65724372 
 11964      69746963 
 11964      616C00
 11965              	.LASF184:
 11966 0ce0 7844656C 		.ascii	"xDelayedTaskList1\000"
 11966      61796564 
 11966      5461736B 
 11966      4C697374 
 11966      3100
 11967              	.LASF167:
 11968 0cf2 78436C65 		.ascii	"xClearCountOnExit\000"
 11968      6172436F 
 11968      756E744F 
 11968      6E457869 
 11968      7400
 11969              	.LASF198:
 11970 0d04 784E756D 		.ascii	"xNumOfOverflows\000"
 11970      4F664F76 
 11970      6572666C 
 11970      6F777300 
 11971              	.LASF173:
 11972 0d14 78546173 		.ascii	"xTaskGenericNotify\000"
 11972      6B47656E 
 11972      65726963 
 11972      4E6F7469 
 11972      667900
 11973              	.LASF193:
 11974 0d27 78546963 		.ascii	"xTickCount\000"
 11974      6B436F75 
 11974      6E7400
 11975              	.LASF151:
 11976 0d32 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 11976      6B496E74 
 11976      65726E61 
 11976      6C536574 
 11976      54696D65 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 324


 11977              	.LASF206:
 11978 0d4f 6D656D73 		.ascii	"memset\000"
 11978      657400
 11979              	.LASF132:
 11980 0d56 78546963 		.ascii	"xTicksToDelay\000"
 11980      6B73546F 
 11980      44656C61 
 11980      7900
 11981              	.LASF208:
 11982 0d64 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11982      7274496E 
 11982      69746961 
 11982      6C697365 
 11982      53746163 
 11983              	.LASF129:
 11984 0d7a 7854696D 		.ascii	"xTimeIncrement\000"
 11984      65496E63 
 11984      72656D65 
 11984      6E7400
 11985              	.LASF47:
 11986 0d89 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11986      56616C75 
 11986      65576974 
 11986      686F7574 
 11986      4F766572 
 11987              	.LASF64:
 11988 0da3 70635461 		.ascii	"pcTaskName\000"
 11988      736B4E61 
 11988      6D6500
 11989              	.LASF17:
 11990 0dae 75696E74 		.ascii	"uint8_t\000"
 11990      385F7400 
 11991              	.LASF117:
 11992 0db6 78546963 		.ascii	"xTicks\000"
 11992      6B7300
 11993              	.LASF90:
 11994 0dbd 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 11994      61736B49 
 11994      73546173 
 11994      6B537573 
 11994      70656E64 
 11995              	.LASF43:
 11996 0dd4 654E6F41 		.ascii	"eNoAction\000"
 11996      6374696F 
 11996      6E00
 11997              	.LASF15:
 11998 0dde 73697A65 		.ascii	"sizetype\000"
 11998      74797065 
 11998      00
 11999              	.LASF29:
 12000 0de7 70784E65 		.ascii	"pxNext\000"
 12000      787400
 12001              	.LASF143:
 12002 0dee 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 12002      6B506C61 
 12002      63654F6E 
 12002      4576656E 
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 325


 12002      744C6973 
 12003              	.LASF209:
 12004 0e0e 764C6973 		.ascii	"vListInitialise\000"
 12004      74496E69 
 12004      7469616C 
 12004      69736500 
 12005              	.LASF169:
 12006 0e1e 78546173 		.ascii	"xTaskNotifyWait\000"
 12006      6B4E6F74 
 12006      69667957 
 12006      61697400 
 12007              	.LASF168:
 12008 0e2e 756C5265 		.ascii	"ulReturn\000"
 12008      7475726E 
 12008      00
 12009              	.LASF34:
 12010 0e37 784C4953 		.ascii	"xLIST_ITEM\000"
 12010      545F4954 
 12010      454D00
 12011              	.LASF62:
 12012 0e42 75785072 		.ascii	"uxPriority\000"
 12012      696F7269 
 12012      747900
 12013              	.LASF186:
 12014 0e4d 70784465 		.ascii	"pxDelayedTaskList\000"
 12014      6C617965 
 12014      64546173 
 12014      6B4C6973 
 12014      7400
 12015              	.LASF161:
 12016 0e5f 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 12016      736B4765 
 12016      74546872 
 12016      6561644C 
 12016      6F63616C 
 12017              	.LASF81:
 12018 0e82 70634E61 		.ascii	"pcName\000"
 12018      6D6500
 12019              	.LASF100:
 12020 0e89 75785461 		.ascii	"uxTaskPriorityGet\000"
 12020      736B5072 
 12020      696F7269 
 12020      74794765 
 12020      7400
 12021              	.LASF149:
 12022 0e9b 76546173 		.ascii	"vTaskSetTimeOutState\000"
 12022      6B536574 
 12022      54696D65 
 12022      4F757453 
 12022      74617465 
 12023              	.LASF171:
 12024 0eb0 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 12024      7473546F 
 12024      436C6561 
 12024      724F6E45 
 12024      78697400 
 12025              	.LASF26:
ARM GAS  C:\Users\MALEKB~1\AppData\Local\Temp\ccswIl5R.s 			page 326


 12026 0ec4 55426173 		.ascii	"UBaseType_t\000"
 12026      65547970 
 12026      655F7400 
 12027              	.LASF147:
 12028 0ed0 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 12028      6B52656D 
 12028      6F766546 
 12028      726F6D55 
 12028      6E6F7264 
 12029              	.LASF134:
 12030 0ef2 70756C53 		.ascii	"pulStack\000"
 12030      7461636B 
 12030      00
 12031              	.LASF216:
 12032 0efb 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 12032      7456616C 
 12032      69646174 
 12032      65496E74 
 12032      65727275 
 12033              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
